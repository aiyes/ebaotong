/**
 * 
 */
package hyj.renbao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.alibaba.fastjson.JSON;
import com.ebtins.dto.open.CarQuoteInsItemVo;
import com.ebtins.dto.open.CarQuoteReq;
import com.ebtins.dto.open.CarQuoteRes;
import com.ebtins.open.common.util.MathUtil;
import com.ebtins.open.common.util.StringUtil;
import com.ebtins.open.common.util.ValidatorUtil;

import ebtins.smart.proxy.company.renbao.dto.CiInsureDemand;
import ebtins.smart.proxy.company.renbao.dto.PrpCitemKind;
import ebtins.smart.proxy.company.renbao.dto.RenbaoQuoteContent;
import ebtins.smart.proxy.company.renbao.dto.QuoteSave.PrpCfixations;
import ebtins.smart.proxy.company.renbao.dto.QuoteSave.PrpCitemCars;
import ebtins.smart.proxy.company.renbao.dto.QuoteSave.PrpCprofitDetails;
import ebtins.smart.proxy.company.renbao.dto.QuoteSave.PrpCprofitFactors;
import ebtins.smart.proxy.company.renbao.dto.QuoteSave.PrpDdismantleDetails;
import ebtins.smart.proxy.company.renbao.dto.QuoteSave.PrpDpayForPolicies;
import ebtins.smart.proxy.company.renbao.dto.QuoteSave.QueryPayForContent;
import ebtins.smart.proxy.company.renbao.dto.QuoteSave.RefreshPlanContent;
import ebtins.smart.proxy.company.renbao.dto.QuoteSave.RefreshPlanData;
import ebtins.smart.proxy.company.renbao.util.RenbaoClientSSLUtil;
import ebtins.smart.proxy.company.renbao.util.RenbaoUtil;
import hyj.login.RenBaoLoginA;

public class QuoteSave {
  /**
   *  执行4次post请求。
   *  1、queryPayFor.do请求;
   *  2、refreshPlanByTime.do请求;
   *  3、checkBeforeSave.do请求--校验
   *  4、insert.do请求。--保存
   *  第1次请求参数:保费计算请求参数+保费计算返回内容作参数
   *  第2次请求参数:第1次请求参数+第1次请求返回内容作参数,
   *  第3次请求参数:关系人信息、行驶证车辆、投保时间、保费，校验是否已有相同内容保存)
   *  第4次请求参数:第2次请求参数+第2次请求返回内容作参数
   */
  public Map<String,String> save(Map<String,String> params,Map<String,String> sumCiParams,Map<String,String> checkbfSaveParams,RenbaoQuoteContent resContent,CarQuoteRes res,String referer,String cookie,String randomProposalNo) throws Exception{
	   
	   Map<String,String> queryPayForParams = getQueryPayPamas(params,resContent,res);
	   
	   String checkTimeUrl = "http://10.134.130.208:8000/prpall/business/checkEngageTime.do?startDateBi=2016-10-30&startHourBi=0&startDateCi=2016-09-30&startHourCi=0&bizType=PROPOSAL";
	   String checkAgentUrl = "http://10.134.130.208:8000/prpall/agreement/checkAgentType.do";
	   String queryPayForUrl = "http://10.134.130.208:8000/prpall/business/queryPayFor.do?agreementNo=XY4400000001&riskCode=DAA&comCode=44030716&chgCostRate=1";
	   String refreshPlanUrl = "http://10.134.130.208:8000/prpall/business/refreshPlanByTimes.do";
	   String checkBfSaveUrl = "http://10.134.130.208:8000/prpall/business/checkBeforeSave.do";
	   String saveUrl = "http://10.134.130.208:8000/prpall/business/insert.do";
	   
	   /*String checkBody = RenBaoLoginA.get(checkTimeUrl, "GBK", cookie, referer, null);
	   System.out.println("checkBody-->"+checkBody);
	   String checkAgentBody = RenBaoLoginA.post(checkAgentUrl,checkAgentParams, "GBK", cookie, referer);
	   System.out.println("checkAgentBody-->"+checkAgentBody);*/
	  
	   String queryPayForBody = RenBaoLoginA.post(queryPayForUrl,queryPayForParams,"GBK",cookie,referer);
	   System.out.println("queryPayForBody-->"+queryPayForBody);
	   
	   setRefreshPlanPamas(queryPayForBody,queryPayForParams);//添加参数（参数来源于queryPayFor.do请求返回内容）
	   setTaxParams(queryPayForParams,res,resContent);//添加车船税参数
	   //String refreshBody = RenBaoLoginA.post(refreshPlanUrl,RefreshByTime.getRefreshByTimeParmas(""),"GBK",cookie,referer);
	   String refreshBody = RenBaoLoginA.post(refreshPlanUrl,queryPayForParams,"GBK",cookie,referer);
	   System.out.println("refreshBody-->"+refreshBody);
	  
	   String checkBfSaveBody = RenBaoLoginA.post(checkBfSaveUrl,checkbfSaveParams,"GBK",cookie,referer);
	   System.out.println("checkBfSaveBody-->"+checkBfSaveBody);
	   
	   setSaveParams(refreshBody,queryPayForParams);//添加缴费计划参数（参数来源于refreshPlanByTime.do请求返回内容）
	   queryPayForParams.putAll(sumCiParams);////添加商业险总保费、总净保费、总税额参数
	   queryPayForParams.put("prpCmain.riskCode", "DAA");
	   queryPayForParams.put("BIdemandNo",resContent.getData().get(0).getBiInsuredemandVoList().get(0).getCiInsureDemandDAA().getDemandNo());//商业险投保单查询码
	   //queryPayForParams.put("", value)
	   String saveBody = RenBaoLoginA.post(saveUrl,queryPayForParams,"GBK",cookie,referer);
	   System.out.println("saveBody-->"+saveBody);
	   
	  return queryPayForParams;
	   
  }
  public void setTaxParams(Map<String,String> queryPayForParams,CarQuoteRes res,RenbaoQuoteContent resContent){
	   queryPayForParams.put("prpCcarShipTax.taxType","1");
	   queryPayForParams.put("prpCcarShipTax.calculateMode","C2");
	   queryPayForParams.put("prpCcarShipTax.leviedDate","");
	   queryPayForParams.put("prpCcarShipTax.carKindCode","A01");
	   queryPayForParams.put("prpCcarShipTax.model","B11");
	   queryPayForParams.put("prpCcarShipTax.taxPayerIdentNo",queryPayForParams.get("prpCinsureds[3].identifyNumber"));//暂定车主为纳税人
	   queryPayForParams.put("prpCcarShipTax.taxPayerNumber",queryPayForParams.get("prpCinsureds[3].identifyNumber"));
	   queryPayForParams.put("prpCcarShipTax.carLotEquQuality","1505");
	   queryPayForParams.put("prpCcarShipTax.taxPayerCode",queryPayForParams.get("prpCinsureds[3].insuredCode"));
	   queryPayForParams.put("prpCcarShipTax.id.itemNo","1");
	   queryPayForParams.put("prpCcarShipTax.taxPayerNature","3");//纳税人类型 3自然人
	   queryPayForParams.put("prpCcarShipTax.taxPayerName",queryPayForParams.get("prpCinsureds[3].insuredName"));
	   queryPayForParams.put("prpCcarShipTax.taxUnit","辆/年");
	   queryPayForParams.put("prpCcarShipTax.taxComCode","");
	   queryPayForParams.put("prpCcarShipTax.taxComName","");
	   queryPayForParams.put("prpCcarShipTax.taxExplanation","");
	   queryPayForParams.put("prpCcarShipTax.taxAbateReason","");
	   queryPayForParams.put("prpCcarShipTax.dutyPaidProofNo_1","");
	   queryPayForParams.put("prpCcarShipTax.dutyPaidProofNo_2","");
	   queryPayForParams.put("prpCcarShipTax.dutyPaidProofNo","");
	   queryPayForParams.put("prpCcarShipTax.taxAbateRate","");
	   queryPayForParams.put("prpCcarShipTax.taxAbateAmount","");
	   queryPayForParams.put("prpCcarShipTax.taxAbateType","1");
	   queryPayForParams.put("prpCcarShipTax.taxUnitAmount",resContent.getData().get(0).getCiInsureVOList().get(0).getCiInsureTax().getCiInsureAnnualTaxes().get(0).getAnnualTaxAmount());
	   queryPayForParams.put("prpCcarShipTax.prePayTaxYear","");
	   queryPayForParams.put("prpCcarShipTax.prePolicyEndDate","");
	   queryPayForParams.put("prpCcarShipTax.payStartDate","");
	   queryPayForParams.put("prpCcarShipTax.payEndDate","");
	   queryPayForParams.put("prpCcarShipTax.thisPayTax",res.getCarQuoteInfo().getThisPayTax());
	   queryPayForParams.put("prpCcarShipTax.prePayTax","0");
	   queryPayForParams.put("prpCcarShipTax.taxItemCode","");
	   queryPayForParams.put("prpCcarShipTax.taxItemName","");
	   queryPayForParams.put("prpCcarShipTax.baseTaxation","");
	   queryPayForParams.put("prpCcarShipTax.taxRelifFlag","");
	   queryPayForParams.put("prpCcarShipTax.delayPayTax","0");
	   queryPayForParams.put("prpCcarShipTax.sumPayTax",res.getCarQuoteInfo().getSumPayTax());
	   queryPayForParams.put("CarShipInit_Flag","");
	   queryPayForParams.put("prpCcarShipTax.flag","");
	   queryPayForParams.put("quotationtaxPayerCode","");
	   queryPayForParams.put("prpCcarShipTax.isType02Lice","N");
	   queryPayForParams.put("prpCcarShipTax.type02LiceYExaMon","");
	   queryPayForParams.put("prpCcarShipTax.finesTax","0.00");
	   queryPayForParams.put("prpCcarShipTax.isHangOnWhether","N");
	   queryPayForParams.put("prpCcarShipTax.alwaysQuality","");
	   queryPayForParams.put("prpCcarShipTax.remark","");
	   queryPayForParams.put("prpCcarShipTax.identifyTypeTax","01");
	   queryPayForParams.put("prpCcarShipTax.carKindCodeTax","A01");
	   queryPayForParams.put("prpCcarShipTax.licenseTypeTax","02");//车辆号牌种类代码 02小型汽车号牌
  }
  public Map<String,String> getCheckAgentParams(){
	  Map<String,String> checkAgentParams = new HashMap<String,String>();
	   checkAgentParams.put("agentCode", "440321100061");
	   checkAgentParams.put("businessNature", "2");
	   checkAgentParams.put("validDate", "2016-11-29");
	   checkAgentParams.put("comCode", "44030716");
	   checkAgentParams.put("riskCode", "DAA,DZA");
	  return checkAgentParams;
  }
  public void setSaveParams(String refreshBody,Map<String,String> params) throws Exception{
	  RefreshPlanContent refreshPlanContent = JSON.parseObject(refreshBody,RefreshPlanContent.class);
	   List<RefreshPlanData> refreshData = refreshPlanContent.getData();
	   int refreshIndex =0;
	   for(RefreshPlanData refresh :refreshData){
		   RenbaoUtil.setMapValueByClazz(params,refresh, "prpCplanTemps["+refreshIndex+"].","add");
		   params.put("prpCplanTemps["+refreshIndex+"].currency", "CNY");
		   refreshIndex +=1;
	   }
  }
  //解决商业险缴费计划与商业险总保费不一致不一致问题
  public void setBiCiSumParams(Map<String,String> queryPayForParams,CarQuoteRes res){
	  queryPayForParams.put("sumAmountBI", res.getCarQuoteInfo().getSumInsured());
	  queryPayForParams.put("sumPremiumChgFlag","1");
	  queryPayForParams.put("prpCmain.sumPremium1",String.valueOf(res.getCarQuoteInfo().getSumPayAmount()));
	  queryPayForParams.put("sumPayTax1",res.getCarQuoteInfo().getSumPayTax());
	  /*queryPayForParams.put("sumAmountBI","");
	  queryPayForParams.put("sumAmountBI","");
	  queryPayForParams.put("sumAmountBI","");*/
	  
  }
  public void setRefreshPlanPamas(String queryPayForBody,Map<String,String> params) throws Exception{
	   QueryPayForContent queryPayForContent = JSON.parseObject(queryPayForBody,QueryPayForContent.class);
	   List<PrpDdismantleDetails>  prpDdismantleDetails = queryPayForContent.getData().get(0).getPrpDdismantleDetails();
	   int dismantleIndex =0;
	   System.out.println("queryPayForBody-->"+queryPayForBody);
	   System.out.println("prpDdismantleDetails-->"+JSON.toJSONString(prpDdismantleDetails));
	   for(PrpDdismantleDetails dismantle :prpDdismantleDetails){
		   RenbaoUtil.setMapValueByClazz(params,dismantle, "prpDdismantleDetails["+dismantleIndex+"].","add");
		   dismantleIndex +=1;
	   }
	   
	   List<PrpDpayForPolicies> prpDpayForPolicies = queryPayForContent.getData().get(0).getPrpDpayForPolicies();
	   for(int i=0,l=prpDpayForPolicies.size();i<l;i++){
		   params.put("prpCcommissionsTemp["+i+"].costType",prpDpayForPolicies.get(i).getCostType());
		   params.put("prpCcommissionsTemp["+i+"].riskCode",prpDpayForPolicies.get(i).getRiskCode());
		   params.put("prpCcommissionsTemp["+i+"].adjustFlag",prpDpayForPolicies.get(i).getAdjustFlag());
		   params.put("prpCcommissionsTemp["+i+"].costRate",prpDpayForPolicies.get(i).getCostRate());
		   params.put("prpCcommissionsTemp["+i+"].costRateUpper",prpDpayForPolicies.get(i).getCostRateUpper());
		   params.put("prpCcommissionsTemp["+i+"].agreementNo",prpDpayForPolicies.get(i).getId().getAgreementNo());
		   params.put("prpCcommissionsTemp["+i+"].configCode",prpDpayForPolicies.get(i).getId().getConfigCode());
		   params.put("prpCcommissionsTemp["+i+"].coinsRate","");
		   params.put("prpCcommissionsTemp["+i+"].costFee","");
		   params.put("prpCcommissionsTemp["+i+"].auditRate","");
		   params.put("prpCcommissionsTemp["+i+"].sumPremium","");
	   }
	  
  }
  public Map<String,String> getQueryPayPamas(Map<String,String> params,RenbaoQuoteContent resContent,CarQuoteRes res) throws Exception{
	  
	   PrpCfixations prpCfixations = resContent.getData().get(0).getBiInsuredemandVoList().get(0).getPrpCfixations().get(0);
	   PrpCfixations prpCfixationsCi = resContent.getData().get(0).getCiInsureVOList().get(0).getPrpCfixations().get(0);
	   PrpCitemCars prpCitemCars = resContent.getData().get(0).getBiInsuredemandVoList().get(0).getPrpCitemCars().get(0);
	   List<PrpCitemKind> prpCitemKindsBi = resContent.getData().get(0).getBiInsuredemandVoList().get(0).getPrpCitemKinds();
	   PrpCitemKind prpCitemKindsCi = resContent.getData().get(0).getCiInsureVOList().get(0).getPrpCitemKinds().get(0);
	   RenbaoUtil.setMapValueByClazz(params,prpCitemKindsCi, "prpCitemKindCI.","update");
	   RenbaoUtil.setMapValueByClazz(params,prpCfixations, "prpCfixationTemp.","add");
	   RenbaoUtil.setMapValueByClazz(params,prpCfixationsCi, "prpCfixationCITemp.","add");
	   RenbaoUtil.setMapValueByClazz(params,prpCitemCars, "prpCitemCar.","update");
	   String off3 = params.get("prpCitemCar.coefficient3");
	   double offNum = ValidatorUtil.isNumeric(off3)?MathUtil.getOneDecimal(Double.parseDouble(off3)):0;
	   params.put("prpCitemCar.coefficient3",String.valueOf(offNum));
	   CiInsureDemand ciInsureDemand = resContent.getData().get(0).getCiInsureVOList().get(0).getCiInsureDemand();
	   RenbaoUtil.setMapValueByClazz(params,ciInsureDemand, "ciInsureDemand.","update");
	   int profitIndex = 0;
	   for(PrpCitemKind item:prpCitemKindsBi){
		   String kindCode = item.getKindCode();
		   String itemPrefix = getPrefixbyCode(params,kindCode);
		   RenbaoUtil.setMapValueByClazz(params,item, itemPrefix,"update");
		   List<PrpCprofitDetails> prpCprofitDetails = item.getPrpCprofits().get(0).getPrpCprofitDetails();
		   for(PrpCprofitDetails profit:prpCprofitDetails){
			   RenbaoUtil.setMapValueByClazz(params,profit, "prpCprofitDetailsTemp["+profitIndex+"].","add");
			   String chooseFlatKey = "prpCprofitDetailsTemp["+profitIndex+"].chooseFlag";
			   params.put(chooseFlatKey,StringUtil.ObjectToString(params.get(chooseFlatKey)).equals("1")?"on":"");//prpCprofitDetailsTemp[1].chooseFlag=on转换为1
			   profitIndex = profitIndex +1;
		   }
	   }
	   List<PrpCprofitFactors> prpCprofitFactors = resContent.getData().get(0).getBiInsuredemandVoList().get(0).getPrpCprofitFactors();
	   int profitFactorIndex = 0;
	   for(PrpCprofitFactors profitFactor:prpCprofitFactors){//prpCprofitFactorsTemp[i].xxx
		   RenbaoUtil.setMapValueByClazz(params,profitFactor, "prpCprofitFactorsTemp["+profitFactorIndex+"].","add");
		   String chooseFlatKey = "prpCprofitFactorsTemp["+profitFactorIndex+"].chooseFlag";
		   params.put(chooseFlatKey,StringUtil.ObjectToString(params.get(chooseFlatKey)).equals("1")?"on":"");//prpCprofitFactorsTemp[1].chooseFlag=on转换为1
		   profitFactorIndex = profitFactorIndex +1;
	   }
	   //--特殊处理参数---
	   CarQuoteInsItemVo  ciItem = null;
	   for(CarQuoteInsItemVo item:res.getCarQuoteInfo().getCarQuoteInsItemList()){
		   if(item.getCategory()==0){
			   ciItem = item;
			   break;
		   }
	   }
	   params.put("prpCitemKindCI.premium", ciItem.getPremium());
	   params.put("prpCitemKindCI.unitAmount",ciItem.getInsuredAmount());
	   params.put("prpCitemKindCI.benchMarkPremium",ciItem.getBenchmarkPremium());
	  /* //---打印参数
	   Map<String,String> codeSaveMapParams = new HashMap<String,String>();
	   System.out.println("----打印参数----");
	   for(String key:params.keySet()){
		   if(key.contains("prpCcarShipTax.")){
			   codeSaveMapParams.put(key, params.get(key));
			   System.out.println(key+"="+params.get(key));
		   }
	   }*/
	   return params;
 }
  
 public String getPrefixbyCode(Map<String,String> params,String kindCode){
	 String prefix = "";
	 for(String key:params.keySet()){
		 if(kindCode.equals(params.get(key))&&key.indexOf(".")>-1){
			 prefix = key.substring(0,key.indexOf(".")+1);
		 }
	 }
	 return prefix;
 }
 public Map<String,String> getQueryPayForParams(String randomProposalNo){
	 Map<String,String> params1 = new HashMap<String,String>();
	   params1.put("carShipTaxPlatFormFlag","");
	   params1.put("randomProposalNo",randomProposalNo);
	   params1.put("initemKind_Flag","1");
	   params1.put("editType","NEW");
	   params1.put("bizType","PROPOSAL");
	   params1.put("ABflag","");
	   params1.put("isBICI","11");
	   params1.put("prpCmain.renewalFlag","");
	   params1.put("activityFlag","0");
	   params1.put("INTEGRAL_SWITCH","0");
	   params1.put("GuangdongSysFlag","");
	   params1.put("GDREALTIMECARFlag","");
	   params1.put("GDREALTIMEMOTORFlag","");
	   params1.put("GDCANCIINFOFlag","0");
	   params1.put("prpCmain.checkFlag","");
	   params1.put("prpCmain.othFlag","");
	   params1.put("prpCmain.dmFlag","");
	   params1.put("prpCmainCI.dmFlag","");
	   params1.put("prpCmain.underWriteCode","");
	   params1.put("prpCmain.underWriteName","");
	   params1.put("prpCmain.underWriteEndDate","");
	   params1.put("prpCmain.underWriteFlag","0");
	   params1.put("prpCmainCI.checkFlag","");
	   params1.put("prpCmainCI.underWriteFlag","");
	   params1.put("bizNo","");
	   params1.put("applyNo","");
	   params1.put("oldPolicyNo","");
	   params1.put("bizNoBZ","");
	   params1.put("bizNoCI","");
	   params1.put("prpPhead.endorDate","");
	   params1.put("prpPhead.validDate","");
	   params1.put("prpPhead.comCode","");
	   params1.put("sumAmountBI","902800");
	   params1.put("isTaxDemand","1");
	   params1.put("cIInsureFlag","1");
	   params1.put("bIInsureFlag","1");
	   params1.put("ciInsureSwitchKindCode","D01");
	   params1.put("ciInsureSwitchValues","0");
	   params1.put("cIInsureMotorFlag","1");
	   params1.put("mtPlatformTime","");
	   params1.put("noPermissionsCarKindCode","");
	   params1.put("isTaxFlag","");
	   params1.put("rePolicyNo","");
	   params1.put("oldPolicyType","");
	   params1.put("ZGRS_PURCHASEPRICE","");
	   params1.put("ZGRS_LOWESTPREMIUM","");
	   params1.put("clauseFlag","");
	   params1.put("prpCinsuredOwn_Flag","0");
	   params1.put("prpCinsuredDiv_Flag","0");
	   params1.put("prpCinsuredBon_Flag","0");
	   params1.put("relationType","");
	   params1.put("ciLimitDays","90");
	   params1.put("udFlag","0");
	   params1.put("kbFlag","0");
	   params1.put("sbFlag","0");
	   params1.put("xzFlag","0");
	   params1.put("userType","01");
	   params1.put("noNcheckFlag","0");
	   params1.put("planFlag","0");
	   params1.put("R_SWITCH","");
	   params1.put("biStartDate","2016-11-30");
	   params1.put("ciStartDate","2016-11-30");
	   params1.put("ciStartHour","0");
	   params1.put("ciEndDate","2017-11-29");
	   params1.put("ciEndHour","24");
	   params1.put("AGENTSWITCH","1");
	   params1.put("JFCDSWITCH","19");
	   params1.put("carShipTaxFlag","11");
	   params1.put("commissionFlag","");
	   params1.put("ICCardCHeck","0");
	   params1.put("riskWarningFlag","1");
	   params1.put("comCodePrefix","4403");
	   params1.put("DAGMobilePhoneNum","");
	   params1.put("scanSwitch","1000000000");
	   params1.put("haveScanFlag","0");
	   params1.put("diffDay","90");
	   params1.put("cylinderFlag","1");
	   params1.put("ciPlateVersion","6.0.0");
	   params1.put("biPlateVersion","7.2.1");
	   params1.put("criterionFlag","1");
	   params1.put("isQuotatonFlag","1");
	   params1.put("quotationRisk","DAA");
	   params1.put("getReplenishfactor","0");
	   params1.put("useYear","9");
	   params1.put("FREEINSURANCEFLAG","011111");
	   params1.put("isMotoDrunkDriv","1");
	   params1.put("immediateFlag","1");
	   params1.put("immediateFlagCI","1");
	   params1.put("claimAmountReason","");
	   params1.put("isQueryCarModelFlag","");
	   params1.put("isDirectFee","0");
	   params1.put("userCode","99355911");
	   params1.put("comCode","44030700");
	   params1.put("chgProfitFlag","");
	   params1.put("ciPlatTask","1000000000");
	   params1.put("biPlatTask","1000000000");
	   params1.put("upperCostRateBI","100.00");
	   params1.put("upperCostRateCI","4.00");
	   params1.put("rescueFundRate","");
	   params1.put("resureFundFee","");
	   params1.put("useCarshiptaxFlag","1");
	   params1.put("taxFreeLicenseNo","");
	   params1.put("isTaxFree","0");
	   params1.put("premiumChangeFlag","");
	   params1.put("operationTimeStamp","2016-11-29 09:04:30");
	   params1.put("VEHICLEPLAT","0");
	   params1.put("MOTORFASTTRACK","");
	   params1.put("motorFastTrack_flag","");
	   params1.put("MOTORFASTTRACK_INSUREDCODE","");
	   params1.put("currentDate","2016-11-29");
	   params1.put("vinModifyFlag","");
	   params1.put("addPolicyProjectCode","");
	   params1.put("isAddPolicy","0");
	   params1.put("commissionView","0");
	   params1.put("specialflag","");
	   params1.put("accountCheck","2");
	   params1.put("projectBak","");
	   params1.put("projectCodeBT","");
	   params1.put("projectCodeBTback","");
	   params1.put("checkTimeFlag","0");
	   params1.put("checkUndwrt","0");
	   params1.put("carDamagedNum","");
	   params1.put("insurePayTimes","0");
	   params1.put("claimAdjustValue","0");
	   params1.put("operatorProjectCode","1-917,2-917,4-917,5-917");
	   params1.put("lossFlagKind","");
	   params1.put("chooseFlagCI","1");
	   params1.put("unitedSaleRelatioStr","");
	   params1.put("purchasePriceU","");
	   params1.put("countryNatureU","");
	   params1.put("insurancefee_reform","1");
	   params1.put("operateDateForFG","");
	   params1.put("prpCmainCommon.clauseIssue","2");
	   params1.put("prpCmainCommon.key1","");
	   params1.put("amountFloat","30");
	   params1.put("vat_switch","1");
	   params1.put("pm_vehicle_switch","");
	   params1.put("isNetFlagEad","");
	   params1.put("isNetFlag","");
	   params1.put("netCommission_SwitchEad","");
	   params1.put("BiLastPolicyFlag","0");
	   params1.put("CiLastPolicyFlag","0");
	   params1.put("CiLastEffectiveDate","");
	   params1.put("CiLastExpireDate","");
	   params1.put("benchMarkPremium","");
	   params1.put("BiLastEffectiveDate","");
	   params1.put("BiLastExpireDate","");
	   params1.put("lastTotalPremium","");
	   params1.put("purchasePriceUFlag","");
	   params1.put("startDateU","");
	   params1.put("endDateU","");
	   params1.put("biCiFlagU","");
	   params1.put("biCiFlagIsChange","");
	   params1.put("biCiDateIsChange","");
	   params1.put("switchFlag","0");
	   params1.put("relatedFlag","0");
	   params1.put("riskCode","DAA");
	   params1.put("prpCmain.riskCode","");
	   params1.put("riskName","");
	   params1.put("prpCproposalVo.checkFlag","");
	   params1.put("prpCproposalVo.underWriteFlag","");
	   params1.put("prpCproposalVo.strStartDate","");
	   params1.put("prpCproposalVo.othFlag","");
	   params1.put("prpCproposalVo.checkUpCode","");
	   params1.put("prpCproposalVo.operatorCode1","");
	   params1.put("prpCproposalVo.businessNature","");
	   params1.put("agentCodeValidType","");
	   params1.put("agentCodeValidValue","");
	   params1.put("agentCodeValidIPPer","");
	   params1.put("qualificationNo","");
	   params1.put("qualificationName","");
	   params1.put("OLD_STARTDATE_CI","");
	   params1.put("OLD_ENDDATE_CI","");
	   params1.put("prpCmainCommon.greyList","");
	   params1.put("prpCmainCommon.image","");
	   params1.put("reinComPany","");
	   params1.put("reinPolicyNo","");
	   params1.put("reinStartDate","");
	   params1.put("reinEndDate","");
	   params1.put("prpCmain.proposalNo","");
	   params1.put("prpCmain.policyNo","");
	   params1.put("prpCmainCI.proposalNo","");
	   params1.put("prpCmainCI.policyNo","");
	   params1.put("prpPhead.applyNo","");
	   params1.put("prpPhead.endorseNo","");
	   params1.put("prpPheadCI.applyNo","");
	   params1.put("prpPheadCI.endorseNo","");
	   params1.put("prpCmain.comCode","44030716");
	   params1.put("comCodeDes","深圳市分公司梅林支公司中介业务一部");
	   params1.put("prpCmain.handler1Code","11095373");
	   params1.put("handler1CodeDes","王淑锦");
	   params1.put("homePhone","13632504158");
	   params1.put("officePhone","13632504158");
	   params1.put("moblie","13632504158");
	   params1.put("checkHandler1Code","1");
	   params1.put("handler1CodeDesFlag","B");
	   params1.put("handler1Info","11095373_FIELD_SEPARATOR_王淑锦_FIELD_SEPARATOR_13632504158_FIELD_SEPARATOR_13632504158_FIELD_SEPARATOR_13632504158_FIELD_SEPARATOR_B_FIELD_SEPARATOR_1299010736");
	   params1.put("prpCmainCommon.handler1code_uni","1299010736");
	   params1.put("prpCmain.handlerCode","11095373");
	   params1.put("handlerCodeDes","王淑锦");
	   params1.put("homePhonebak","");
	   params1.put("officePhonebak","");
	   params1.put("mobliebak","");
	   params1.put("handler1CodeDesFlagbak","");
	   params1.put("prpCmainCommon.handlercode_uni","1299010736");
	   params1.put("handlerInfo","11095373_FIELD_SEPARATOR_王淑锦_FIELD_SEPARATOR__FIELD_SEPARATOR__FIELD_SEPARATOR__FIELD_SEPARATOR__FIELD_SEPARATOR_1299010736");
	   params1.put("prpCmain.businessNature","2");
	   params1.put("businessNatureTranslation","专业代理业务");
	   params1.put("prpCmain.agentCode","440321100061");
	   params1.put("prpCmainagentName","深圳市宜保通保险销售有限公司");
	   params1.put("agentType","2110OY");
	   params1.put("agentCode","440321100061");
	   params1.put("tempAgentCode","2110OY");
	   params1.put("sumPremiumChgFlag","1");
	   params1.put("prpCmain.sumPremium1","7150.19");
	   params1.put("sumPayTax1","70.00");
	   params1.put("prpCmain.contractNo","");
	   params1.put("prpCmain.operateDate","2016-11-29");
	   params1.put("Today","2016-11-29");
	   params1.put("OperateDate","2016-12-29");
	   params1.put("prpCmain.makeCom","44030716");
	   params1.put("makeComDes","深圳市分公司梅林支公司中介业务一部");
	   params1.put("prpCmain.startDate","2016-11-30");
	   params1.put("prpCmain.startHour","0");
	   params1.put("prpCmain.endDate","2017-11-29");
	   params1.put("prpCmain.endHour","24");
	   params1.put("prpCmain.checkUpCode","");
	   params1.put("prpCmainCI.startDate","2016-11-30");
	   params1.put("prpCmainCI.startHour","0");
	   params1.put("prpCmainCI.endDate","2017-11-29");
	   params1.put("prpCmainCI.endHour","24");
	   params1.put("carPremium","0.0");
	   params1.put("insuredChangeFlag","0");
	   params1.put("refreshEadFlag","1");
	   params1.put("imageAdjustPixels","20");
	   params1.put("prpBatchVehicle.id.contractNo","");
	   params1.put("prpBatchVehicle.id.serialNo","");
	   params1.put("prpBatchVehicle.motorCadeNo","");
	   params1.put("prpBatchVehicle.licenseNo","");
	   params1.put("prpBatchVehicle.licenseType","");
	   params1.put("prpBatchVehicle.carKindCode","");
	   params1.put("prpBatchVehicle.proposalNo","");
	   params1.put("prpBatchVehicle.policyNo","");
	   params1.put("prpBatchVehicle.sumAmount","");
	   params1.put("prpBatchVehicle.sumPremium","");
	   params1.put("prpBatchVehicle.prpProjectCode","");
	   params1.put("prpBatchVehicle.coinsProjectCode","");
	   params1.put("prpBatchVehicle.profitProjectCode","");
	   params1.put("prpBatchVehicle.facProjectCode","");
	   params1.put("prpBatchVehicle.flag","");
	   params1.put("prpBatchVehicle.carId","");
	   params1.put("prpBatchVehicle.versionNo","");
	   params1.put("prpBatchMain.discountmode","");
	   params1.put("minusFlag","");
	   params1.put("paramIndex","");
	   params1.put("batchCIFlag","");
	   params1.put("batchBIFlag","");
	   params1.put("pageEndorRecorder.endorFlags","");
	   params1.put("endorDateEdit","");
	   params1.put("validDateEdit","");
	   params1.put("endDateEdit","");
	   params1.put("endorType","");
	   params1.put("prpPhead.endorType","");
	   params1.put("generatePtextFlag","0");
	   params1.put("generatePtextAgainFlag","0");
	   params1.put("quotationNo","");
	   params1.put("quotationFlag","");
	   params1.put("customerCode","");
	   params1.put("customerFlag","");
	   params1.put("compensateNo","");
	   params1.put("dilutiveType","");
	   params1.put("prpCfixationTemp.discount","95");
	   params1.put("prpCfixationTemp.id.riskCode","DAA");
	   params1.put("prpCfixationTemp.profits","5");
	   params1.put("prpCfixationTemp.cost","4.31");
	   params1.put("prpCfixationTemp.taxorAppend","5.6");
	   params1.put("prpCfixationTemp.payMentR","38");
	   params1.put("prpCfixationTemp.basePayMentR","30.44");
	   params1.put("prpCfixationTemp.poundAge","16.69");
	   params1.put("prpCfixationTemp.basePremium","100");
	   params1.put("prpCfixationTemp.riskPremium","100");
	   params1.put("prpCfixationTemp.riskSumPremium","0");
	   params1.put("prpCfixationTemp.signPremium","100");
	   params1.put("prpCfixationTemp.isQuotation","");
	   params1.put("prpCfixationTemp.riskClass","A");
	   params1.put("prpCfixationTemp.operationInfo","1");
	   params1.put("prpCfixationTemp.realDisCount","95");
	   params1.put("prpCfixationTemp.realProfits","58.05");
	   params1.put("prpCfixationTemp.realPayMentR","32.04");
	   params1.put("prpCfixationTemp.remark","");
	   params1.put("prpCfixationTemp.responseCode","");
	   params1.put("prpCfixationTemp.errorMessage","");
	   params1.put("prpCfixationTemp.profitClass","A");
	   params1.put("prpCfixationTemp.costRate","35");
	   params1.put("prpCfixationCITemp.discount","100");
	   params1.put("prpCfixationCITemp.id.riskCode","DZA");
	   params1.put("prpCfixationCITemp.profits","5");
	   params1.put("prpCfixationCITemp.cost","4.31");
	   params1.put("prpCfixationCITemp.taxorAppend","5.6");
	   params1.put("prpCfixationCITemp.payMentR","60.68");
	   params1.put("prpCfixationCITemp.basePayMentR","65.13");
	   params1.put("prpCfixationCITemp.poundAge","27.5");
	   params1.put("prpCfixationCITemp.basePremium","76914.88");
	   params1.put("prpCfixationCITemp.riskPremium","37945");
	   params1.put("prpCfixationCITemp.riskSumPremium","0");
	   params1.put("prpCfixationCITemp.signPremium","73587");
	   params1.put("prpCfixationCITemp.isQuotation","");
	   params1.put("prpCfixationCITemp.riskClass","B");
	   params1.put("prpCfixationCITemp.operationInfo","折扣以系统报价为准");
	   params1.put("prpCfixationCITemp.realDisCount","100");
	   params1.put("prpCfixationCITemp.realProfits","24.96");
	   params1.put("prpCfixationCITemp.realPayMentR","65.13");
	   params1.put("prpCfixationCITemp.remark","");
	   params1.put("prpCfixationCITemp.responseCode","");
	   params1.put("prpCfixationCITemp.errorMessage","");
	   params1.put("prpCfixationCITemp.profitClass","A");
	   params1.put("prpCfixationCITemp.costRate","0");
	   params1.put("prpCsalesFixes_[0].id.proposalNo","");
	   params1.put("prpCsalesFixes_[0].id.serialNo","");
	   params1.put("prpCsalesFixes_[0].comCode","");
	   params1.put("prpCsalesFixes_[0].businessNature","");
	   params1.put("prpCsalesFixes_[0].riskCode","");
	   params1.put("prpCsalesFixes_[0].version","");
	   params1.put("prpCsalesFixes_[0].isForMal","");
	   params1.put("IS_LOAN_MODIFY","00");
	   params1.put("isCarinfoPlat","00");
	   params1.put("kindAndAmount","");
	   params1.put("isSpecialFlag","");
	   params1.put("specialEngage","");
	   params1.put("licenseNoCar","");
	   params1.put("prpCitemCar.carLoanFlag","");
	   params1.put("carModelPlatFlag","0");
	   params1.put("updateQuotation","");
	   params1.put("prpCitemCar.licenseNo1","");
	   params1.put("pmCarOwner","");
	   params1.put("prpCitemCar.monopolyFlag","0");
	   params1.put("prpCitemCar.monopolyCode","");
	   params1.put("prpCitemCar.monopolyName","");
	   params1.put("prpCitemCar.id.itemNo","1");
	   params1.put("oldClauseType","F42");
	   params1.put("prpCitemCar.carId","");
	   params1.put("prpCitemCar.versionNo","");
	   params1.put("prpCmainCar.newDeviceFlag","");
	   params1.put("prpCitemCar.otherNature","");
	   params1.put("prpCitemCar.flag","");
	   params1.put("newCarFlagValue","2");
	   params1.put("prpCitemCar.discountType","");
	   params1.put("prpCitemCar.colorCode","");
	   params1.put("prpCitemCar.safeDevice","");
	   params1.put("prpCitemCar.coefficient1","1");
	   params1.put("prpCitemCar.coefficient2","1");
	   params1.put("prpCitemCar.coefficient3","0.1");
	   params1.put("prpCitemCar.startSiteName","");
	   params1.put("prpCitemCar.endSiteName","");
	   params1.put("prpCitemCar.newCarFlag","1");
	   params1.put("prpCitemCar.noNlocalFlag","0");
	   params1.put("prpCitemCar.licenseFlag","1");
	   params1.put("prpCitemCar.licenseNo","粤BM1233");
	   params1.put("codeLicenseType","LicenseType01,04,LicenseType02,01,LicenseType03,02,LicenseType04,02,LicenseType05,02,LicenseType06,02,LicenseType07,04,LicenseType08,04,LicenseType09,01,LicenseType10,01,LicenseType11,01,LicenseType12,01,LicenseType13,04,LicenseType14,04,LicenseType15,04,	LicenseType16,04,LicenseType17,04,LicenseType18,01,LicenseType19,01,LicenseType20,01,LicenseType21,01,LicenseType22,01,LicenseType23,03,LicenseType24,01,LicenseType25,01,LicenseType31,03,LicenseType32,03,LicenseType90,02");
	   params1.put("prpCitemCar.licenseType","02 ");
	   params1.put("LicenseTypeDes","小型汽车号牌");
	   params1.put("prpCitemCar.licenseColorCode","01");
	   params1.put("LicenseColorCodeDes","蓝");
	   params1.put("prpCitemCar.engineNo","E3045933");
	   params1.put("prpCitemCar.vinNo","LJ12EKS45E4724133");
	   params1.put("prpCitemCar.frameNo","LJ12EKS45E4724133");
	   params1.put("prpCitemCar.carKindCode","A01");
	   params1.put("CarKindCodeDes","客车");
	   params1.put("carKindCodeBak","A01");
	   params1.put("prpCitemCar.useNatureCode","211");
	   params1.put("useNatureCodeBak","211");
	   params1.put("useNatureCodeTrue","211");
	   params1.put("prpCitemCar.clauseType","F42");
	   params1.put("clauseTypeBak","F42");
	   params1.put("prpCitemCar.enrollDate","2016-11-23");
	   params1.put("tbSelYear1","2016");
	   params1.put("tbSelMonth1","11");
	   params1.put("enrollDateTrue","");
	   params1.put("prpCitemCar.useYears","0");
	   params1.put("prpCitemCar.runMiles","");
	   params1.put("taxAbateForPlat","");
	   params1.put("taxAbateForPlatCarModel","");
	   params1.put("prpCitemCar.modelDemandNo","");
	   params1.put("owner","");
	   params1.put("prpCitemCar.remark","");
	   params1.put("prpCitemCar.modelCode","JHAGID0012");
	   params1.put("prpCitemCar.brandName","江淮HFC7202EF轿车");
	   params1.put("modelCodes","");
	   params1.put("PurchasePriceScal","10");
	   params1.put("prpCitemCar.purchasePrice","102800");
	   params1.put("CarActualValueTrue","102800");
	   params1.put("CarActualValueTrue1","");
	   params1.put("SZpurchasePriceUp","1#10;2~8#10;8#10");
	   params1.put("SZpurchasePriceDown","0~0#-5;1~7#-10;7~100#-25");
	   params1.put("purchasePriceF48","200000");
	   params1.put("purchasePriceUp","-5");
	   params1.put("purchasePriceDown","10");
	   params1.put("purchasePriceOld","102800");
	   params1.put("prpCitemCar.actualValue","102800.00");
	   params1.put("prpCitemCar.tonCount","");
	   params1.put("prpCitemCar.exhaustScale","1.997");
	   params1.put("prpCitemCar.seatCount","5");
	   params1.put("seatCountTrue","");
	   params1.put("prpCitemCar.runAreaCode","11");
	   params1.put("prpCitemCar.carInsuredRelation","1");
	   params1.put("prpCitemCar.countryNature","01");
	   params1.put("prpCitemCar.cylinderCount","");
	   params1.put("prpCitemCar.loanVehicleFlag","0");
	   params1.put("prpCitemCar.transferVehicleFlag","0");
	   params1.put("prpCitemCar.transferDate","");
	   params1.put("prpCitemCar.modelCodeAlias","");
	   params1.put("prpCitemCar.carLotEquQuality","1505");
	   params1.put("isQuotation","1");
	   params1.put("prpCmainCommon.queryArea","440000");
	   params1.put("queryArea","广东省");
	   params1.put("vehiclePricer","102800");
	   params1.put("prpCitemCar.isDropinVisitInsure","0");
	   params1.put("prpCitemCar.energyType","0");
	   params1.put("prpCmainChannel.assetAgentName","");
	   params1.put("prpCmainChannel.assetAgentCode","");
	   params1.put("prpCmainChannel.assetAgentPhone","");
	   params1.put("SYFlag","0");
	   params1.put("MTFlag","0");
	   params1.put("BMFlag","0");
	   params1.put("STFlag","0");
	   params1.put("prpCcarDevices_[0].deviceName","");
	   params1.put("prpCcarDevices_[0].id.itemNo","1");
	   params1.put("prpCcarDevices_[0].id.proposalNo","");
	   params1.put("prpCcarDevices_[0].id.serialNo","");
	   params1.put("prpCcarDevices_[0].flag","");
	   params1.put("prpCcarDevices_[0].quantity","");
	   params1.put("prpCcarDevices_[0].purchasePrice","");
	   params1.put("prpCcarDevices_[0].buyDate","");
	   params1.put("prpCcarDevices_[0].actualValue","");
	   params1.put("hidden_index_citemcar","0");
	   params1.put("editFlag","1");
	   params1.put("prpCmainCommon.ext2","");
	   params1.put("configedRepeatTimesLocal","1");
	   params1.put("prpCinsureds_[0].insuredFlag","11100000000000000000000000000A");
	   params1.put("iinsuredFlag","投保人/被保险人/车主");
	   params1.put("iinsuredType","个人");
	   params1.put("iinsuredCode","4403106000999964");
	   params1.put("iinsuredName","张力行");
	   params1.put("iunitType","");
	   params1.put("iidentifyType","身份证");
	   params1.put("iidentifyNumber","440303198908041317");
	   params1.put("iinsuredAddress","广东省深圳市宝安区深圳市");
	   params1.put("iphoneNumber","");
	   params1.put("prpCinsureds_[0].id.serialNo","1");
	   params1.put("prpCinsureds_[0].insuredType","1");
	   params1.put("prpCinsureds_[0].insuredNature","1");
	   params1.put("prpCinsureds_[0].insuredCode","4403106000999964");
	   params1.put("prpCinsureds_[0].insuredName","张力行");
	   params1.put("prpCinsureds_[0].unitType","");
	   params1.put("prpCinsureds_[0].identifyType","01");
	   params1.put("prpCinsureds_[0].identifyNumber","440303198908041317");
	   params1.put("prpCinsureds_[0].insuredAddress","广东省深圳市宝安区深圳市");
	   params1.put("prpCinsureds_[0].phoneNumber","");
	   params1.put("prpCinsureds_[0].drivingYears","");
	   params1.put("prpCinsureds_[0].mobile","13530108337");
	   params1.put("prpCinsureds_[0].postCode","");
	   params1.put("prpCinsureds_[0].versionNo","4");
	   params1.put("prpCinsureds_[0].auditStatus","2");
	   params1.put("prpCinsureds_[0].sex","1");
	   params1.put("prpCinsureds_[0].countryCode","CHN");
	   params1.put("prpCinsureds_[0].flag","");
	   params1.put("prpCinsureds_[0].age","27");
	   params1.put("prpCinsureds_[0].drivingLicenseNo","440303198908041317");
	   params1.put("prpCinsureds_[0].drivingCarType","");
	   params1.put("prpCinsureds_[0].appendPrintName","");
	   params1.put("prpCinsureds_[0].causetroubleTimes","");
	   params1.put("prpCinsureds_[0].acceptLicenseDate","");
	   params1.put("isCheckRepeat_[0]","");
	   params1.put("configedRepeatTimes_[0]","");
	   params1.put("repeatTimes_[0]","");
	   params1.put("prpCinsureds_[0].unifiedSocialCreditCode","");
	   params1.put("prpCinsureds_[0].soldierRelations","");
	   params1.put("prpCinsureds_[0].soldierIdentifyType","");
	   params1.put("prpCinsureds_[0].soldierIdentifyNumber","");
	   params1.put("imobile","135****8337");
	   params1.put("iauditStatus","2");
	   params1.put("iversionNo","4");
	   params1.put("hidden_index_insured","0");
	   params1.put("prpCinsureds[0].insuredFlag","11100000000000000000000000000A");
	   params1.put("iinsuredFlag","投保人/被保险人/车主");
	   params1.put("iinsuredType","个人");
	   params1.put("iinsuredCode","4403106000999964");
	   params1.put("iinsuredName","张力行");
	   params1.put("iunitType","");
	   params1.put("iidentifyType","身份证");
	   params1.put("iidentifyNumber","440303198908041317");
	   params1.put("iinsuredAddress","广东省深圳市宝安区深圳市");
	   params1.put("iphoneNumber","");
	   params1.put("prpCinsureds[0].id.serialNo","1");
	   params1.put("prpCinsureds[0].insuredType","1");
	   params1.put("prpCinsureds[0].insuredNature","1");
	   params1.put("prpCinsureds[0].insuredCode","4403106000999964");
	   params1.put("prpCinsureds[0].insuredName","张力行");
	   params1.put("prpCinsureds[0].unitType","");
	   params1.put("prpCinsureds[0].identifyType","01");
	   params1.put("prpCinsureds[0].identifyNumber","440303198908041317");
	   params1.put("prpCinsureds[0].insuredAddress","广东省深圳市宝安区深圳市");
	   params1.put("prpCinsureds[0].phoneNumber","");
	   params1.put("prpCinsureds[0].drivingYears","");
	   params1.put("prpCinsureds[0].mobile","13530108337");
	   params1.put("prpCinsureds[0].postCode","");
	   params1.put("prpCinsureds[0].versionNo","4");
	   params1.put("prpCinsureds[0].auditStatus","2");
	   params1.put("prpCinsureds[0].sex","1");
	   params1.put("prpCinsureds[0].countryCode","CHN");
	   params1.put("prpCinsureds[0].flag","");
	   params1.put("prpCinsureds[0].age","27");
	   params1.put("prpCinsureds[0].drivingLicenseNo","440303198908041317");
	   params1.put("prpCinsureds[0].drivingCarType","");
	   params1.put("prpCinsureds[0].appendPrintName","");
	   params1.put("prpCinsureds[0].causetroubleTimes","");
	   params1.put("prpCinsureds[0].acceptLicenseDate","");
	   params1.put("isCheckRepeat[0]","");
	   params1.put("configedRepeatTimes[0]","");
	   params1.put("repeatTimes[0]","");
	   params1.put("prpCinsureds[0].unifiedSocialCreditCode","");
	   params1.put("prpCinsureds[0].soldierRelations","");
	   params1.put("prpCinsureds[0].soldierIdentifyType","");
	   params1.put("prpCinsureds[0].soldierIdentifyNumber","");
	   params1.put("imobile","135****8337");
	   params1.put("iauditStatus","2");
	   params1.put("iversionNo","4");
	   params1.put("_insuredFlag_hide","投保人");
	   params1.put("_insuredFlag_hide","被保险人");
	   params1.put("_insuredFlag_hide","车主");
	   params1.put("_insuredFlag_hide","指定驾驶人");
	   params1.put("_insuredFlag_hide","受益人");
	   params1.put("_insuredFlag_hide","港澳车车主");
	   params1.put("_insuredFlag_hide","联系人");
	   params1.put("_insuredFlag","0");
	   params1.put("_insuredFlag_hide","委托人");
	   params1.put("_resident","");
	   params1.put("_insuredType","1");
	   params1.put("_insuredCode","");
	   params1.put("_insuredName","");
	   params1.put("customerURL","http://10.134.130.208:8300/cif");
	   params1.put("_isCheckRepeat","");
	   params1.put("_configedRepeatTimes","");
	   params1.put("_repeatTimes","");
	   params1.put("_identifyType","01");
	   params1.put("_identifyNumber","");
	   params1.put("_unifiedSocialCreditCode","");
	   params1.put("_mobile","");
	   params1.put("_mobile1","");
	   params1.put("_sex","1");
	   params1.put("_age","");
	   params1.put("_drivingYears","");
	   params1.put("_countryCode","CHN");
	   params1.put("_insuredAddress","");
	   params1.put("_postCode","");
	   params1.put("_appendPrintName","");
	   params1.put("group_code","");
	   params1.put("_auditStatus","");
	   params1.put("_auditStatusDes","");
	   params1.put("_versionNo","");
	   params1.put("_drivingLicenseNo","");
	   params1.put("_soldierRelations","0");
	   params1.put("_soldierIdentifyType","000");
	   params1.put("_soldierIdentifyNumber","");
	   params1.put("_drivingCarType","");
	   params1.put("CarKindLicense","");
	   params1.put("_causetroubleTimes","");
	   params1.put("_acceptLicenseDate","");
	   params1.put("prpCmainCar.agreeDriverFlag","");
	   params1.put("updateIndex","-1");
	   params1.put("prpBatchProposal.profitType","");
	   params1.put("motorFastTrack_Amount","");
	   params1.put("insurancefee_reform","1");
	   params1.put("prpCmainCommon.clauseIssue","2");
	   params1.put("prpCprofitDetailsTemp_[0].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp_[0].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp_[0].condition","自主核保优惠系数");
	   params1.put("profitRateTemp_[0]","1.05555556");
	   params1.put("prpCprofitDetailsTemp_[0].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp_[0].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp_[0].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp_[0].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp_[0].id.itemKindNo","16");
	   params1.put("prpCprofitDetailsTemp_[0].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp_[0].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp_[0].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp_[0].kindCode","050934");
	   params1.put("prpCprofitDetailsTemp_[0].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp_[0].flag","");
	   params1.put("prpCprofitFactorsTemp_[0].chooseFlag","on");
	   params1.put("serialNo_[0]","3");
	   params1.put("prpCprofitFactorsTemp_[0].profitName","自主核保优惠系数");
	   params1.put("prpCprofitFactorsTemp_[0].condition","自主核保优惠系数");
	   params1.put("rateTemp_[0]","1.05555556");
	   params1.put("prpCprofitFactorsTemp_[0].rate","105.555556");
	   params1.put("prpCprofitFactorsTemp_[0].lowerRate","75");
	   params1.put("prpCprofitFactorsTemp_[0].upperRate","125");
	   params1.put("prpCprofitFactorsTemp_[0].id.profitCode","C03");
	   params1.put("prpCprofitFactorsTemp_[0].id.conditionCode","C03");
	   params1.put("prpCprofitFactorsTemp_[0].flag","");
	   params1.put("prpCprofitFactorFixesTemp_[0].id.profitCode","");
	   params1.put("prpCprofitFactorFixesTemp_[0].id.conditionCode","");
	   params1.put("prpCprofitFactorFixesTemp_[0].id.profitCodeForFather","");
	   params1.put("prpCprofitFactorFixesTemp_[0].id.conditionCodeForFather","");
	   params1.put("prpCprofitFactorFixesTemp_[0].profitName","");
	   params1.put("prpCprofitFactorFixesTemp_[0].condition","");
	   params1.put("prpCprofitFactorFixesTemp_[0].upperRate","");
	   params1.put("prpCprofitFactorFixesTemp_[0].lowerRate","");
	   params1.put("prpCprofitFactorFixesTemp_[0].rate","");
	   params1.put("prpCprofitFactorFixesTemp_[0].chooseFlag","");
	   params1.put("prpCprofitFactorFixesTemp_[0].flag","");
	   params1.put("prpCitemKind.shortRateFlag","2");
	   params1.put("prpCitemKind.shortRate","100");
	   params1.put("prpCitemKind.currency","CNY");
	   params1.put("prpCmainCommon.groupFlag","0");
	   params1.put("prpCmain.preDiscount","");
	   params1.put("sumBenchPremium","6526.52");
	   params1.put("prpCmain.discount","0.94999939");
	   params1.put("prpCmain.sumPremium","6200.19");
	   params1.put("premiumF48","5000");
	   params1.put("prpCmain.sumNetPremium","5849.25");
	   params1.put("prpCmain.sumTaxPremium","350.94");
	   params1.put("passengersSwitchFlag","");
	   params1.put("prpCitemKindsTemp[0].min","");
	   params1.put("prpCitemKindsTemp[0].max","");
	   params1.put("prpCitemKindsTemp[0].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[0].itemKindNo","");
	   params1.put("prpCitemKindsTemp[0].clauseCode","050051");
	   params1.put("prpCitemKindsTemp[0].kindCode","050202");
	   params1.put("prpCitemKindsTemp[0].kindName","机动车损失保险");
	   params1.put("prpCitemKindsTemp[0].deductible","0.00");
	   params1.put("prpCitemKindsTemp[0].deductibleRate","0");
	   params1.put("prpCitemKindsTemp[0].pureRiskPremium","1361.595560");
	   params1.put("prpCitemKindsTemp[0].specialFlag","on");
	   params1.put("prpCitemKindsTemp[0].amount","102800.00");
	   params1.put("prpCitemKindsTemp[0].calculateFlag","Y11Y000");
	   params1.put("prpCitemKindsTemp[0].startDate","");
	   params1.put("prpCitemKindsTemp[0].startHour","");
	   params1.put("prpCitemKindsTemp[0].endDate","");
	   params1.put("prpCitemKindsTemp[0].endHour","");
	   params1.put("relateSpecial[0]","050930");
	   params1.put("prpCitemKindsTemp[0].flag"," 100000");
	   params1.put("prpCitemKindsTemp[0].basePremium","0");
	   params1.put("prpCitemKindsTemp[0].riskPremium","0");
	   params1.put("prpCitemKindsTemp[0].rate","");
	   params1.put("prpCitemKindsTemp[0].benchMarkPremium","2094.76");
	   params1.put("prpCitemKindsTemp[0].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[0].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[0].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[0].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[0]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[0].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[0].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[0].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[0].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[0].id.itemKindNo","1");
	   params1.put("prpCprofitDetailsTemp[0].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[0].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[0].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[0].kindCode","050202");
	   params1.put("prpCprofitDetailsTemp[0].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[0].flag","");
	   params1.put("prpCprofitDetailsTemp[1].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[1].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[1].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[1]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[1].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[1].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[1].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[1].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[1].id.itemKindNo","1");
	   params1.put("prpCprofitDetailsTemp[1].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[1].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[1].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[1].kindCode","050202");
	   params1.put("prpCprofitDetailsTemp[1].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[1].flag","");
	   params1.put("prpCprofitDetailsTemp[2].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[2].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[2].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[2]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[2].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[2].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[2].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[2].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[2].id.itemKindNo","1");
	   params1.put("prpCprofitDetailsTemp[2].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[2].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[2].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[2].kindCode","050202");
	   params1.put("prpCprofitDetailsTemp[2].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[2].flag","");
	   params1.put("prpCitemKindsTemp[0].premium","1990.02");
	   params1.put("prpCitemKindsTemp[0].netPremium","1877.38");
	   params1.put("prpCitemKindsTemp[0].taxPremium","112.64");
	   params1.put("prpCitemKindsTemp[0].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[0].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[1].min","");
	   params1.put("prpCitemKindsTemp[1].max","");
	   params1.put("prpCitemKindsTemp[1].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[1].itemKindNo","");
	   params1.put("prpCitemKindsTemp[1].clauseCode","050054");
	   params1.put("prpCitemKindsTemp[1].kindCode","050501");
	   params1.put("prpCitemKindsTemp[1].kindName","盗抢险");
	   params1.put("prpCitemKindsTemp[1].unitAmount","");
	   params1.put("prpCitemKindsTemp[1].quantity","");
	   params1.put("prpCitemKindsTemp[1].specialFlag","on");
	   params1.put("prpCitemKindsTemp[1].amount","102800.00");
	   params1.put("prpCitemKindsTemp[1].calculateFlag","N11Y000");
	   params1.put("prpCitemKindsTemp[1].startDate","");
	   params1.put("prpCitemKindsTemp[1].startHour","");
	   params1.put("prpCitemKindsTemp[1].endDate","");
	   params1.put("prpCitemKindsTemp[1].endHour","");
	   params1.put("relateSpecial[1]","050932");
	   params1.put("prpCitemKindsTemp[1].flag"," 100000");
	   params1.put("prpCitemKindsTemp[1].basePremium","78.00");
	   params1.put("prpCitemKindsTemp[1].riskPremium","0");
	   params1.put("prpCitemKindsTemp[1].rate","0.3380");
	   params1.put("prpCitemKindsTemp[1].benchMarkPremium","654.56");
	   params1.put("prpCitemKindsTemp[1].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[3].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[3].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[3].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[3]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[3].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[3].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[3].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[3].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[3].id.itemKindNo","2");
	   params1.put("prpCprofitDetailsTemp[3].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[3].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[3].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[3].kindCode","050501");
	   params1.put("prpCprofitDetailsTemp[3].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[3].flag","");
	   params1.put("prpCprofitDetailsTemp[4].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[4].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[4].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[4]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[4].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[4].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[4].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[4].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[4].id.itemKindNo","2");
	   params1.put("prpCprofitDetailsTemp[4].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[4].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[4].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[4].kindCode","050501");
	   params1.put("prpCprofitDetailsTemp[4].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[4].flag","");
	   params1.put("prpCprofitDetailsTemp[5].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[5].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[5].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[5]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[5].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[5].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[5].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[5].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[5].id.itemKindNo","2");
	   params1.put("prpCprofitDetailsTemp[5].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[5].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[5].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[5].kindCode","050501");
	   params1.put("prpCprofitDetailsTemp[5].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[5].flag","");
	   params1.put("prpCitemKindsTemp[1].premium","621.83");
	   params1.put("prpCitemKindsTemp[1].netPremium","586.63");
	   params1.put("prpCitemKindsTemp[1].taxPremium","35.20");
	   params1.put("prpCitemKindsTemp[1].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[1].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[2].min","");
	   params1.put("prpCitemKindsTemp[2].max","");
	   params1.put("prpCitemKindsTemp[2].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[2].itemKindNo","");
	   params1.put("prpCitemKindsTemp[2].clauseCode","050052");
	   params1.put("prpCitemKindsTemp[2].kindCode","050602");
	   params1.put("prpCitemKindsTemp[2].kindName","第三者责任保险");
	   params1.put("prpCitemKindsTemp[2].unitAmount","");
	   params1.put("prpCitemKindsTemp[2].quantity","");
	   params1.put("prpCitemKindsTemp[2].specialFlag","on");
	   params1.put("prpCitemKindsTemp[2].amount","500000.00");
	   params1.put("prpCitemKindsTemp[2].calculateFlag","Y21Y000");
	   params1.put("prpCitemKindsTemp[2].startDate","");
	   params1.put("prpCitemKindsTemp[2].startHour","");
	   params1.put("prpCitemKindsTemp[2].endDate","");
	   params1.put("prpCitemKindsTemp[2].endHour","");
	   params1.put("relateSpecial[2]","050931");
	   params1.put("prpCitemKindsTemp[2].flag"," 100000");
	   params1.put("prpCitemKindsTemp[2].basePremium","0");
	   params1.put("prpCitemKindsTemp[2].riskPremium","0");
	   params1.put("prpCitemKindsTemp[2].rate","");
	   params1.put("prpCitemKindsTemp[2].benchMarkPremium","1854.00");
	   params1.put("prpCitemKindsTemp[2].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[6].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[6].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[6].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[6]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[6].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[6].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[6].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[6].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[6].id.itemKindNo","3");
	   params1.put("prpCprofitDetailsTemp[6].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[6].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[6].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[6].kindCode","050602");
	   params1.put("prpCprofitDetailsTemp[6].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[6].flag","");
	   params1.put("prpCprofitDetailsTemp[7].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[7].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[7].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[7]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[7].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[7].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[7].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[7].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[7].id.itemKindNo","3");
	   params1.put("prpCprofitDetailsTemp[7].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[7].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[7].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[7].kindCode","050602");
	   params1.put("prpCprofitDetailsTemp[7].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[7].flag","");
	   params1.put("prpCprofitDetailsTemp[8].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[8].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[8].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[8]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[8].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[8].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[8].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[8].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[8].id.itemKindNo","3");
	   params1.put("prpCprofitDetailsTemp[8].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[8].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[8].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[8].kindCode","050602");
	   params1.put("prpCprofitDetailsTemp[8].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[8].flag","");
	   params1.put("prpCitemKindsTemp[2].premium","1761.30");
	   params1.put("prpCitemKindsTemp[2].netPremium","1661.60");
	   params1.put("prpCitemKindsTemp[2].taxPremium","99.70");
	   params1.put("prpCitemKindsTemp[2].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[2].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[3].min","");
	   params1.put("prpCitemKindsTemp[3].max","");
	   params1.put("prpCitemKindsTemp[3].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[3].itemKindNo","");
	   params1.put("prpCitemKindsTemp[3].clauseCode","050053");
	   params1.put("prpCitemKindsTemp[3].kindCode","050711");
	   params1.put("prpCitemKindsTemp[3].kindName","车上人员责任险（司机）");
	   params1.put("prpCitemKindsTemp[3].unitAmount","");
	   params1.put("prpCitemKindsTemp[3].quantity","");
	   params1.put("prpCitemKindsTemp[3].specialFlag","on");
	   params1.put("prpCitemKindsTemp[3].amount","100000.00");
	   params1.put("prpCitemKindsTemp[3].calculateFlag","Y21Y00");
	   params1.put("prpCitemKindsTemp[3].startDate","");
	   params1.put("prpCitemKindsTemp[3].startHour","");
	   params1.put("prpCitemKindsTemp[3].endDate","");
	   params1.put("prpCitemKindsTemp[3].endHour","");
	   params1.put("relateSpecial[3]","050933");
	   params1.put("prpCitemKindsTemp[3].flag"," 100000");
	   params1.put("prpCitemKindsTemp[3].basePremium","0");
	   params1.put("prpCitemKindsTemp[3].riskPremium","0");
	   params1.put("prpCitemKindsTemp[3].rate","0.1365");
	   params1.put("prpCitemKindsTemp[3].benchMarkPremium","210.00");
	   params1.put("prpCitemKindsTemp[3].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[9].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[9].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[9].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[9]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[9].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[9].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[9].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[9].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[9].id.itemKindNo","4");
	   params1.put("prpCprofitDetailsTemp[9].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[9].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[9].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[9].kindCode","050711");
	   params1.put("prpCprofitDetailsTemp[9].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[9].flag","");
	   params1.put("prpCprofitDetailsTemp[10].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[10].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[10].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[10]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[10].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[10].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[10].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[10].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[10].id.itemKindNo","4");
	   params1.put("prpCprofitDetailsTemp[10].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[10].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[10].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[10].kindCode","050711");
	   params1.put("prpCprofitDetailsTemp[10].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[10].flag","");
	   params1.put("prpCprofitDetailsTemp[11].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[11].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[11].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[11]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[11].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[11].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[11].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[11].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[11].id.itemKindNo","4");
	   params1.put("prpCprofitDetailsTemp[11].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[11].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[11].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[11].kindCode","050711");
	   params1.put("prpCprofitDetailsTemp[11].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[11].flag","");
	   params1.put("prpCitemKindsTemp[3].premium","199.50");
	   params1.put("prpCitemKindsTemp[3].netPremium","188.21");
	   params1.put("prpCitemKindsTemp[3].taxPremium","11.29");
	   params1.put("prpCitemKindsTemp[3].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[3].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[4].min","");
	   params1.put("prpCitemKindsTemp[4].max","");
	   params1.put("prpCitemKindsTemp[4].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[4].itemKindNo","");
	   params1.put("prpCitemKindsTemp[4].clauseCode","050053");
	   params1.put("prpCitemKindsTemp[4].kindCode","050712");
	   params1.put("prpCitemKindsTemp[4].kindName","车上人员责任险（乘客）");
	   params1.put("prpCitemKindsTemp[4].unitAmount","50000");
	   params1.put("prpCitemKindsTemp[4].quantity","4");
	   params1.put("prpCitemKindsTemp[4].specialFlag","on");
	   params1.put("prpCitemKindsTemp[4].amount","200000.00");
	   params1.put("prpCitemKindsTemp[4].calculateFlag","Y21Y00");
	   params1.put("prpCitemKindsTemp[4].startDate","");
	   params1.put("prpCitemKindsTemp[4].startHour","");
	   params1.put("prpCitemKindsTemp[4].endDate","");
	   params1.put("prpCitemKindsTemp[4].endHour","");
	   params1.put("relateSpecial[4]","050934");
	   params1.put("prpCitemKindsTemp[4].flag"," 100000");
	   params1.put("prpCitemKindsTemp[4].basePremium","0");
	   params1.put("prpCitemKindsTemp[4].riskPremium","0");
	   params1.put("prpCitemKindsTemp[4].rate","0.0650");
	   params1.put("prpCitemKindsTemp[4].benchMarkPremium","200.00");
	   params1.put("prpCitemKindsTemp[4].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[12].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[12].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[12].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[12]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[12].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[12].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[12].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[12].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[12].id.itemKindNo","5");
	   params1.put("prpCprofitDetailsTemp[12].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[12].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[12].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[12].kindCode","050712");
	   params1.put("prpCprofitDetailsTemp[12].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[12].flag","");
	   params1.put("prpCprofitDetailsTemp[13].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[13].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[13].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[13]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[13].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[13].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[13].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[13].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[13].id.itemKindNo","5");
	   params1.put("prpCprofitDetailsTemp[13].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[13].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[13].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[13].kindCode","050712");
	   params1.put("prpCprofitDetailsTemp[13].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[13].flag","");
	   params1.put("prpCprofitDetailsTemp[14].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[14].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[14].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[14]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[14].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[14].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[14].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[14].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[14].id.itemKindNo","5");
	   params1.put("prpCprofitDetailsTemp[14].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[14].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[14].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[14].kindCode","050712");
	   params1.put("prpCprofitDetailsTemp[14].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[14].flag","");
	   params1.put("prpCitemKindsTemp[4].premium","190.00");
	   params1.put("prpCitemKindsTemp[4].netPremium","179.25");
	   params1.put("prpCitemKindsTemp[4].taxPremium","10.75");
	   params1.put("prpCitemKindsTemp[4].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[4].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[5].min","");
	   params1.put("prpCitemKindsTemp[5].max","");
	   params1.put("prpCitemKindsTemp[5].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[5].itemKindNo","");
	   params1.put("kindcodesub","");
	   params1.put("prpCitemKindsTemp[5].clauseCode","050059");
	   params1.put("prpCitemKindsTemp[5].kindCode","050211");
	   params1.put("relateSpecial[5]","050937");
	   params1.put("prpCitemKindsTemp[5].kindName","车身划痕损失险");
	   params1.put("prpCitemKindsTemp[5].specialFlag","on");
	   params1.put("prpCitemKindsTemp[5].amount","2000.00");
	   params1.put("prpCitemKindsTemp[5].calculateFlag","N12Y000");
	   params1.put("prpCitemKindsTemp[5].startDate","");
	   params1.put("prpCitemKindsTemp[5].startHour","");
	   params1.put("prpCitemKindsTemp[5].endDate","");
	   params1.put("prpCitemKindsTemp[5].endHour","");
	   params1.put("prpCitemKindsTemp[5].flag"," 200000");
	   params1.put("prpCitemKindsTemp[5].basePremium","0");
	   params1.put("prpCitemKindsTemp[5].riskPremium","0");
	   params1.put("prpCitemKindsTemp[5].rate","");
	   params1.put("prpCitemKindsTemp[5].benchMarkPremium","400.00");
	   params1.put("prpCitemKindsTemp[5].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[15].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[15].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[15].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[15]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[15].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[15].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[15].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[15].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[15].id.itemKindNo","6");
	   params1.put("prpCprofitDetailsTemp[15].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[15].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[15].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[15].kindCode","050211");
	   params1.put("prpCprofitDetailsTemp[15].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[15].flag","");
	   params1.put("prpCprofitDetailsTemp[16].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[16].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[16].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[16]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[16].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[16].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[16].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[16].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[16].id.itemKindNo","6");
	   params1.put("prpCprofitDetailsTemp[16].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[16].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[16].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[16].kindCode","050211");
	   params1.put("prpCprofitDetailsTemp[16].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[16].flag","");
	   params1.put("prpCprofitDetailsTemp[17].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[17].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[17].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[17]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[17].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[17].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[17].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[17].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[17].id.itemKindNo","6");
	   params1.put("prpCprofitDetailsTemp[17].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[17].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[17].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[17].kindCode","050211");
	   params1.put("prpCprofitDetailsTemp[17].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[17].flag","");
	   params1.put("prpCitemKindsTemp[5].premium","380.00");
	   params1.put("prpCitemKindsTemp[5].netPremium","358.49");
	   params1.put("prpCitemKindsTemp[5].taxPremium","21.51");
	   params1.put("prpCitemKindsTemp[5].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[5].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[6].min","");
	   params1.put("prpCitemKindsTemp[6].max","");
	   params1.put("prpCitemKindsTemp[6].itemKindNo","");
	   params1.put("kindcodesub","");
	   params1.put("prpCitemKindsTemp[6].clauseCode","050056");
	   params1.put("prpCitemKindsTemp[6].kindCode","050232");
	   params1.put("relateSpecial[6]","      ");
	   params1.put("prpCitemKindsTemp[6].kindName","玻璃单独破碎险");
	   params1.put("prpCitemKindsTemp[6].modeCode","10");
	   params1.put("prpCitemKindsTemp[6].amount","");
	   params1.put("prpCitemKindsTemp[6].calculateFlag","N32N000");
	   params1.put("prpCitemKindsTemp[6].startDate","");
	   params1.put("prpCitemKindsTemp[6].startHour","");
	   params1.put("prpCitemKindsTemp[6].endDate","");
	   params1.put("prpCitemKindsTemp[6].endHour","");
	   params1.put("prpCitemKindsTemp[6].flag"," 200000");
	   params1.put("prpCitemKindsTemp[6].basePremium","");
	   params1.put("prpCitemKindsTemp[6].riskPremium","");
	   params1.put("prpCitemKindsTemp[6].rate","");
	   params1.put("prpCitemKindsTemp[6].benchMarkPremium","");
	   params1.put("prpCitemKindsTemp[6].disCount","");
	   params1.put("prpCitemKindsTemp[6].premium","");
	   params1.put("prpCitemKindsTemp[6].netPremium","");
	   params1.put("prpCitemKindsTemp[6].taxPremium","");
	   params1.put("prpCitemKindsTemp[6].taxRate","");
	   params1.put("prpCitemKindsTemp[6].dutyFlag","");
	   params1.put("prpCitemKindsTemp[7].min","");
	   params1.put("prpCitemKindsTemp[7].max","");
	   params1.put("prpCitemKindsTemp[7].itemKindNo","");
	   params1.put("kindcodesub","");
	   params1.put("prpCitemKindsTemp[7].clauseCode","050065");
	   params1.put("prpCitemKindsTemp[7].kindCode","050253");
	   params1.put("relateSpecial[7]","      ");
	   params1.put("prpCitemKindsTemp[7].kindName","指定修理厂险");
	   params1.put("prpCitemKindsTemp[7].amount","");
	   params1.put("prpCitemKindsTemp[7].calculateFlag","N32N000");
	   params1.put("prpCitemKindsTemp[7].startDate","");
	   params1.put("prpCitemKindsTemp[7].startHour","");
	   params1.put("prpCitemKindsTemp[7].endDate","");
	   params1.put("prpCitemKindsTemp[7].endHour","");
	   params1.put("prpCitemKindsTemp[7].flag"," 200000");
	   params1.put("prpCitemKindsTemp[7].basePremium","");
	   params1.put("prpCitemKindsTemp[7].riskPremium","");
	   params1.put("prpCitemKindsTemp[7].rate","");
	   params1.put("prpCitemKindsTemp[7].benchMarkPremium","");
	   params1.put("prpCitemKindsTemp[7].disCount","");
	   params1.put("prpCitemKindsTemp[7].premium","");
	   params1.put("prpCitemKindsTemp[7].netPremium","");
	   params1.put("prpCitemKindsTemp[7].taxPremium","");
	   params1.put("prpCitemKindsTemp[7].taxRate","");
	   params1.put("prpCitemKindsTemp[7].dutyFlag","");
	   params1.put("prpCitemKindsTemp[8].min","");
	   params1.put("prpCitemKindsTemp[8].max","");
	   params1.put("prpCitemKindsTemp[8].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[8].itemKindNo","");
	   params1.put("kindcodesub","");
	   params1.put("prpCitemKindsTemp[8].clauseCode","050057");
	   params1.put("prpCitemKindsTemp[8].kindCode","050311");
	   params1.put("relateSpecial[8]","050935");
	   params1.put("prpCitemKindsTemp[8].kindName","自燃损失险");
	   params1.put("prpCitemKindsTemp[8].specialFlag","on");
	   params1.put("prpCitemKindsTemp[8].amount","102800.00");
	   params1.put("prpCitemKindsTemp[8].calculateFlag","N12Y000");
	   params1.put("prpCitemKindsTemp[8].startDate","");
	   params1.put("prpCitemKindsTemp[8].startHour","");
	   params1.put("prpCitemKindsTemp[8].endDate","");
	   params1.put("prpCitemKindsTemp[8].endHour","");
	   params1.put("prpCitemKindsTemp[8].flag"," 200000");
	   params1.put("prpCitemKindsTemp[8].basePremium","0");
	   params1.put("prpCitemKindsTemp[8].riskPremium","0");
	   params1.put("prpCitemKindsTemp[8].rate","0.0780");
	   params1.put("prpCitemKindsTemp[8].benchMarkPremium","123.36");
	   params1.put("prpCitemKindsTemp[8].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[18].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[18].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[18].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[18]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[18].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[18].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[18].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[18].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[18].id.itemKindNo","7");
	   params1.put("prpCprofitDetailsTemp[18].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[18].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[18].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[18].kindCode","050311");
	   params1.put("prpCprofitDetailsTemp[18].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[18].flag","");
	   params1.put("prpCprofitDetailsTemp[19].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[19].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[19].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[19]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[19].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[19].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[19].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[19].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[19].id.itemKindNo","7");
	   params1.put("prpCprofitDetailsTemp[19].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[19].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[19].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[19].kindCode","050311");
	   params1.put("prpCprofitDetailsTemp[19].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[19].flag","");
	   params1.put("prpCprofitDetailsTemp[20].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[20].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[20].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[20]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[20].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[20].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[20].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[20].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[20].id.itemKindNo","7");
	   params1.put("prpCprofitDetailsTemp[20].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[20].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[20].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[20].kindCode","050311");
	   params1.put("prpCprofitDetailsTemp[20].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[20].flag","");
	   params1.put("prpCitemKindsTemp[8].premium","117.19");
	   params1.put("prpCitemKindsTemp[8].netPremium","110.56");
	   params1.put("prpCitemKindsTemp[8].taxPremium","6.63");
	   params1.put("prpCitemKindsTemp[8].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[8].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[9].min","");
	   params1.put("prpCitemKindsTemp[9].max","");
	   params1.put("prpCitemKindsTemp[9].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[9].itemKindNo","");
	   params1.put("kindcodesub","");
	   params1.put("prpCitemKindsTemp[9].clauseCode","050060");
	   params1.put("prpCitemKindsTemp[9].kindCode","050461");
	   params1.put("relateSpecial[9]","050938");
	   params1.put("prpCitemKindsTemp[9].kindName","发动机涉水损失险");
	   params1.put("prpCitemKindsTemp[9].specialFlag","on");
	   params1.put("prpCitemKindsTemp[9].amount","0");
	   params1.put("prpCitemKindsTemp[9].calculateFlag","N32Y000");
	   params1.put("prpCitemKindsTemp[9].startDate","");
	   params1.put("prpCitemKindsTemp[9].startHour","");
	   params1.put("prpCitemKindsTemp[9].endDate","");
	   params1.put("prpCitemKindsTemp[9].endHour","");
	   params1.put("prpCitemKindsTemp[9].flag"," 200000");
	   params1.put("prpCitemKindsTemp[9].basePremium","0");
	   params1.put("prpCitemKindsTemp[9].riskPremium","0");
	   params1.put("prpCitemKindsTemp[9].rate","5.0000");
	   params1.put("prpCitemKindsTemp[9].benchMarkPremium","104.74");
	   params1.put("prpCitemKindsTemp[9].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[21].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[21].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[21].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[21]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[21].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[21].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[21].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[21].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[21].id.itemKindNo","8");
	   params1.put("prpCprofitDetailsTemp[21].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[21].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[21].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[21].kindCode","050461");
	   params1.put("prpCprofitDetailsTemp[21].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[21].flag","");
	   params1.put("prpCprofitDetailsTemp[22].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[22].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[22].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[22]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[22].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[22].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[22].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[22].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[22].id.itemKindNo","8");
	   params1.put("prpCprofitDetailsTemp[22].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[22].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[22].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[22].kindCode","050461");
	   params1.put("prpCprofitDetailsTemp[22].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[22].flag","");
	   params1.put("prpCprofitDetailsTemp[23].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[23].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[23].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[23]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[23].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[23].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[23].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[23].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[23].id.itemKindNo","8");
	   params1.put("prpCprofitDetailsTemp[23].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[23].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[23].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[23].kindCode","050461");
	   params1.put("prpCprofitDetailsTemp[23].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[23].flag","");
	   params1.put("prpCitemKindsTemp[9].premium","99.50");
	   params1.put("prpCitemKindsTemp[9].netPremium","93.87");
	   params1.put("prpCitemKindsTemp[9].taxPremium","5.63");
	   params1.put("prpCitemKindsTemp[9].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[9].dutyFlag","2");
	   params1.put("prpCitemKindsTemp.itemKindSpecialSumPremium","840.85");
	   params1.put("prpCitemKindsTemp[10].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[10].itemKindNo","");
	   params1.put("prpCitemKindsTemp[10].startDate","");
	   params1.put("prpCitemKindsTemp[10].kindCode","050930");
	   params1.put("prpCitemKindsTemp[10].kindName","不计免赔险（车损险）");
	   params1.put("prpCitemKindsTemp[10].startHour","");
	   params1.put("prpCitemKindsTemp[10].endDate","");
	   params1.put("prpCitemKindsTemp[10].endHour","");
	   params1.put("prpCitemKindsTemp[10].calculateFlag","N33N000");
	   params1.put("relateSpecial[10]","");
	   params1.put("prpCitemKindsTemp[10].clauseCode","050066");
	   params1.put("prpCitemKindsTemp[10].flag"," 200000");
	   params1.put("prpCitemKindsTemp[10].basePremium","0");
	   params1.put("prpCitemKindsTemp[10].riskPremium","0");
	   params1.put("prpCitemKindsTemp[10].amount","0");
	   params1.put("prpCitemKindsTemp[10].rate","15.0000");
	   params1.put("prpCitemKindsTemp[10].benchMarkPremium","314.21");
	   params1.put("prpCitemKindsTemp[10].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[24].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[24].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[24].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[24]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[24].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[24].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[24].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[24].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[24].id.itemKindNo","9");
	   params1.put("prpCprofitDetailsTemp[24].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[24].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[24].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[24].kindCode","050930");
	   params1.put("prpCprofitDetailsTemp[24].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[24].flag","");
	   params1.put("prpCprofitDetailsTemp[25].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[25].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[25].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[25]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[25].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[25].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[25].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[25].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[25].id.itemKindNo","9");
	   params1.put("prpCprofitDetailsTemp[25].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[25].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[25].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[25].kindCode","050930");
	   params1.put("prpCprofitDetailsTemp[25].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[25].flag","");
	   params1.put("prpCprofitDetailsTemp[26].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[26].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[26].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[26]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[26].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[26].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[26].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[26].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[26].id.itemKindNo","9");
	   params1.put("prpCprofitDetailsTemp[26].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[26].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[26].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[26].kindCode","050930");
	   params1.put("prpCprofitDetailsTemp[26].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[26].flag","");
	   params1.put("prpCitemKindsTemp[10].premium","298.50");
	   params1.put("prpCitemKindsTemp[10].netPremium","281.60");
	   params1.put("prpCitemKindsTemp[10].taxPremium","16.90");
	   params1.put("prpCitemKindsTemp[10].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[10].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[11].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[11].itemKindNo","");
	   params1.put("prpCitemKindsTemp[11].startDate","");
	   params1.put("prpCitemKindsTemp[11].kindCode","050932");
	   params1.put("prpCitemKindsTemp[11].kindName","不计免赔险（盗抢险）");
	   params1.put("prpCitemKindsTemp[11].startHour","");
	   params1.put("prpCitemKindsTemp[11].endDate","");
	   params1.put("prpCitemKindsTemp[11].endHour","");
	   params1.put("prpCitemKindsTemp[11].calculateFlag","N33N000");
	   params1.put("relateSpecial[11]","");
	   params1.put("prpCitemKindsTemp[11].clauseCode","050066");
	   params1.put("prpCitemKindsTemp[11].flag"," 200000");
	   params1.put("prpCitemKindsTemp[11].basePremium","0");
	   params1.put("prpCitemKindsTemp[11].riskPremium","0");
	   params1.put("prpCitemKindsTemp[11].amount","0");
	   params1.put("prpCitemKindsTemp[11].rate","20.0000");
	   params1.put("prpCitemKindsTemp[11].benchMarkPremium","130.91");
	   params1.put("prpCitemKindsTemp[11].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[27].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[27].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[27].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[27]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[27].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[27].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[27].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[27].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[27].id.itemKindNo","10");
	   params1.put("prpCprofitDetailsTemp[27].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[27].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[27].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[27].kindCode","050932");
	   params1.put("prpCprofitDetailsTemp[27].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[27].flag","");
	   params1.put("prpCprofitDetailsTemp[28].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[28].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[28].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[28]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[28].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[28].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[28].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[28].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[28].id.itemKindNo","10");
	   params1.put("prpCprofitDetailsTemp[28].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[28].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[28].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[28].kindCode","050932");
	   params1.put("prpCprofitDetailsTemp[28].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[28].flag","");
	   params1.put("prpCprofitDetailsTemp[29].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[29].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[29].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[29]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[29].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[29].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[29].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[29].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[29].id.itemKindNo","10");
	   params1.put("prpCprofitDetailsTemp[29].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[29].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[29].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[29].kindCode","050932");
	   params1.put("prpCprofitDetailsTemp[29].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[29].flag","");
	   params1.put("prpCitemKindsTemp[11].premium","124.36");
	   params1.put("prpCitemKindsTemp[11].netPremium","117.32");
	   params1.put("prpCitemKindsTemp[11].taxPremium","7.04");
	   params1.put("prpCitemKindsTemp[11].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[11].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[12].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[12].itemKindNo","");
	   params1.put("prpCitemKindsTemp[12].startDate","");
	   params1.put("prpCitemKindsTemp[12].kindCode","050931");
	   params1.put("prpCitemKindsTemp[12].kindName","不计免赔险（三者险）");
	   params1.put("prpCitemKindsTemp[12].startHour","");
	   params1.put("prpCitemKindsTemp[12].endDate","");
	   params1.put("prpCitemKindsTemp[12].endHour","");
	   params1.put("prpCitemKindsTemp[12].calculateFlag","N33N000");
	   params1.put("relateSpecial[12]","");
	   params1.put("prpCitemKindsTemp[12].clauseCode","050066");
	   params1.put("prpCitemKindsTemp[12].flag"," 200000");
	   params1.put("prpCitemKindsTemp[12].basePremium","0");
	   params1.put("prpCitemKindsTemp[12].riskPremium","0");
	   params1.put("prpCitemKindsTemp[12].amount","0");
	   params1.put("prpCitemKindsTemp[12].rate","15.0000");
	   params1.put("prpCitemKindsTemp[12].benchMarkPremium","278.10");
	   params1.put("prpCitemKindsTemp[12].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[30].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[30].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[30].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[30]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[30].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[30].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[30].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[30].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[30].id.itemKindNo","11");
	   params1.put("prpCprofitDetailsTemp[30].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[30].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[30].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[30].kindCode","050931");
	   params1.put("prpCprofitDetailsTemp[30].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[30].flag","");
	   params1.put("prpCprofitDetailsTemp[31].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[31].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[31].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[31]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[31].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[31].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[31].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[31].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[31].id.itemKindNo","11");
	   params1.put("prpCprofitDetailsTemp[31].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[31].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[31].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[31].kindCode","050931");
	   params1.put("prpCprofitDetailsTemp[31].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[31].flag","");
	   params1.put("prpCprofitDetailsTemp[32].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[32].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[32].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[32]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[32].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[32].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[32].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[32].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[32].id.itemKindNo","11");
	   params1.put("prpCprofitDetailsTemp[32].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[32].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[32].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[32].kindCode","050931");
	   params1.put("prpCprofitDetailsTemp[32].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[32].flag","");
	   params1.put("prpCitemKindsTemp[12].premium","264.20");
	   params1.put("prpCitemKindsTemp[12].netPremium","249.25");
	   params1.put("prpCitemKindsTemp[12].taxPremium","14.95");
	   params1.put("prpCitemKindsTemp[12].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[12].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[13].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[13].itemKindNo","");
	   params1.put("prpCitemKindsTemp[13].startDate","");
	   params1.put("prpCitemKindsTemp[13].kindCode","050933");
	   params1.put("prpCitemKindsTemp[13].kindName","不计免赔险（车上人员（司机））");
	   params1.put("prpCitemKindsTemp[13].startHour","");
	   params1.put("prpCitemKindsTemp[13].endDate","");
	   params1.put("prpCitemKindsTemp[13].endHour","");
	   params1.put("prpCitemKindsTemp[13].calculateFlag","N33N000");
	   params1.put("relateSpecial[13]","");
	   params1.put("prpCitemKindsTemp[13].clauseCode","050066");
	   params1.put("prpCitemKindsTemp[13].flag"," 200000");
	   params1.put("prpCitemKindsTemp[13].basePremium","0");
	   params1.put("prpCitemKindsTemp[13].riskPremium","0");
	   params1.put("prpCitemKindsTemp[13].amount","0");
	   params1.put("prpCitemKindsTemp[13].rate","15.0000");
	   params1.put("prpCitemKindsTemp[13].benchMarkPremium","31.50");
	   params1.put("prpCitemKindsTemp[13].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[33].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[33].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[33].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[33]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[33].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[33].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[33].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[33].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[33].id.itemKindNo","12");
	   params1.put("prpCprofitDetailsTemp[33].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[33].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[33].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[33].kindCode","050933");
	   params1.put("prpCprofitDetailsTemp[33].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[33].flag","");
	   params1.put("prpCprofitDetailsTemp[34].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[34].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[34].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[34]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[34].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[34].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[34].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[34].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[34].id.itemKindNo","12");
	   params1.put("prpCprofitDetailsTemp[34].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[34].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[34].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[34].kindCode","050933");
	   params1.put("prpCprofitDetailsTemp[34].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[34].flag","");
	   params1.put("prpCprofitDetailsTemp[35].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[35].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[35].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[35]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[35].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[35].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[35].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[35].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[35].id.itemKindNo","12");
	   params1.put("prpCprofitDetailsTemp[35].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[35].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[35].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[35].kindCode","050933");
	   params1.put("prpCprofitDetailsTemp[35].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[35].flag","");
	   params1.put("prpCitemKindsTemp[13].premium","29.93");
	   params1.put("prpCitemKindsTemp[13].netPremium","28.24");
	   params1.put("prpCitemKindsTemp[13].taxPremium","1.69");
	   params1.put("prpCitemKindsTemp[13].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[13].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[15].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[15].itemKindNo","");
	   params1.put("prpCitemKindsTemp[15].startDate","");
	   params1.put("prpCitemKindsTemp[15].kindCode","050937");
	   params1.put("prpCitemKindsTemp[15].kindName","不计免赔险（车身划痕损失险）");
	   params1.put("prpCitemKindsTemp[15].startHour","");
	   params1.put("prpCitemKindsTemp[15].endDate","");
	   params1.put("prpCitemKindsTemp[15].endHour","");
	   params1.put("prpCitemKindsTemp[15].calculateFlag","N33N000");
	   params1.put("relateSpecial[15]","");
	   params1.put("prpCitemKindsTemp[15].clauseCode","050066");
	   params1.put("prpCitemKindsTemp[15].flag"," 200000");
	   params1.put("prpCitemKindsTemp[15].basePremium","0");
	   params1.put("prpCitemKindsTemp[15].riskPremium","0");
	   params1.put("prpCitemKindsTemp[15].amount","0");
	   params1.put("prpCitemKindsTemp[15].rate","15.0000");
	   params1.put("prpCitemKindsTemp[15].benchMarkPremium","60.00");
	   params1.put("prpCitemKindsTemp[15].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[36].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[36].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[36].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[36]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[36].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[36].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[36].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[36].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[36].id.itemKindNo","13");
	   params1.put("prpCprofitDetailsTemp[36].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[36].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[36].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[36].kindCode","050937");
	   params1.put("prpCprofitDetailsTemp[36].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[36].flag","");
	   params1.put("prpCprofitDetailsTemp[37].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[37].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[37].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[37]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[37].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[37].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[37].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[37].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[37].id.itemKindNo","13");
	   params1.put("prpCprofitDetailsTemp[37].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[37].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[37].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[37].kindCode","050937");
	   params1.put("prpCprofitDetailsTemp[37].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[37].flag","");
	   params1.put("prpCprofitDetailsTemp[38].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[38].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[38].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[38]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[38].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[38].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[38].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[38].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[38].id.itemKindNo","13");
	   params1.put("prpCprofitDetailsTemp[38].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[38].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[38].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[38].kindCode","050937");
	   params1.put("prpCprofitDetailsTemp[38].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[38].flag","");
	   params1.put("prpCitemKindsTemp[15].premium","57.00");
	   params1.put("prpCitemKindsTemp[15].netPremium","53.77");
	   params1.put("prpCitemKindsTemp[15].taxPremium","3.23");
	   params1.put("prpCitemKindsTemp[15].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[15].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[16].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[16].itemKindNo","");
	   params1.put("prpCitemKindsTemp[16].startDate","");
	   params1.put("prpCitemKindsTemp[16].kindCode","050935");
	   params1.put("prpCitemKindsTemp[16].kindName","不计免赔险（自燃损失险）");
	   params1.put("prpCitemKindsTemp[16].startHour","");
	   params1.put("prpCitemKindsTemp[16].endDate","");
	   params1.put("prpCitemKindsTemp[16].endHour","");
	   params1.put("prpCitemKindsTemp[16].calculateFlag","N33N000");
	   params1.put("relateSpecial[16]","");
	   params1.put("prpCitemKindsTemp[16].clauseCode","050066");
	   params1.put("prpCitemKindsTemp[16].flag"," 200000");
	   params1.put("prpCitemKindsTemp[16].basePremium","0");
	   params1.put("prpCitemKindsTemp[16].riskPremium","0");
	   params1.put("prpCitemKindsTemp[16].amount","0");
	   params1.put("prpCitemKindsTemp[16].rate","20.0000");
	   params1.put("prpCitemKindsTemp[16].benchMarkPremium","24.67");
	   params1.put("prpCitemKindsTemp[16].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[39].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[39].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[39].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[39]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[39].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[39].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[39].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[39].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[39].id.itemKindNo","14");
	   params1.put("prpCprofitDetailsTemp[39].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[39].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[39].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[39].kindCode","050935");
	   params1.put("prpCprofitDetailsTemp[39].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[39].flag","");
	   params1.put("prpCprofitDetailsTemp[40].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[40].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[40].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[40]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[40].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[40].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[40].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[40].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[40].id.itemKindNo","14");
	   params1.put("prpCprofitDetailsTemp[40].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[40].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[40].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[40].kindCode","050935");
	   params1.put("prpCprofitDetailsTemp[40].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[40].flag","");
	   params1.put("prpCprofitDetailsTemp[41].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[41].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[41].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[41]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[41].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[41].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[41].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[41].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[41].id.itemKindNo","14");
	   params1.put("prpCprofitDetailsTemp[41].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[41].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[41].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[41].kindCode","050935");
	   params1.put("prpCprofitDetailsTemp[41].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[41].flag","");
	   params1.put("prpCitemKindsTemp[16].premium","23.44");
	   params1.put("prpCitemKindsTemp[16].netPremium","22.11");
	   params1.put("prpCitemKindsTemp[16].taxPremium","1.33");
	   params1.put("prpCitemKindsTemp[16].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[16].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[17].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[17].itemKindNo","");
	   params1.put("prpCitemKindsTemp[17].startDate","");
	   params1.put("prpCitemKindsTemp[17].kindCode","050938");
	   params1.put("prpCitemKindsTemp[17].kindName","不计免赔险（发动机涉水损失险）");
	   params1.put("prpCitemKindsTemp[17].startHour","");
	   params1.put("prpCitemKindsTemp[17].endDate","");
	   params1.put("prpCitemKindsTemp[17].endHour","");
	   params1.put("prpCitemKindsTemp[17].calculateFlag","N33N000");
	   params1.put("relateSpecial[17]","");
	   params1.put("prpCitemKindsTemp[17].clauseCode","050066");
	   params1.put("prpCitemKindsTemp[17].flag"," 200000");
	   params1.put("prpCitemKindsTemp[17].basePremium","0");
	   params1.put("prpCitemKindsTemp[17].riskPremium","0");
	   params1.put("prpCitemKindsTemp[17].amount","0");
	   params1.put("prpCitemKindsTemp[17].rate","15.0000");
	   params1.put("prpCitemKindsTemp[17].benchMarkPremium","15.71");
	   params1.put("prpCitemKindsTemp[17].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[42].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[42].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[42].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[42]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[42].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[42].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[42].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[42].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[42].id.itemKindNo","15");
	   params1.put("prpCprofitDetailsTemp[42].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[42].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[42].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[42].kindCode","050938");
	   params1.put("prpCprofitDetailsTemp[42].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[42].flag","");
	   params1.put("prpCprofitDetailsTemp[43].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[43].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[43].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[43]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[43].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[43].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[43].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[43].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[43].id.itemKindNo","15");
	   params1.put("prpCprofitDetailsTemp[43].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[43].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[43].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[43].kindCode","050938");
	   params1.put("prpCprofitDetailsTemp[43].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[43].flag","");
	   params1.put("prpCprofitDetailsTemp[44].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[44].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[44].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[44]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[44].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[44].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[44].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[44].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[44].id.itemKindNo","15");
	   params1.put("prpCprofitDetailsTemp[44].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[44].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[44].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[44].kindCode","050938");
	   params1.put("prpCprofitDetailsTemp[44].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[44].flag","");
	   params1.put("prpCitemKindsTemp[17].premium","14.92");
	   params1.put("prpCitemKindsTemp[17].netPremium","14.08");
	   params1.put("prpCitemKindsTemp[17].taxPremium","0.84");
	   params1.put("prpCitemKindsTemp[17].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[17].dutyFlag","2");
	   params1.put("prpCitemKindsTemp[18].chooseFlag","on");
	   params1.put("prpCitemKindsTemp[18].itemKindNo","");
	   params1.put("prpCitemKindsTemp[18].startDate","");
	   params1.put("prpCitemKindsTemp[18].kindCode","050934");
	   params1.put("prpCitemKindsTemp[18].kindName","不计免赔险（车上人员（乘客））");
	   params1.put("prpCitemKindsTemp[18].startHour","");
	   params1.put("prpCitemKindsTemp[18].endDate","");
	   params1.put("prpCitemKindsTemp[18].endHour","");
	   params1.put("prpCitemKindsTemp[18].calculateFlag","N33N000");
	   params1.put("relateSpecial[18]","");
	   params1.put("prpCitemKindsTemp[18].clauseCode","050066");
	   params1.put("prpCitemKindsTemp[18].flag"," 200000");
	   params1.put("prpCitemKindsTemp[18].basePremium","0");
	   params1.put("prpCitemKindsTemp[18].riskPremium","0");
	   params1.put("prpCitemKindsTemp[18].amount","0");
	   params1.put("prpCitemKindsTemp[18].rate","15.0000");
	   params1.put("prpCitemKindsTemp[18].benchMarkPremium","30.00");
	   params1.put("prpCitemKindsTemp[18].disCount","0.95000000");
	   params1.put("prpCprofitDetailsTemp[45].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[45].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitDetailsTemp[45].condition","新保或上年发生1次赔款");
	   params1.put("profitRateTemp[45]","1.00000000");
	   params1.put("prpCprofitDetailsTemp[45].profitRate","100");
	   params1.put("prpCprofitDetailsTemp[45].profitRateMin","100");
	   params1.put("prpCprofitDetailsTemp[45].profitRateMax","130");
	   params1.put("prpCprofitDetailsTemp[45].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[45].id.itemKindNo","16");
	   params1.put("prpCprofitDetailsTemp[45].id.profitCode","C01");
	   params1.put("prpCprofitDetailsTemp[45].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[45].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[45].kindCode","050934");
	   params1.put("prpCprofitDetailsTemp[45].conditionCode","C0104");
	   params1.put("prpCprofitDetailsTemp[45].flag","");
	   params1.put("prpCprofitDetailsTemp[46].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[46].profitName","自主渠道系数");
	   params1.put("prpCprofitDetailsTemp[46].condition","经纪及代理渠道业务优惠系数");
	   params1.put("profitRateTemp[46]","0.90000000");
	   params1.put("prpCprofitDetailsTemp[46].profitRate","90");
	   params1.put("prpCprofitDetailsTemp[46].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[46].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[46].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[46].id.itemKindNo","16");
	   params1.put("prpCprofitDetailsTemp[46].id.profitCode","C02");
	   params1.put("prpCprofitDetailsTemp[46].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[46].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[46].kindCode","050934");
	   params1.put("prpCprofitDetailsTemp[46].conditionCode","C0206");
	   params1.put("prpCprofitDetailsTemp[46].flag","");
	   params1.put("prpCprofitDetailsTemp[47].chooseFlag","on");
	   params1.put("prpCprofitDetailsTemp[47].profitName","自主核保优惠系数");
	   params1.put("prpCprofitDetailsTemp[47].condition","自主核保优惠系数");
	   params1.put("profitRateTemp[47]","1.05555556");
	   params1.put("prpCprofitDetailsTemp[47].profitRate","105.555556");
	   params1.put("prpCprofitDetailsTemp[47].profitRateMin","75");
	   params1.put("prpCprofitDetailsTemp[47].profitRateMax","125");
	   params1.put("prpCprofitDetailsTemp[47].id.proposalNo","");
	   params1.put("prpCprofitDetailsTemp[47].id.itemKindNo","16");
	   params1.put("prpCprofitDetailsTemp[47].id.profitCode","C03");
	   params1.put("prpCprofitDetailsTemp[47].id.serialNo","0");
	   params1.put("prpCprofitDetailsTemp[47].id.profitType","1");
	   params1.put("prpCprofitDetailsTemp[47].kindCode","050934");
	   params1.put("prpCprofitDetailsTemp[47].conditionCode","C03  ");
	   params1.put("prpCprofitDetailsTemp[47].flag","");
	   params1.put("prpCitemKindsTemp[18].premium","28.50");
	   params1.put("prpCitemKindsTemp[18].netPremium","26.89");
	   params1.put("prpCitemKindsTemp[18].taxPremium","1.61");
	   params1.put("prpCitemKindsTemp[18].taxRate","6.00");
	   params1.put("prpCitemKindsTemp[18].dutyFlag","2");
	   params1.put("hidden_index_itemKind","10");
	   params1.put("hidden_index_profitDetial","0");
	   params1.put("prpCitemKindsTemp_[0].chooseFlag","on");
	   params1.put("prpCitemKindsTemp_[0].itemKindNo","");
	   params1.put("prpCitemKindsTemp_[0].startDate","");
	   params1.put("prpCitemKindsTemp_[0].kindCode","");
	   params1.put("prpCitemKindsTemp_[0].kindName","");
	   params1.put("prpCitemKindsTemp_[0].startHour","");
	   params1.put("prpCitemKindsTemp_[0].endDate","");
	   params1.put("prpCitemKindsTemp_[0].endHour","");
	   params1.put("prpCitemKindsTemp_[0].calculateFlag","");
	   params1.put("relateSpecial_[0]","");
	   params1.put("prpCitemKindsTemp_[0].clauseCode","");
	   params1.put("prpCitemKindsTemp_[0].flag","");
	   params1.put("prpCitemKindsTemp_[0].basePremium","");
	   params1.put("prpCitemKindsTemp_[0].riskPremium","");
	   params1.put("prpCitemKindsTemp_[0].amount","");
	   params1.put("prpCitemKindsTemp_[0].rate","");
	   params1.put("prpCitemKindsTemp_[0].benchMarkPremium","");
	   params1.put("prpCitemKindsTemp_[0].disCount","");
	   params1.put("prpCitemKindsTemp_[0].premium","");
	   params1.put("prpCitemKindsTemp_[0].netPremium","");
	   params1.put("prpCitemKindsTemp_[0].taxPremium","");
	   params1.put("prpCitemKindsTemp_[0].taxRate","");
	   params1.put("prpCitemKindsTemp_[0].dutyFlag","");
	   params1.put("prpCitemKindsTemp_[0].unitAmount","");
	   params1.put("prpCitemKindsTemp_[0].quantity","");
	   params1.put("prpCitemKindsTemp_[0].value","");
	   params1.put("prpCitemKindsTemp_[0].value","50");
	   params1.put("prpCitemKindsTemp_[0].unitAmount","");
	   params1.put("prpCitemKindsTemp_[0].quantity","");
	   params1.put("prpCitemKindsTemp_[0].modeCode","10");
	   params1.put("prpCitemKindsTemp_[0].modeCode","1");
	   params1.put("prpCitemKindsTemp_[0].modeCode","1");
	   params1.put("prpCitemKindsTemp_[0].value","1000");
	   params1.put("prpCitemKindsTemp_[0].amount","2000");
	   params1.put("prpCitemKindsTemp_[0].amount","2000");
	   params1.put("prpCitemKindsTemp_[0].amount","10000");
	   params1.put("prpCitemKindsTemp_[0].unitAmount","");
	   params1.put("prpCitemKindsTemp_[0].quantity","60");
	   params1.put("prpCitemKindsTemp_[0].unitAmount","");
	   params1.put("prpCitemKindsTemp_[0].quantity","90");
	   params1.put("prpCitemKindsTemp_[0].amount","");
	   params1.put("prpCitemKindsTemp_[0].amount","50000.00");
	   params1.put("prpCitemKindsTemp_[0].amount","10000.00");
	   params1.put("prpCitemKindsTemp_[0].amount","5000.00");
	   params1.put("itemKindLoadFlag","");
	   params1.put("prpCprofitFactorsTemp[0].chooseFlag","on");
	   params1.put("serialNo[0]","1");
	   params1.put("prpCprofitFactorsTemp[0].profitName","无赔款优待及上年赔款记录");
	   params1.put("prpCprofitFactorsTemp[0].condition","新保或上年发生1次赔款");
	   params1.put("rateTemp[0]","1.00000000");
	   params1.put("prpCprofitFactorsTemp[0].rate","100");
	   params1.put("prpCprofitFactorsTemp[0].lowerRate","100");
	   params1.put("prpCprofitFactorsTemp[0].upperRate","130");
	   params1.put("prpCprofitFactorsTemp[0].id.profitCode","C01");
	   params1.put("prpCprofitFactorsTemp[0].id.conditionCode","C0104");
	   params1.put("prpCprofitFactorsTemp[0].flag","");
	   params1.put("prpCprofitFactorsTemp[1].chooseFlag","on");
	   params1.put("serialNo[1]","2");
	   params1.put("prpCprofitFactorsTemp[1].profitName","自主渠道系数");
	   params1.put("prpCprofitFactorsTemp[1].condition","经纪及代理渠道业务优惠系数");
	   params1.put("rateTemp[1]","0.90000000");
	   params1.put("prpCprofitFactorsTemp[1].rate","90");
	   params1.put("prpCprofitFactorsTemp[1].lowerRate","75");
	   params1.put("prpCprofitFactorsTemp[1].upperRate","125");
	   params1.put("prpCprofitFactorsTemp[1].id.profitCode","C02");
	   params1.put("prpCprofitFactorsTemp[1].id.conditionCode","C0206");
	   params1.put("prpCprofitFactorsTemp[1].flag","");
	   params1.put("prpCprofitFactorsTemp[2].chooseFlag","on");
	   params1.put("serialNo[2]","3");
	   params1.put("prpCprofitFactorsTemp[2].profitName","自主核保优惠系数");
	   params1.put("prpCprofitFactorsTemp[2].condition","自主核保优惠系数");
	   params1.put("rateTemp[2]","1.05555556");
	   params1.put("prpCprofitFactorsTemp[2].rate","105.555556");
	   params1.put("prpCprofitFactorsTemp[2].lowerRate","75");
	   params1.put("prpCprofitFactorsTemp[2].upperRate","125");
	   params1.put("prpCprofitFactorsTemp[2].id.profitCode","C03");
	   params1.put("prpCprofitFactorsTemp[2].id.conditionCode","C03");
	   params1.put("prpCprofitFactorsTemp[2].flag","");
	   params1.put("BIdemandNo","V0101PICC440316001480382028053");
	   params1.put("BIdemandTime","2016-11-29");
	   params1.put("bIRiskWarningType","");
	   params1.put("noDamageYearsBIPlat","0");
	   params1.put("prpCitemCarExt.lastDamagedBI","0");
	   params1.put("lastDamagedBITemp","");
	   params1.put("DAZlastDamagedBI","");
	   params1.put("prpCitemCarExt.thisDamagedBI","0");
	   params1.put("prpCitemCarExt.noDamYearsBI","0");
	   params1.put("noDamYearsBINumber","0");
	   params1.put("prpCitemCarExt.lastDamagedCI","0");
	   params1.put("BIDemandClaim_Flag","");
	   params1.put("BiInsureDemandPay_[0].id.serialNo","");
	   params1.put("BiInsureDemandPay_[0].payCompany","");
	   params1.put("BiInsureDemandPay_[0].claimregistrationno","");
	   params1.put("BiInsureDemandPay_[0].compensateNo","");
	   params1.put("BiInsureDemandPay_[0].lossTime","");
	   params1.put("BiInsureDemandPay_[0].endcCaseTime","");
	   params1.put("PrpCmain_[0].startDate","");
	   params1.put("PrpCmain_[0].endDate","");
	   params1.put("BiInsureDemandPay_[0].lossFee","");
	   params1.put("BiInsureDemandPay_[0].payType","");
	   params1.put("BiInsureDemandPay_[0].personpayType","");
	   params1.put("BiInsureDemandLoss_[0].id.serialNo","");
	   params1.put("BiInsureDemandLoss_[0].peccancyid","");
	   params1.put("BiInsureDemandLoss_[0].lossAction","");
	   params1.put("BiInsureDemandLoss_[0].lossTime","");
	   params1.put("BiInsureDemandLoss_[0].lossDddress","");
	   params1.put("BiInsureDemandLoss_[0].decisionid","");
	   params1.put("BiInsureDemandLoss_[0].lossAcceptDate","");
	   params1.put("bIRiskWarningClaimItems_[0].id.serialNo","");
	   params1.put("bIRiskWarningClaimItems_[0].riskWarningType","");
	   params1.put("bIRiskWarningClaimItems_[0].claimSequenceNo","");
	   params1.put("bIRiskWarningClaimItems_[0].insurerCode","");
	   params1.put("bIRiskWarningClaimItems_[0].lossTime","");
	   params1.put("bIRiskWarningClaimItems_[0].lossArea","");
	   params1.put("prpCitemKindCI.shortRate","100");
	   params1.put("prpCitemKindCI.familyNo","1");
	   params1.put("cIBPFlag","0");
	   params1.put("prpCitemKindCI.unitAmount","122000");
	   params1.put("prpCitemKindCI.id.itemKindNo","");
	   params1.put("prpCitemKindCI.kindCode","050100");
	   params1.put("prpCitemKindCI.clauseCode","050001");
	   params1.put("prpCitemKindCI.riskPremium","0");
	   params1.put("prpCitemKindCI.kindName","机动车交通事故强制责任保险");
	   params1.put("prpCitemKindCI.calculateFlag","Y");
	   params1.put("prpCitemKindCI.basePremium","");
	   params1.put("prpCitemKindCI.quantity","1");
	   params1.put("prpCitemKindCI.amount","122000");
	   params1.put("prpCitemKindCI.deductible","0");
	   params1.put("prpCitemKindCI.adjustRate","1.00");
	   params1.put("prpCitemKindCI.rate","0");
	   params1.put("prpCitemKindCI.benchMarkPremium","950");
	   params1.put("prpCitemKindCI.disCount","1");
	   params1.put("prpCitemKindCI.premium","950");
	   params1.put("prpCitemKindCI.flag","");
	   params1.put("prpCitemKindCI.netPremium","896.23");
	   params1.put("prpCitemKindCI.taxPremium","53.77");
	   params1.put("prpCitemKindCI.taxRate","6.00");
	   params1.put("prpCitemKindCI.dutyFlag","2");
	   params1.put("prpCtrafficDetails_[0].trafficType","1");
	   params1.put("prpCtrafficDetails_[0].accidentType","1");
	   params1.put("prpCtrafficDetails_[0].indemnityDuty","有责");
	   params1.put("prpCtrafficDetails_[0].sumPaid","");
	   params1.put("prpCtrafficDetails_[0].accidentDate","");
	   params1.put("prpCtrafficDetails_[0].payComCode","");
	   params1.put("prpCtrafficDetails_[0].flag","");
	   params1.put("prpCtrafficDetails_[0].id.serialNo","");
	   params1.put("prpCtrafficDetails_[0].trafficType","1");
	   params1.put("prpCtrafficDetails_[0].accidentType","1");
	   params1.put("prpCtrafficDetails_[0].indemnityDuty","有责");
	   params1.put("prpCtrafficDetails_[0].sumPaid","");
	   params1.put("prpCtrafficDetails_[0].accidentDate","");
	   params1.put("prpCtrafficDetails_[0].payComCode","");
	   params1.put("prpCtrafficDetails_[0].flag","");
	   params1.put("prpCtrafficDetails_[0].id.serialNo","");
	   params1.put("prpCitemCarExt_CI.rateRloatFlag","01");
	   params1.put("prpCitemCarExt_CI.noDamYearsCI","0");
	   params1.put("prpCitemCarExt_CI.lastDamagedCI","0");
	   params1.put("prpCitemCarExt_CI.flag","");
	   params1.put("prpCitemCarExt_CI.damFloatRatioCI","0");
	   params1.put("prpCitemCarExt_CI.offFloatRatioCI","0");
	   params1.put("prpCitemCarExt_CI.thisDamagedCI","0");
	   params1.put("prpCitemCarExt_CI.flag","");
	   params1.put("hidden_index_ctraffic_NOPlat_Drink","0");
	   params1.put("hidden_index_ctraffic_NOPlat","0");
	   params1.put("ciInsureDemand.demandNo","01PICC440316001480382027828218");
	   params1.put("ciInsureDemand.demandTime","2016-11-29");
	   params1.put("ciInsureDemand.restricFlag","");
	   params1.put("ciInsureDemand.preferentialDay","0");
	   params1.put("ciInsureDemand.preferentialPremium","0");
	   params1.put("ciInsureDemand.preferentialFormula ","");
	   params1.put("ciInsureDemand.lastyearenddate","");
	   params1.put("prpCitemCar.noDamageYears","0");
	   params1.put("ciInsureDemand.rateRloatFlag","01");
	   params1.put("ciInsureDemand.claimAdjustReason","A1");
	   params1.put("ciInsureDemand.peccancyAdjustReason","V1");
	   params1.put("cIRiskWarningType","");
	   params1.put("CIDemandFecc_Flag","");
	   params1.put("ciInsureDemandLoss_[0].id.serialNo","");
	   params1.put("ciInsureDemandLoss_[0].lossTime","");
	   params1.put("ciInsureDemandLoss_[0].lossDddress","");
	   params1.put("ciInsureDemandLoss_[0].lossAction","");
	   params1.put("ciInsureDemandLoss_[0].coeff","");
	   params1.put("ciInsureDemandLoss_[0].lossType","");
	   params1.put("ciInsureDemandLoss_[0].identifyType","");
	   params1.put("ciInsureDemandLoss_[0].identifyNumber","");
	   params1.put("ciInsureDemandLoss_[0].lossAcceptDate","");
	   params1.put("ciInsureDemandLoss_[0].processingStatus","");
	   params1.put("ciInsureDemandLoss_[0].lossActionDesc","");
	   params1.put("CIDemandClaim_Flag","");
	   params1.put("ciInsureDemandPay_[0].id.serialNo","");
	   params1.put("ciInsureDemandPay_[0].payCompany","");
	   params1.put("ciInsureDemandPay_[0].claimregistrationno","");
	   params1.put("ciInsureDemandPay_[0].compensateNo","");
	   params1.put("ciInsureDemandPay_[0].lossTime","");
	   params1.put("ciInsureDemandPay_[0].endcCaseTime","");
	   params1.put("ciInsureDemandPay_[0].lossFee","");
	   params1.put("ciInsureDemandPay_[0].payType","");
	   params1.put("ciInsureDemandPay_[0].personpayType","");
	   params1.put("ciRiskWarningClaimItems_[0].id.serialNo","");
	   params1.put("ciRiskWarningClaimItems_[0].riskWarningType","");
	   params1.put("ciRiskWarningClaimItems_[0].claimSequenceNo","");
	   params1.put("ciRiskWarningClaimItems_[0].insurerCode","");
	   params1.put("ciRiskWarningClaimItems_[0].lossTime","");
	   params1.put("ciRiskWarningClaimItems_[0].lossArea","");
	   params1.put("ciInsureDemand.licenseNo","");
	   params1.put("ciInsureDemand.licenseType","");
	   params1.put("ciInsureDemand.useNatureCode","");
	   params1.put("ciInsureDemand.frameNo","");
	   params1.put("ciInsureDemand.engineNo","");
	   params1.put("ciInsureDemand.licenseColorCode","");
	   params1.put("ciInsureDemand.carOwner","");
	   params1.put("ciInsureDemand.enrollDate","");
	   params1.put("ciInsureDemand.makeDate","");
	   params1.put("ciInsureDemand.seatCount","0");
	   params1.put("ciInsureDemand.tonCount","0");
	   params1.put("ciInsureDemand.validCheckDate","");
	   params1.put("ciInsureDemand.manufacturerName","");
	   params1.put("ciInsureDemand.modelCode","");
	   params1.put("ciInsureDemand.brandCName","");
	   params1.put("ciInsureDemand.brandName","");
	   params1.put("ciInsureDemand.carKindCode","");
	   params1.put("ciInsureDemand.checkDate","");
	   params1.put("ciInsureDemand.endValidDate","");
	   params1.put("ciInsureDemand.carStatus","");
	   params1.put("ciInsureDemand.haulage","");
	   params1.put("_taxUnit","");
	   params1.put("taxPlatFormTime","2013-01-26");
	   params1.put("iniPrpCcarShipTax_Flag","");
	   params1.put("strCarShipFlag","1");
	   params1.put("prpCcarShipTax.taxType","1");
	   params1.put("prpCcarShipTax.calculateMode","C2");
	   params1.put("prpCcarShipTax.leviedDate","");
	   params1.put("prpCcarShipTax.carKindCode","A01");
	   params1.put("prpCcarShipTax.model","B11");
	   params1.put("prpCcarShipTax.taxPayerIdentNo","440303198908041317");
	   params1.put("prpCcarShipTax.taxPayerNumber","440303198908041317");
	   params1.put("prpCcarShipTax.carLotEquQuality","1505");
	   params1.put("prpCcarShipTax.taxPayerCode","4403106000999964");
	   params1.put("prpCcarShipTax.id.itemNo","1");
	   params1.put("prpCcarShipTax.taxPayerNature","3");
	   params1.put("prpCcarShipTax.taxPayerName","张力行");
	   params1.put("prpCcarShipTax.taxUnit","辆/年");
	   params1.put("prpCcarShipTax.taxComCode","");
	   params1.put("prpCcarShipTax.taxComName","");
	   params1.put("prpCcarShipTax.taxExplanation","");
	   params1.put("prpCcarShipTax.taxAbateReason","");
	   params1.put("prpCcarShipTax.dutyPaidProofNo_1","");
	   params1.put("prpCcarShipTax.dutyPaidProofNo_2","");
	   params1.put("prpCcarShipTax.dutyPaidProofNo","");
	   params1.put("prpCcarShipTax.taxAbateRate","");
	   params1.put("prpCcarShipTax.taxAbateAmount","");
	   params1.put("prpCcarShipTax.taxAbateType","1");
	   params1.put("prpCcarShipTax.taxUnitAmount","420.00");
	   params1.put("prpCcarShipTax.prePayTaxYear","2015");
	   params1.put("prpCcarShipTax.prePolicyEndDate","");
	   params1.put("prpCcarShipTax.payStartDate","2016-11-1");
	   params1.put("prpCcarShipTax.payEndDate","2016-12-31");
	   params1.put("prpCcarShipTax.thisPayTax","70");
	   params1.put("prpCcarShipTax.prePayTax","0");
	   params1.put("prpCcarShipTax.taxItemCode","");
	   params1.put("prpCcarShipTax.taxItemName","");
	   params1.put("prpCcarShipTax.baseTaxation","");
	   params1.put("prpCcarShipTax.taxRelifFlag","");
	   params1.put("prpCcarShipTax.delayPayTax","0");
	   params1.put("prpCcarShipTax.sumPayTax","70");
	   params1.put("CarShipInit_Flag","");
	   params1.put("prpCcarShipTax.flag","");
	   params1.put("quotationtaxPayerCode","");
	   params1.put("prpCcarShipTax.isType02Lice","N");
	   params1.put("prpCcarShipTax.type02LiceYExaMon","");
	   params1.put("prpCcarShipTax.finesTax","0.00");
	   params1.put("prpCcarShipTax.isHangOnWhether","N");
	   params1.put("prpCcarShipTax.alwaysQuality","");
	   params1.put("prpCcarShipTax.remark","");
	   params1.put("prpCcarShipTax.identifyTypeTax","01");
	   params1.put("prpCcarShipTax.carKindCodeTax","A01");
	   params1.put("prpCcarShipTax.licenseTypeTax","02");
	   params1.put("prpCPrePayTaxDetailTemps_[0].id.serialNo","");
	   params1.put("prpCPrePayTaxDetailTemps_[0].payYear","");
	   params1.put("prpCPrePayTaxDetailTemps_[0].prePayTax","");
	   params1.put("prpCPrePayTaxDetailTemps_[0].dutyPaidProofNo","");
	   params1.put("hidden_index_prePayTaxDetail","0");
	   params1.put("noBringOutEngage","");
	   params1.put("prpCengageTemps_[0].id.serialNo","");
	   params1.put("prpCengageTemps_[0].clauseCode","");
	   params1.put("prpCengageTemps_[0].clauseName","");
	   params1.put("clauses_[0]","");
	   params1.put("prpCengageTemps_[0].flag","");
	   params1.put("prpCengageTemps_[0].engageFlag","");
	   params1.put("prpCengageTemps_[0].maxCount","");
	   params1.put("prpCengageTemps_[0].clauses","");
	   params1.put("iniPrpCengage_Flag","");
	   params1.put("hidden_index_engage","0");
	   params1.put("costRateForPG","");
	   params1.put("certificateNo","75047232-2");
	   params1.put("levelMaxRate","");
	   params1.put("maxRateScm","");
	   params1.put("levelMaxRateCi","");
	   params1.put("maxRateScmCi","");
	   params1.put("isModifyBI","");
	   params1.put("isModifyCI","");
	   params1.put("sumBICoinsRate","");
	   params1.put("sumCICoinsRate","");
	   params1.put("netCommission_Switch","");
	   params1.put("agentsRateBI","");
	   params1.put("agentsRateCI","");
	   params1.put("prpVisaRecordP.id.visaNo","");
	   params1.put("prpVisaRecordP.id.visaCode","");
	   params1.put("prpVisaRecordP.visaName","");
	   params1.put("prpVisaRecordP.printType","101");
	   params1.put("prpVisaRecordT.id.visaNo","");
	   params1.put("prpVisaRecordT.id.visaCode","");
	   params1.put("prpVisaRecordT.visaName","");
	   params1.put("prpVisaRecordT.printType","103");
	   params1.put("prpCmain.sumAmount","902800");
	   params1.put("prpCmain.sumDiscount","326.33");
	   params1.put("prpCstampTaxBI.biTaxRate","");
	   params1.put("prpCstampTaxBI.biPayTax","0");
	   params1.put("prpCmain.sumPremium","6200.19");
	   params1.put("prpVisaRecordPCI.id.visaNo","");
	   params1.put("prpVisaRecordPCI.id.visaCode","");
	   params1.put("prpVisaRecordPCI.visaName","");
	   params1.put("prpVisaRecordPCI.printType","201");
	   params1.put("prpVisaRecordTCI.id.visaNo","");
	   params1.put("prpVisaRecordTCI.id.visaCode","");
	   params1.put("prpVisaRecordTCI.visaName","");
	   params1.put("prpVisaRecordTCI.printType","203");
	   params1.put("prpCmainCI.sumAmount","122000");
	   params1.put("prpCmainCI.sumDiscount","0");
	   params1.put("prpCstampTaxCI.ciTaxRate","");
	   params1.put("prpCstampTaxCI.ciPayTax","0");
	   params1.put("prpCmainCI.sumPremium","950");
	   params1.put("prpCmainCar.rescueFundRate","");
	   params1.put("prpCmainCar.resureFundFee","0");
	   params1.put("prpCmain.projectCode","");
	   params1.put("projectCode","");
	   params1.put("costRateUpper","");
	   params1.put("prpCmainCommon.ext3","");
	   params1.put("importantProjectCode","");
	   params1.put("prpCmain.operatorCode","99355911");
	   params1.put("operatorName","何锐玲");
	   params1.put("operateDateShow","");
	   params1.put("prpCmain.coinsFlag","00");
	   params1.put("coinsFlagBak","00");
	   params1.put("premium","");
	   params1.put("prpCmain.language","CNY");
	   params1.put("prpCmain.policySort","1");
	   params1.put("prpCmain.policyRelCode","");
	   params1.put("prpCmain.policyRelName","");
	   params1.put("subsidyRate","");
	   params1.put("policyRel","");
	   params1.put("prpCmain.reinsFlag","0");
	   params1.put("prpCmain.agriFlag","0");
	   params1.put("premium","");
	   params1.put("prpCmainCar.carCheckStatus","0");
	   params1.put("prpCmainCar.carChecker","");
	   params1.put("carCheckerTranslate","");
	   params1.put("prpCmainCar.carCheckTime","");
	   params1.put("prpCmainCommon.DBCFlag","0");
	   params1.put("prpCmain.argueSolution","1");
	   params1.put("prpCmain.arbitBoardName","");
	   params1.put("arbitBoardNameDes","");
	   params1.put("prpCcommissionsTemp_[0].costType","");
	   params1.put("prpCcommissionsTemp_[0].riskCode","");
	   params1.put("prpCcommissionsTemp_[0].currency","AED");
	   params1.put("prpCcommissionsTemp_[0].adjustFlag","0");
	   params1.put("prpCcommissionsTemp_[0].upperFlag","0");
	   params1.put("prpCcommissionsTemp_[0].auditRate","");
	   params1.put("prpCcommissionsTemp_[0].auditFlag","1");
	   params1.put("prpCcommissionsTemp_[0].sumPremium","");
	   params1.put("prpCcommissionsTemp_[0].costRate","");
	   params1.put("prpCcommissionsTemp_[0].costRateUpper","");
	   params1.put("prpCcommissionsTemp_[0].coinsRate","100");
	   params1.put("prpCcommissionsTemp_[0].coinsDeduct","1");
	   params1.put("prpCcommissionsTemp_[0].costFee","");
	   params1.put("prpCcommissionsTemp_[0].agreementNo","");
	   params1.put("prpCcommissionsTemp_[0].configCode","");
	   params1.put("hidden_index_commission","0");
	   params1.put("scmIsOpen","1111100000");
	   params1.put("prpCagents_[0].roleType","");
	   params1.put("roleTypeName_[0]","");
	   params1.put("prpCagents_[0].id.roleCode","");
	   params1.put("prpCagents_[0].roleCode_uni","");
	   params1.put("prpCagents_[0].roleName","");
	   params1.put("prpCagents_[0].costRate","");
	   params1.put("prpCagents_[0].costFee","");
	   params1.put("prpCagents_[0].flag","");
	   params1.put("prpCagents_[0].businessNature","");
	   params1.put("prpCagents_[0].isMain","");
	   params1.put("prpCagentCIs_[0].roleType","");
	   params1.put("roleTypeNameCI_[0]","");
	   params1.put("prpCagentCIs_[0].id.roleCode","");
	   params1.put("prpCagentCIs_[0].roleCode_uni","");
	   params1.put("prpCagentCIs_[0].roleName","");
	   params1.put("prpCagentCIs_[0].costRate","");
	   params1.put("prpCagentCIs_[0].costFee","");
	   params1.put("prpCagentCIs_[0].flag","");
	   params1.put("prpCagentCIs_[0].businessNature","");
	   params1.put("prpCagentCIs_[0].isMain","");
	   params1.put("commissionCount","");
	   params1.put("prpCsaless_[0].salesDetailName","");
	   params1.put("prpCsaless_[0].riskCode","");
	   params1.put("prpCsaless_[0].splitRate","");
	   params1.put("prpCsaless_[0].oriSplitNumber","");
	   params1.put("prpCsaless_[0].splitFee","");
	   params1.put("prpCsaless_[0].agreementNo","");
	   params1.put("prpCsaless_[0].id.salesCode","");
	   params1.put("prpCsaless_[0].salesName","");
	   params1.put("prpCsaless_[0].id.proposalNo","");
	   params1.put("prpCsaless_[0].id.salesDetailCode","");
	   params1.put("prpCsaless_[0].totalRate","");
	   params1.put("prpCsaless_[0].splitWay","");
	   params1.put("prpCsaless_[0].totalRateMax","");
	   params1.put("prpCsaless_[0].flag","");
	   params1.put("prpCsaless_[0].remark","");
	   params1.put("commissionPower","15,");
	   params1.put("hidden_index_prpCsales","0");
	   params1.put("prpCsalesDatils_[0].id.salesCode","");
	   params1.put("prpCsalesDatils_[0].id.proposalNo","");
	   params1.put("prpCsalesDatils_[0].id.  ","");
	   params1.put("prpCsalesDatils_[0].id.roleType","");
	   params1.put("prpCsalesDatils_[0].id.roleCode","");
	   params1.put("prpCsalesDatils_[0].currency","");
	   params1.put("prpCsalesDatils_[0].splitDatilRate","");
	   params1.put("prpCsalesDatils_[0].splitDatilFee","");
	   params1.put("prpCsalesDatils_[0].roleName","");
	   params1.put("prpCsalesDatils_[0].splitWay","");
	   params1.put("prpCsalesDatils_[0].flag","");
	   params1.put("prpCsalesDatils_[0].remark","");
	   params1.put("hidden_index_prpCsalesDatil","0");
	   params1.put("csManageSwitch","1");
	   params1.put("prpCmainChannel.agentCode","");
	   params1.put("prpCmainChannel.agentName","");
	   params1.put("prpCmainChannel.organCode","");
	   params1.put("prpCmainChannel.organCName","");
	   params1.put("comCodeType","");
	   params1.put("prpCmainChannel.identifyNumber","");
	   params1.put("prpCmainChannel.identifyType","");
	   params1.put("prpCmainChannel.manOrgCode","");
	   params1.put("prpCmain.remark","");
	   params1.put("prpDdismantleDetails_[0].id.agreementNo","");
	   params1.put("prpDdismantleDetails_[0].flag","");
	   params1.put("prpDdismantleDetails_[0].id.configCode","");
	   params1.put("prpDdismantleDetails_[0].id.assignType","");
	   params1.put("prpDdismantleDetails_[0].id.roleCode","");
	   params1.put("prpDdismantleDetails_[0].roleName","");
	   params1.put("prpDdismantleDetails_[0].costRate","");
	   params1.put("prpDdismantleDetails_[0].roleFlag","");
	   params1.put("prpDdismantleDetails_[0].businessNature","");
	   params1.put("prpDdismantleDetails_[0].roleCode_uni","");
	   params1.put("hidden_index_prpDdismantleDetails","0");
	   params1.put("payTimes","1");
	   params1.put("prpCplanTemps_[0].payNo","");
	   params1.put("prpCplanTemps_[0].serialNo","");
	   params1.put("prpCplanTemps_[0].endorseNo","");
	   params1.put("cplan_[0].payReasonC","");
	   params1.put("prpCplanTemps_[0].payReason","");
	   params1.put("prpCplanTemps_[0].planDate","");
	   params1.put("prpCplanTemps_[0].currency","");
	   params1.put("description_[0].currency","");
	   params1.put("prpCplanTemps_[0].planFee","");
	   params1.put("cplans_[0].planFee","");
	   params1.put("cplans_[0].backPlanFee","");
	   params1.put("prpCplanTemps_[0].netPremium","");
	   params1.put("prpCplanTemps_[0].taxPremium","");
	   params1.put("prpCplanTemps_[0].delinquentFee","");
	   params1.put("prpCplanTemps_[0].flag","");
	   params1.put("prpCplanTemps_[0].subsidyRate","");
	   params1.put("prpCplanTemps_[0].isBICI","");
	   params1.put("iniPrpCplan_Flag","");
	   params1.put("loadFlag9","");
	   params1.put("planfee_index","0");
	   params1.put("planStr","");
	   params1.put("planPayTimes","");
	   params1.put("prpCmainCar.flag","1");
	   params1.put("prpCmainCarFlag","1");
	   params1.put("coinsSchemeCode","");
	   params1.put("coinsSchemeName","");
	   params1.put("mainPolicyNo","");
	   params1.put("prpCcoinsMains_[0].id.serialNo","1");
	   params1.put("prpCcoinsMains_[0].coIdentity","1");
	   params1.put("prpCcoinsMains_[0].coinsCode","002");
	   params1.put("prpCcoinsMains_[0].coinsName","人保财产");
	   params1.put("prpCcoinsMains_[0].coinsRate","");
	   params1.put("prpCcoinsMains_[0].id.currency","CNY");
	   params1.put("prpCcoinsMains_[0].coinsAmount","");
	   params1.put("prpCcoinsMains_[0].coinsPremium","");
	   params1.put("prpCcoinsMains_[0].coinsPremium","");
	   params1.put("iniPrpCcoins_Flag","");
	   params1.put("hidden_index_ccoins","0");
	   params1.put("prpCpayeeAccountBIs_[0].id.proposalNo","");
	   params1.put("prpCpayeeAccountBIs_[0].id.serialNo","");
	   params1.put("prpCpayeeAccountBIs_[0].itemNo","");
	   params1.put("prpCpayeeAccountBIs_[0].payReason","");
	   params1.put("prpCpayeeAccountBIs_[0].payeeInfoid","");
	   params1.put("prpCpayeeAccountBIs_[0].accountName","");
	   params1.put("prpCpayeeAccountBIs_[0].basicBankCode","");
	   params1.put("prpCpayeeAccountBIs_[0].basicBankName","");
	   params1.put("prpCpayeeAccountBIs_[0].recBankAreaCode","");
	   params1.put("prpCpayeeAccountBIs_[0].recBankAreaName","");
	   params1.put("prpCpayeeAccountBIs_[0].bankCode","");
	   params1.put("prpCpayeeAccountBIs_[0].bankName","");
	   params1.put("prpCpayeeAccountBIs_[0].cnaps","");
	   params1.put("prpCpayeeAccountBIs_[0].accountNo","");
	   params1.put("prpCpayeeAccountBIs_[0].isPrivate","");
	   params1.put("prpCpayeeAccountBIs_[0].cardType","");
	   params1.put("prpCpayeeAccountBIs_[0].paySumFee","");
	   params1.put("prpCpayeeAccountBIs_[0].payType","");
	   params1.put("prpCpayeeAccountBIs_[0].intention","支付他方保费");
	   params1.put("prpCpayeeAccountBIs_[0].sendSms","");
	   params1.put("prpCpayeeAccountBIs_[0].identifyType","");
	   params1.put("prpCpayeeAccountBIs_[0].identifyNo","");
	   params1.put("prpCpayeeAccountBIs_[0].telephone","");
	   params1.put("prpCpayeeAccountBIs_[0].sendMail","");
	   params1.put("prpCpayeeAccountBIs_[0].mailAddr","");
	   params1.put("prpCpayeeAccountCIs_[0].id.proposalNo","");
	   params1.put("prpCpayeeAccountCIs_[0].id.serialNo","");
	   params1.put("prpCpayeeAccountCIs_[0].itemNo","");
	   params1.put("prpCpayeeAccountCIs_[0].payReason","");
	   params1.put("prpCpayeeAccountCIs_[0].payeeInfoid","");
	   params1.put("prpCpayeeAccountCIs_[0].accountName","");
	   params1.put("prpCpayeeAccountCIs_[0].basicBankCode","");
	   params1.put("prpCpayeeAccountCIs_[0].basicBankName","");
	   params1.put("prpCpayeeAccountCIs_[0].recBankAreaCode","");
	   params1.put("prpCpayeeAccountCIs_[0].recBankAreaName","");
	   params1.put("prpCpayeeAccountCIs_[0].bankCode","");
	   params1.put("prpCpayeeAccountCIs_[0].bankName","");
	   params1.put("prpCpayeeAccountCIs_[0].cnaps","");
	   params1.put("prpCpayeeAccountCIs_[0].accountNo","");
	   params1.put("prpCpayeeAccountCIs_[0].isPrivate","");
	   params1.put("prpCpayeeAccountCIs_[0].cardType","");
	   params1.put("prpCpayeeAccountCIs_[0].paySumFee","");
	   params1.put("prpCpayeeAccountCIs_[0].payType","");
	   params1.put("prpCpayeeAccountCIs_[0].intention","支付他方保费");
	   params1.put("prpCpayeeAccountCIs_[0].sendSms","");
	   params1.put("prpCpayeeAccountCIs_[0].identifyType","");
	   params1.put("prpCpayeeAccountCIs_[0].identifyNo","");
	   params1.put("prpCpayeeAccountCIs_[0].telephone","");
	   params1.put("prpCpayeeAccountCIs_[0].sendMail","");
	   params1.put("prpCpayeeAccountCIs_[0].mailAddr","");
	   params1.put("iReinsCode","");
	   params1.put("prpCspecialFacs_[0].reinsCode","001");
	   params1.put("iFReinsCode","");
	   params1.put("iPayCode","");
	   params1.put("iShareRate","");
	   params1.put("iCommRate","");
	   params1.put("iTaxRate","");
	   params1.put("iOthRate","");
	   params1.put("iCommission","");
	   params1.put("iOthPremium","");
	   params1.put("prpCspecialFacs_[0].id.reinsNo","1");
	   params1.put("prpCspecialFacs_[0].freinsCode","001");
	   params1.put("prpCspecialFacs_[0].payCode","001");
	   params1.put("prpCspecialFacs_[0].shareRate","001");
	   params1.put("prpCspecialFacs_[0].sharePremium","001");
	   params1.put("prpCspecialFacs_[0].commRate","001");
	   params1.put("prpCspecialFacs_[0].taxRate","001");
	   params1.put("prpCspecialFacs_[0].tax","001");
	   params1.put("prpCspecialFacs_[0].othRate","001");
	   params1.put("prpCspecialFacs_[0].commission","001");
	   params1.put("prpCspecialFacs_[0].othPremium","001");
	   params1.put("prpCspecialFacs_[0].reinsName","001");
	   params1.put("prpCspecialFacs_[0].freinsName","001");
	   params1.put("prpCspecialFacs_[0].payName","001");
	   params1.put("prpCspecialFacs_[0].remark","001");
	   params1.put("prpCspecialFacs_[0].flag","");
	   params1.put("hidden_index_specialFac","0");
	   params1.put("updateIndex","-1");
	   params1.put("iniCspecialFac_Flag","");
	   params1.put("_ReinsCode","");
	   params1.put("loadFlag8","");
	   params1.put("_FReinsCode","");
	   params1.put("_PayCode","");
	   params1.put("_ReinsName","");
	   params1.put("_FReinsName","");
	   params1.put("_PayName","");
	   params1.put("_CommRate","");
	   params1.put("_OthRate","");
	   params1.put("_ShareRate","");
	   params1.put("_Commission","");
	   params1.put("_OthPremium","");
	   params1.put("_SharePremium","");
	   params1.put("_TaxRate","");
	   params1.put("_Tax","");
	   params1.put("_Remark","");
	   params1.put("prpCsettlement.buyerUnitRank","3");
	   params1.put("prpCsettlement.buyerPreFee","7150.19");
	   params1.put("prpCsettlement.buyerUnitCode","");
	   params1.put("prpCsettlement.buyerUnitName","");
	   params1.put("prpCsettlement.upperUnitCode","");
	   params1.put("upperUnitName","");
	   params1.put("prpCsettlement.buyerUnitAddress","");
	   params1.put("prpCsettlement.buyerLinker","");
	   params1.put("prpCsettlement.buyerPhone","");
	   params1.put("prpCsettlement.buyerMobile","");
	   params1.put("prpCsettlement.buyerFax","");
	   params1.put("prpCsettlement.buyerUnitNature","1");
	   params1.put("prpCsettlement.buyerProvince","44000000");
	   params1.put("buyerProvinceDes","广东分公司");
	   params1.put("prpCsettlement.buyerBusinessSort","01");
	   params1.put("prpCsettlement.comCname","");
	   params1.put("prpCsettlement.linkerCode","");
	   params1.put("linkerName","");
	   params1.put("linkerPhone","");
	   params1.put("linkerMobile","");
	   params1.put("linkerFax","");
	   params1.put("prpCsettlement.comCode","");
	   params1.put("prpCsettlement.fundForm","1");
	   params1.put("prpCsettlement.flag","");
	   params1.put("settlement_Flag","");
	   params1.put("prpCcontriutions_[0].id.serialNo","1");
	   params1.put("prpCcontriutions_[0].contribType","F");
	   params1.put("prpCcontriutions_[0].contribCode","");
	   params1.put("prpCcontriutions_[0].contribName","");
	   params1.put("prpCcontriutions_[0].contribCode_uni","");
	   params1.put("prpCcontriutions_[0].contribPercent","");
	   params1.put("prpCcontriutions_[0].contribPremium","");
	   params1.put("prpCcontriutions_[0].remark","");
	   params1.put("hidden_index_ccontriutions","0");
	   params1.put("userCode","99355911");
	   params1.put("iProposalNo","");
	   params1.put("CProposalNo","");
	   params1.put("timeFlag","");
	   params1.put("prpCremarks_[0].id.proposalNo","");
	   params1.put("prpCremarks_[0].id.serialNo","");
	   params1.put("prpCremarks_[0].operatorCode","99355911");
	   params1.put("prpCremarks_[0].remark","");
	   params1.put("prpCremarks_[0].flag","");
	   params1.put("prpCremarks_[0].insertTimeForHis","");
	   params1.put("hidden_index_remark","0");
	   params1.put("ciInsureDemandCheckVo.demandNo","");
	   params1.put("ciInsureDemandCheckVo.checkQuestion","");
	   params1.put("ciInsureDemandCheckVo.checkAnswer","");
	   params1.put("ciInsureDemandCheckCIVo.demandNo","");
	   params1.put("ciInsureDemandCheckCIVo.checkQuestion","");
	   params1.put("ciInsureDemandCheckCIVo.checkAnswer","");
	   params1.put("ciInsureDemandCheckVo.flag","DEMAND");
	   params1.put("ciInsureDemandCheckVo.riskCode","");
	   params1.put("ciInsureDemandCheckCIVo.flag","DEMAND");
	   params1.put("ciInsureDemandCheckCIVo.riskCode","");
	   params1.put("flagCheck","00");
	   return params1;
	 
 }
}
