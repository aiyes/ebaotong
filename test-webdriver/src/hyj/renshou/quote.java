/**
 * 
 */
package hyj.renshou;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import com.alibaba.fastjson.JSON;
import com.ebtins.dto.open.CarLicenseInfoVo;
import com.ebtins.dto.open.CarModelInfoVo;
import com.ebtins.dto.open.CarOrderRelationInfoVo;
import com.ebtins.dto.open.CarOwnerInfoVo;
import com.ebtins.dto.open.CarQuoteInfoVo;
import com.ebtins.dto.open.CarQuoteInsItemVo;
import com.ebtins.dto.open.CarRenewalReq;
import com.ebtins.dto.open.CarRenewalRes;
import com.ebtins.open.common.constant.CarInsuranceConstant;
import com.ebtins.open.common.constant.CommonConstants;
import com.ebtins.open.common.util.ValidatorUtil;

import ebtins.smart.proxy.company.renbao.util.RenbaoUtil;
import ebtins.smart.proxy.company.renshou.util.RenshouUtil;
import ebtins.smart.proxy.util.Errors;
import huaan.quote.util.StringUtil;
import hyj.renshou.login.RenshouLogin;

/**
 * @ClassName: Renewal
 * @Description: TODO()
 * @author yejie.huang
 * @date 2016年11月7日 下午2:05:18
 *
 */

public class quote {
	final Log log=LogFactory.getLog(getClass());
	public static void main(String[] args) throws Exception {
		new quote().getRenewal(null);
	}
  public  CarRenewalRes getRenewal(CarRenewalReq req) throws Exception{
	  CarRenewalRes res= new CarRenewalRes();
	  String cookie = RenshouLogin.login();
	  String url0 = "http://9.0.6.69:7001/prpall/common/tbcbpg/UIPrpoenCallBlackGraySerach.jsp";
      String url1 = "http://9.0.6.69:7001/prpall/common/tbcbpg/UIPrPoEnCaculate.jsp";
      String refer0 = "http://9.0.6.69:7001/prpall/common/tb/UIProposalInput.jsp?OldEditType=NEW&CarLicenseNo=粤SS6W79&CarLicenseKindCode=02&oldOrNewCar=1&frameNoTemp=null&engineNoTemp=null&strOutcarflag=0";
      String refer1 = "http://9.0.6.69:7001/prpall/common/tb/UIProposalInput.jsp?OldEditType=NEW&CarLicenseNo=粤B58952&CarLicenseKindCode=02&oldOrNewCar=1&frameNoTemp=null&engineNoTemp=null&strOutcarflag=0";
      Map<String, String> params0=new HashMap<String,String>();
      params0.put("frameNo", "WAUAGD4M3GD023194");
      params0.put("licenseNo", "粤SS6W79");
      params0.put("vinNo", "WAUAGD4M3GD023194");
      params0.put("engineNo", "CRE061709");
      params0.put("appliIdentifyType", "01");
      params0.put("appliIdentifyNumber", "441425197312281133");
      params0.put("insuredIdentifyNumber", "441425197312281133");
      params0.put("insuredIdentifyType", "01");
      params0.put("insuredIdentifyNumber", "441425197312281133&");
      params0.put("ownerIdentifyType", "01");
      params0.put("modelCode", "ADAAII0035");
      Map<String,String> outCookie = new HashMap<String,String>();
      String body0 = RenshouLogin.post(url0, params0, "GBK", cookie, refer0, outCookie);
      System.out.println("body0-->"+body0);
      Map<String, String> params=new HashMap<String,String>();
	  getCalMap(params);
	  String body="";
	  try {
		body = RenshouLogin.post(url1, params, "GBK", cookie, refer1, outCookie);
		 System.out.println("body-->"+body);
		 System.out.println("params-->"+params);
		 System.out.println("cookie-->"+cookie);
	  } catch (Exception e) {
		e.printStackTrace();
		res.getHeader().setResCode("22000");
		res.getHeader().setResMsg("续保错误!");
		return res;
	  }
	 
	 return res;
  }
  public void getCalMap(Map<String,String> queryPayForParams){
	  queryPayForParams.put("strCertiNo","");
	  queryPayForParams.put("isProvisonal","0");
	  queryPayForParams.put("SaveOnlyCIFlag","0");
	  queryPayForParams.put("buttonCancel","%C8%A1+%CF%FB");
	  queryPayForParams.put("SumPayTaxAndPremium","13544.22%D4%AA");
	  queryPayForParams.put("resultsourceflag","");
	  queryPayForParams.put("EditType","NEW");
	  queryPayForParams.put("BizNo","");
	  queryPayForParams.put("JfeePayType","2");
	  queryPayForParams.put("CIInsurerType","1");
	  queryPayForParams.put("CIArmyFlag","0");
	  queryPayForParams.put("CIInsuredNewFlag","1");
	  queryPayForParams.put("CIUndwrtPriorityFlag","1");
	  queryPayForParams.put("CIInsurerBizNo","");
	  queryPayForParams.put("CIInsurerCompany","");
	  queryPayForParams.put("undefind","");
	  queryPayForParams.put("LSValidStatusFlag","1");
	  queryPayForParams.put("ControlOpenPoundageCom","true");
	  queryPayForParams.put("ControlPoundageCom","true");
	  queryPayForParams.put("SetRuleEngine","false");
	  queryPayForParams.put("idcard","false");
	  queryPayForParams.put("FeiGaiCompanyFlag","true");
	  queryPayForParams.put("PlatformCacheColumnConfig","0");
	  queryPayForParams.put("PlatformCacheColumnConfigNew","1");
	  queryPayForParams.put("CaculateAllStep","1");
	  queryPayForParams.put("CaculateStep","%2C1%2C3%2C2%2C3%2C3%2C1%2C3%2C2%2C3%2C3");
	  queryPayForParams.put("RuleRequestType","Y");
	  queryPayForParams.put("PlatformDemendNo","");
	  queryPayForParams.put("hisFlag","");
	  queryPayForParams.put("insuProKey","");
	  queryPayForParams.put("sellProKey","");
	  queryPayForParams.put("claProKey","");
	  queryPayForParams.put("provisonalEdit","");
	  queryPayForParams.put("isAutoAppliFlag","");
	  queryPayForParams.put("IsUpdateMotorProfit","");
	  queryPayForParams.put("SameToApplicantTemp","");
	  queryPayForParams.put("SameToInsuredTemp","");
	  queryPayForParams.put("IsUsbFlag","1");
	  queryPayForParams.put("PolicynoRenewal","");
	  queryPayForParams.put("PolicyCityCode","");
	  queryPayForParams.put("PolicyAreaCode","");
	  queryPayForParams.put("ChargingBasicsType","");
	  queryPayForParams.put("protocolType","");
	  queryPayForParams.put("protocolNo1","");
	  queryPayForParams.put("motorCadeBusiness","");
	  queryPayForParams.put("signMarking","");
	  queryPayForParams.put("insuProKeyFlag","0");
	  queryPayForParams.put("sellProKeyFlag","0");
	  queryPayForParams.put("claProKeyFlag","0");
	  queryPayForParams.put("resultUseTypeFlag","+");
	  queryPayForParams.put("UnionModifyType","");
	  queryPayForParams.put("EDITTYPE","NEW");
	  queryPayForParams.put("BIZTYPE","PROPOSAL");
	  queryPayForParams.put("RULEOFNEWCOMMISSION_MOTORCADE","false");
	  queryPayForParams.put("CommonRisk","");
	  queryPayForParams.put("checkFlag","1");
	  queryPayForParams.put("orderStatus","");
	  queryPayForParams.put("OldPolicyNo","");
	  queryPayForParams.put("ClassCode","05");
	  queryPayForParams.put("ManyAgentToOneFlag","true");
	  queryPayForParams.put("carTaxpayerInput","1");
	  queryPayForParams.put("TransferEndorseType","");
	  queryPayForParams.put("CarToMotorcadeEndorType","");
	  queryPayForParams.put("MotorcadeToCarEndorType","");
	  queryPayForParams.put("CIINSURE_V300","true");
	  queryPayForParams.put("CIINSURE_V300_MOTOPlat","false");
	  queryPayForParams.put("CIINSURE_V300_MOTOPlat_OFF","false");
	  queryPayForParams.put("KtaxComIsShow","false");
	  queryPayForParams.put("ShowCarOwner","true");
	  queryPayForParams.put("PaidFreeCertificateIsShow","false");
	  queryPayForParams.put("CIINSURE_V300_TractorPlat","false");
	  queryPayForParams.put("HistoryPolicyCIInsureV300","0");
	  queryPayForParams.put("CARSHIPTAX2012","false");
	  queryPayForParams.put("BIInsureV212","true");
	  queryPayForParams.put("ReturnTaxActualFlag","false");
	  queryPayForParams.put("NoDrawbackCarshipTaxFlag","false");
	  queryPayForParams.put("isCIRenFlag","0");
	  queryPayForParams.put("CIInsureV262","true");
	  queryPayForParams.put("CIInsureV264","false");
	  queryPayForParams.put("CIInsureBJV295","false");
	  queryPayForParams.put("IsInputCertifyDate","false");
	  queryPayForParams.put("CARSHIPTAXTJSWITCH","1");
	  queryPayForParams.put("CARSHIPTAXTJWSCSWITCH","1");
	  queryPayForParams.put("InOperatorPower","true");
	  queryPayForParams.put("LoginComCode","44031573");
	  queryPayForParams.put("LoginUserCode","412828199111111010");
	  queryPayForParams.put("LoginComCode1","4403159003");
	  queryPayForParams.put("AwardFactor","0");
	  queryPayForParams.put("IsBIInsure","true");
	  queryPayForParams.put("ControlTransferDate","false");
	  queryPayForParams.put("DriverEnage","false");
	  queryPayForParams.put("CIZJIAZJIU","false");
	  queryPayForParams.put("IsBIVersion","true");
	  queryPayForParams.put("BICarModelFlag","false");
	  queryPayForParams.put("ZJH1OnLineDate","2010-05-28");
	  queryPayForParams.put("NBMotorOnLineDate","2010-11-15");
	  queryPayForParams.put("JSMotorOnLineDate","2010-06-29");
	  queryPayForParams.put("HLJMotorOnLineDate","2012-12-14");
	  queryPayForParams.put("CIInsuredPlatComcode","43%2C32%2C33%2C34%2C37%2C36%2C4403%2C3302%2C23%2C14%2C41%2C13%2C15%2C15%2C13%2C3502%2C44%2C51%2C53%2C61%2C45%2C35%2C46%2C52%2C62%2C50%2C12%2C65%2C42%2C21%2C3702%2C22%2C2102%2C%2C63%2C%2C64%2C");
	  queryPayForParams.put("PurchasePriceNotFloatingComcode","%2C");
	  queryPayForParams.put("GXTaxedPriceOnlineDate","2010-08-30");
	  queryPayForParams.put("JHZJMode","0");
	  queryPayForParams.put("policyInputDate","");
	  queryPayForParams.put("compareInputDate","");
	  queryPayForParams.put("BIInsureSZ","true");
	  queryPayForParams.put("historyPolicySZ","2011-02-22");
	  queryPayForParams.put("historyPolicySZFlag","0");
	  queryPayForParams.put("historyCXPolicySZFlag","0");
	  queryPayForParams.put("historyCXPolicyJSFlag","0");
	  queryPayForParams.put("historyCXPolicy37Flag","0");
	  queryPayForParams.put("historyCXPolicyFlag","0");
	  queryPayForParams.put("historyPolicyGXFlag","0");
	  queryPayForParams.put("businessNatureLink","");
	  queryPayForParams.put("LifeInsuranceFlag","false");
	  queryPayForParams.put("CarShipTaxPlatCalFlag","true");
	  queryPayForParams.put("CIINSURE_SINOSOFT_CARSHIPTAX","true");
	  queryPayForParams.put("TJCarshiptaxNew","2012-09-20");
	  queryPayForParams.put("SalesCallDisrate","false");
	  queryPayForParams.put("ComcodeManageRate","true");
	  queryPayForParams.put("ChannelManageRate","%2C03%2C");
	  queryPayForParams.put("compareEnrollDate","2015-10-09");
	  queryPayForParams.put("AssociateFlag","");
	  queryPayForParams.put("PolicyClaimGuid","");
	  queryPayForParams.put("isRelationInsurance","true");
	  queryPayForParams.put("isChoiceFlag","1");
	  queryPayForParams.put("isHDflagBI","1");
	  queryPayForParams.put("isHDflagCI","1");
	  queryPayForParams.put("IsArmyFlag","");
	  queryPayForParams.put("chgOwnerUnionFlag","");
	  queryPayForParams.put("PolicyCINo","");
	  queryPayForParams.put("ContinueDealFlag","");
	  queryPayForParams.put("ChgOwnerCIDemandNo","");
	  queryPayForParams.put("oldPtextCI","");
	  queryPayForParams.put("agentFlag","");
	  queryPayForParams.put("agentCodeNew","");
	  queryPayForParams.put("agentNameNew","");
	  queryPayForParams.put("Handler2profNoNew","");
	  queryPayForParams.put("Handler2NameNew","");
	  queryPayForParams.put("handler2PhoneNumberNew","");
	  queryPayForParams.put("handler2Flag","");
	  queryPayForParams.put("Handler3profNoNew","");
	  queryPayForParams.put("AgreementNoNew","");
	  queryPayForParams.put("IsRenewal","null");
	  queryPayForParams.put("isGuaCarMain","false");
	  queryPayForParams.put("RFQueryButton","true");
	  queryPayForParams.put("CIV555CarshipTax","false");
	  queryPayForParams.put("checkCredentialNo","false");
	  queryPayForParams.put("CarAddressCodeTJFlag","1");
	  queryPayForParams.put("checkCarUsingFlag","false");
	  queryPayForParams.put("AcceptFullEndorPolicyNo","805112016441322000802%2C805112016410100015552%2C805112016231099000776%2C805112016411622000325%2C805112016370881000625%2C805112016430130002068%2C805112016441397003487%2C805112016220322000244%2C805112016410103012639%2C805112016410103012690%2C805112016410181001501%2C805112016129971007886%2C805112016150627000585%2C805112016431103000316%2C805112016129700010083%2C805112016511301000359%2C805112016410100031043%2C805112016410112008406%2C805112016340800001096%2C805112016411525001487%2C805112016410182001165%2C805112016129981003073%2C805112016440605005402%2C805112016230898000047%2C805112016511097000520%2C805112016411625000365%2C805112016411627000360%2C805112016430732000323%2C805112016411403000318%2C805112016500106001440%2C805112016440697021947%2C805112016230283000075%2C805112016231100000670%2C805112016442001002862%2C805112016341021001557%2C805112016370883003138%2C805112016330300000091%2C805112016440797011727%2C805112016129971010986%2C805112015450231000330%2C805112016340481000743%2C805112016440705000408%2C805122016610114000006%2C805112016341791003744%2C805112016230502000273%2C805112016430130003332%2C805112016129700001360%2C805112016440697009487%2C805112016150602001056%2C805112016610626000446%2C805112016411600004571%2C805112016340292001245%2C805112016500117001387%2C805112015440697000174%2C805112015230881000288%2C805112015371000004100%2C805112016411522000012%2C805112016340390001177%2C805112016341090001755%2C805112016220100001673%2C805112016410110037708%2C805112016421197000267%2C805112016431022000913%2C805112016370261000176%2C805112016610697000181%2C805112016610825000062%2C805112016431302000426%2C805112016640197000093%2C805112016420197001173%2C805112016370397001117%2C805112016430732000163%2C805112016129700000414%2C805112016370281001175%2C805112016500199009345%2C805112016430783000208%2C805112016370697001489%2C805112016500199019876%2C805112016610300000157%2C805112016341621000271%2C805112016220897000199%2C805112016510105001961%2C805112016129981001723%2C805112016129981001728%2C805112016371421000858%2C805112016430104002638%2C805112016440190016464%2C805112016530191000255%2C805112016522728000077%2C805112016321297000653%2C805112016321284001439%2C805112016440190024280%2C805112016320593001548%2C805112016230106001320%2C805112016320190000194%2C805112016231003000769%2C805112016321103000212%2C805112016410325000421");
	  queryPayForParams.put("AcceptFullEndorSwitch","true");
	  queryPayForParams.put("BIVERSION7012","false");
	  queryPayForParams.put("VINQuerySwitch","true");
	  queryPayForParams.put("checkBIMO","false");
	  queryPayForParams.put("VipFlag","true");
	  queryPayForParams.put("CarShiptTaxTJFlag","false");
	  queryPayForParams.put("ProfessionalFlag","false");
	  queryPayForParams.put("BIInsureV200","false");
	  queryPayForParams.put("BIInsureV325","false");
	  queryPayForParams.put("BIInsureV325_onLineTime","2013-12-28");
	  queryPayForParams.put("NeedCarModel","false");
	  queryPayForParams.put("BIInsureSZ103","true");
	  queryPayForParams.put("businessNaturePrintJS","false");
	  queryPayForParams.put("businessNaturePrintJSLink","");
	  queryPayForParams.put("BIInsureV142","true");
	  queryPayForParams.put("FactorPlaceFlag","0");
	  queryPayForParams.put("GTFloatRateModel","false");
	  queryPayForParams.put("NoApproveFlag","");
	  queryPayForParams.put("ProposalLevel","");
	  queryPayForParams.put("EndorseOption","null");
	  queryPayForParams.put("OldPolicy","");
	  queryPayForParams.put("ValidDate","null");
	  queryPayForParams.put("EndorDate","null");
	  queryPayForParams.put("pComCode","null");
	  queryPayForParams.put("EndorseType","");
	  queryPayForParams.put("oldPtext","");
	  queryPayForParams.put("EndorseAppli","null");
	  queryPayForParams.put("BaseAmount","741000.00");
	  queryPayForParams.put("MotorCadeNature","");
	  queryPayForParams.put("MotorCadeCoeff","");
	  queryPayForParams.put("MainVisaCode","");
	  queryPayForParams.put("LocTypeCode","null");
	  queryPayForParams.put("VisaSerialNo","null");
	  queryPayForParams.put("VisaHandlerCode","null");
	  queryPayForParams.put("ALLOW_DISPLAY_SPECIALITEM","2");
	  queryPayForParams.put("dlfalg","");
	  queryPayForParams.put("isCIInsure","1");
	  queryPayForParams.put("underWriteFlag","N");
	  queryPayForParams.put("oneKindCodeOfFlag","");
	  queryPayForParams.put("JFeeFlag","");
	  queryPayForParams.put("ExchangeRate","");
	  queryPayForParams.put("TEIniTime","2017-01-10+13%3A28%3A33");
	  queryPayForParams.put("OPRemarkID","20170110132833227250866");
	  queryPayForParams.put("StopTimes","");
	  queryPayForParams.put("ssOrderNo","");
	  queryPayForParams.put("vipIntSize","1");
	  queryPayForParams.put("vipPID","");
	  queryPayForParams.put("vipPSNNAME","");
	  queryPayForParams.put("vipPSNLEVEL1","");
	  queryPayForParams.put("vipPSNLEVEL2","");
	  queryPayForParams.put("vipCARDNO","");
	  queryPayForParams.put("vipCARDTYPE","");
	  queryPayForParams.put("vipPSNTYPE","");
	  queryPayForParams.put("vipImagePath","");
	  queryPayForParams.put("vipStartDate","");
	  queryPayForParams.put("vipEndDate","");
	  queryPayForParams.put("ProtocolCode","");
	  queryPayForParams.put("CalType","");
	  queryPayForParams.put("CIINSUREV600","true");
	  queryPayForParams.put("CIINSUREJSV600","false");
	  queryPayForParams.put("UsbKeyFlag","0");
	  queryPayForParams.put("UsbKeyReadFlag","");
	  queryPayForParams.put("UsbKeyReadSucFlag","");
	  queryPayForParams.put("ICCardFlag","N");
	  queryPayForParams.put("ICCardSucFlag","");
	  queryPayForParams.put("ICCardNo","");
	  queryPayForParams.put("ICCompanyCode","");
	  queryPayForParams.put("ICAgentName","");
	  queryPayForParams.put("ICAgentLicNo","");
	  queryPayForParams.put("ICChuDanDianName","");
	  queryPayForParams.put("ICChuDanDianAddr","");
	  queryPayForParams.put("ICValidBeginYear","");
	  queryPayForParams.put("ICValidBeginMonth","");
	  queryPayForParams.put("ICValidBeginDay","");
	  queryPayForParams.put("ICValidEndYear","");
	  queryPayForParams.put("ICValidEndMonth","");
	  queryPayForParams.put("ICValidEndDay","");
	  queryPayForParams.put("ICCardProTime","");
	  queryPayForParams.put("IntermediarybusinessAddIPAddr","false");
	  queryPayForParams.put("IPAddress","9.31.237.90");
	  queryPayForParams.put("UsbKey0503Distance","");
	  queryPayForParams.put("BusinessNature","2");
	  queryPayForParams.put("BusinessNatureName","%D7%A8%D2%B5%B4%FA%C0%ED");
	  queryPayForParams.put("BusinessNature_Flag","");
	  queryPayForParams.put("ChannelTypeLink","%2C07%2C05%2C01%2C%2C08%2C09%2C");
	  queryPayForParams.put("ChannelType","09");
	  queryPayForParams.put("AgentCode","75047232-2");
	  queryPayForParams.put("AgentName","%C9%EE%DB%DA%CA%D0%D2%CB%B1%A3%CD%A8%B1%A3%CF%D5%CF%FA%CA%DB%D3%D0%CF%DE%B9%AB%CB%BE");
	  queryPayForParams.put("AgentDays","857.00");
	  queryPayForParams.put("PerendDate","2019-05-17");
	  queryPayForParams.put("AgentStartSysDays","-4966.00");
	  queryPayForParams.put("ComCodeSession","44031573");
	  queryPayForParams.put("AgentCodeOfPdagentSub","");
	  queryPayForParams.put("btSelectAgentProtocol","%D1%A1%D4%F1%D0%AD%D2%E9");
	  queryPayForParams.put("hidden","");
	  queryPayForParams.put("ComCode","4403159003");
	  queryPayForParams.put("ComName","%C9%EE%DB%DA%CA%D0%B7%D6%B9%AB%CB%BE%B4%FA%C0%ED%D2%B5%CE%F1%B2%BF%D7%DB%BA%CF%D2%B5%CE%F1%C8%FD%B2%BF");
	  queryPayForParams.put("GroupType","0102");
	  queryPayForParams.put("AgreementNo","75047232-2-01");
	  queryPayForParams.put("Agreement","%B4%FA%C0%ED%D0%AD%D2%E9%BA%C5%A3%BA");
	  queryPayForParams.put("AgreeDays","536.00");
	  queryPayForParams.put("AgreementEndDate","2018-06-30");
	  queryPayForParams.put("AgreeStartSysDays","-193.00");
	  queryPayForParams.put("AgreementFlag","N");
	  queryPayForParams.put("GroupNatureFlag","");
	  queryPayForParams.put("GroupNature01Flag","1");
	  queryPayForParams.put("Handler1Code","372925197706204579");
	  queryPayForParams.put("Handler1Name","%BD%AA%BA%CF%C1%A6");
	  queryPayForParams.put("HandlerCode","372925197706204579");
	  queryPayForParams.put("UserTypeDomain","04");
	  queryPayForParams.put("HandlerName","%BD%AA%BA%CF%C1%A6");
	  queryPayForParams.put("Handler1profNo","");
	  queryPayForParams.put("FactoryCode","");
	  queryPayForParams.put("FactoryName","");
	  queryPayForParams.put("Handler3profNo","");
	  queryPayForParams.put("Handler2Name","");
	  queryPayForParams.put("Handler2profNo","undefined");
	  queryPayForParams.put("handler2PhoneNumber","undefined");
	  queryPayForParams.put("ApproveCodeBJ","");
	  queryPayForParams.put("ApproveNameBJ","");
	  queryPayForParams.put("FactorPlaceCode","");
	  queryPayForParams.put("FactorPlaceName","");
	  queryPayForParams.put("RiskCode","0511");
	  queryPayForParams.put("RiskName","%BB%FA%B6%AF%B3%B5%D7%DB%BA%CF%C9%CC%D2%B5%B1%A3%CF%D5");
	  queryPayForParams.put("ContractNo","");
	  queryPayForParams.put("GroupCode","");
	  queryPayForParams.put("ProposalNo","");
	  queryPayForParams.put("EndorseNo","");
	  queryPayForParams.put("ProposalNo1","");
	  queryPayForParams.put("PolicyNo","");
	  queryPayForParams.put("PrintNo_Flag","");
	  queryPayForParams.put("PrintNo","null");
	  queryPayForParams.put("PrintNoCI","");
	  queryPayForParams.put("MainVisaCodeCI","");
	  queryPayForParams.put("MainHead_Flag","");
	  queryPayForParams.put("GoalInsuredFlag","0");
	  queryPayForParams.put("PolicySort","0");
	  queryPayForParams.put("SystemSource","");
	  queryPayForParams.put("BankCode","");
	  queryPayForParams.put("BankCName","");
	  queryPayForParams.put("IsComCode","");
	  queryPayForParams.put("RenewalFlag","0");
	  queryPayForParams.put("RenewalFlagName","%B7%C7%D0%F8%B1%A3");
	  queryPayForParams.put("OldPolicyNoRenewal","");
	  queryPayForParams.put("Language","C");
	  queryPayForParams.put("ProjectsFlag","0");
	  queryPayForParams.put("ShareHolderFlag","0");
	  queryPayForParams.put("ShareHolderName","0");
	  queryPayForParams.put("AgriType","0");
	  queryPayForParams.put("DisRateX","");
	  queryPayForParams.put("agentPersonName","");
	  queryPayForParams.put("identifyType","01");
	  queryPayForParams.put("AgentidentifyNumber","");
	  queryPayForParams.put("telephoneNumber","");
	  queryPayForParams.put("zipCode","");
	  queryPayForParams.put("agentPersonAddress","");
	  queryPayForParams.put("SQDBUnitTaxRegisterNumberStartDate","");
	  queryPayForParams.put("SQDBUnitTaxRegisterNumberEndDate","");
	  queryPayForParams.put("foldFlag","1");
	  queryPayForParams.put("MakeCom","44031573");
	  queryPayForParams.put("PTAccountFlag","0");
	  queryPayForParams.put("AppliNameother","");
	  queryPayForParams.put("Tail_Flag","");
	  queryPayForParams.put("CheckEmail","");
	  queryPayForParams.put("DefaultCarChecker","412828199111111010");
	  queryPayForParams.put("checkUseQueryButton","true");
	  queryPayForParams.put("MainRemark","");
	  queryPayForParams.put("ArgueSolution","1");
	  queryPayForParams.put("ArbitBoardCode","");
	  queryPayForParams.put("ArbitBoardName","");
	  queryPayForParams.put("CarCheckStatus","4");
	  queryPayForParams.put("CarCheckReason","1");
	  queryPayForParams.put("CarChecker","372925197706204579");
	  queryPayForParams.put("CarCheckerName","%BD%AA%BA%CF%C1%A6");
	  queryPayForParams.put("CarCheckTime","2017-01-10+13%3A28");
	  queryPayForParams.put("IsTJRepairFactory","1");
	  queryPayForParams.put("TJRepairFactoryOrderNo","undefined");
	  queryPayForParams.put("showColumn","");
	  queryPayForParams.put("TJRepairFactoryName","");
	  queryPayForParams.put("ReinsFlag","0");
	  queryPayForParams.put("OtherNature4","1");
	  queryPayForParams.put("Other_Flag","");
	  queryPayForParams.put("OperatorCodeFC","");
	  queryPayForParams.put("IsFocus","0");
	  queryPayForParams.put("BusinessID1","");
	  queryPayForParams.put("GetWay","1");
	  queryPayForParams.put("InsureMode","1");
	  queryPayForParams.put("GetWayDesc","");
	  queryPayForParams.put("optfxqky","0");
	  queryPayForParams.put("OperatorCodeFC","");
	  queryPayForParams.put("BankbusinessFlag","0");
	  queryPayForParams.put("BankbusinessBankCode","");
	  queryPayForParams.put("BankbusinessBankName","");
	  queryPayForParams.put("otherFoldFlag","1");
	  queryPayForParams.put("UtiPower","1");
	  queryPayForParams.put("CarShipFlag","1");
	  queryPayForParams.put("FunType","02");
	  queryPayForParams.put("FloatFlag","0");
	  queryPayForParams.put("FloatName","UICentralControl");
	  queryPayForParams.put("MinusFlag","null");
	  queryPayForParams.put("ProvisonalNo","");
	  queryPayForParams.put("vipCustomIntSize","");
	  queryPayForParams.put("vipCustomPID","100348297385");
	  queryPayForParams.put("vipCustomPSNNAME","");
	  queryPayForParams.put("vipCustomPSNLEVEL1","20");
	  queryPayForParams.put("vipCustomPSNLEVEL2","40");
	  queryPayForParams.put("vipCustomCARDNO","");
	  queryPayForParams.put("vipCustomCARDTYPE","");
	  queryPayForParams.put("vipCustomPSNTYPE","");
	  queryPayForParams.put("vipCustomImagePath","%2Fprpall%2Fcommon%2Fimages%2FVIP03.gif");
	  queryPayForParams.put("vipCustomStartDate","");
	  queryPayForParams.put("vipCustomEndDate","");
	  queryPayForParams.put("vipInsuredIntSize","");
	  queryPayForParams.put("vipInsuredPID","100348297385");
	  queryPayForParams.put("vipInsuredPSNNAME","");
	  queryPayForParams.put("vipInsuredPSNLEVEL1","20");
	  queryPayForParams.put("vipInsuredPSNLEVEL2","40");
	  queryPayForParams.put("vipInsuredCARDNO","");
	  queryPayForParams.put("vipInsuredCARDTYPE","");
	  queryPayForParams.put("vipInsuredPSNTYPE","");
	  queryPayForParams.put("vipInsuredImagePath","%2Fprpall%2Fcommon%2Fimages%2FVIP03.gif");
	  queryPayForParams.put("vipInsuredStartDate","");
	  queryPayForParams.put("vipInsuredEndDate","");
	  queryPayForParams.put("SynChronize_flag","");
	  queryPayForParams.put("CustomerTypeCode","");
	  queryPayForParams.put("AppliBusiLicense","");
	  queryPayForParams.put("AppliLicenseStartDate","");
	  queryPayForParams.put("AppliLicenseEndDate","");
	  queryPayForParams.put("InsuredBusiLicense","");
	  queryPayForParams.put("InsuredLicenseStartDate","");
	  queryPayForParams.put("InsuredLicenseEndDate","");
	  queryPayForParams.put("CustomerTypeHidden","1");
	  queryPayForParams.put("ACTIONTYPE","3");
	  queryPayForParams.put("UPDATE_CUSTOMER_FLAG","");
	  queryPayForParams.put("InsuredQueryFlag","0");
	  queryPayForParams.put("AppliOrInsured","0");
	  queryPayForParams.put("strFlag","");
	  queryPayForParams.put("prpDcustomerIdvCustomerCode","");
	  queryPayForParams.put("prpDcustomerIdvIdentifyType","01");
	  queryPayForParams.put("prpDcustomerIdvIdentifyNumber","441425197312281133");
	  queryPayForParams.put("prpDcustomerUnitOrganizeCode","");
	  queryPayForParams.put("prpDcustomerUnitCustomerCode","");
	  queryPayForParams.put("prpDcustomerUnitCustomerCName","");
	  queryPayForParams.put("AppliOrInsuredUpdateFlag","");
	  queryPayForParams.put("IdentifyAppliOrInsuredName","");
	  queryPayForParams.put("UseImagePlat","true");
	  queryPayForParams.put("AppliMobileQuery","");
	  queryPayForParams.put("AppliPhoneNumberQuery","");
	  queryPayForParams.put("InsuredMobileQuery","");
	  queryPayForParams.put("InsuredPhoneNumberQuery","");
	  queryPayForParams.put("AppliMessage","");
	  queryPayForParams.put("InsuredMessage","");
	  queryPayForParams.put("TelephoneRealyTypeFlag","0");
	  queryPayForParams.put("ElectronicPolicyUtiPower","false");
	  queryPayForParams.put("CIElectronicPolicyUtiPower","false");
	  queryPayForParams.put("UnuseField","");
	  queryPayForParams.put("GuangXiCustomerFlag","true");
	  queryPayForParams.put("MobileFlag","");
	  queryPayForParams.put("BusinessNatureFlag","");
	  queryPayForParams.put("CVR_IDCARD","false");
	  queryPayForParams.put("mustVerfiyFlag","false");
	  queryPayForParams.put("PrpslPoliFlag","false");
	  queryPayForParams.put("CardCancelFlag","");
	  queryPayForParams.put("historyDateFlag","");
	  queryPayForParams.put("CustomerTypeAppli","1");
	  queryPayForParams.put("prpDcustomerIdvCustomerCode0","");
	  queryPayForParams.put("prpDcustomerIdvIdentifyType0","01");
	  queryPayForParams.put("CertificateName","");
	  queryPayForParams.put("prpDcustomerUnitCustomerCode0","");
	  queryPayForParams.put("prpDcustomerUnitOrganizeCode0","");
	  queryPayForParams.put("AppliName","%D0%BB%C0%FB%D6%D0");
	  queryPayForParams.put("AppliSex","1");
	  queryPayForParams.put("prpDcustomerUnitCustomerCName0","");
	  queryPayForParams.put("prpDcustomerIdvIdentifyNumber0","441425197312281133");
	  queryPayForParams.put("AppliAddress","");
	  queryPayForParams.put("AppliIdentifyType","01");
	  queryPayForParams.put("AppliIdentifyNumber","441425197312281133");
	  queryPayForParams.put("AppliCertificadeName","");
	  queryPayForParams.put("AppliAge","43");
	  queryPayForParams.put("AppliJob","");
	  queryPayForParams.put("AppliJobCode","");
	  queryPayForParams.put("AppliBirthDay","1973-12-28");
	  queryPayForParams.put("AppliRegistID","100171045261");
	  queryPayForParams.put("AppliCountryCode","");
	  queryPayForParams.put("AppliNationCode","");
	  queryPayForParams.put("AppliCUnitOratypeCode","");
	  queryPayForParams.put("AppliCUnitOratypeCodeEnt","");
	  queryPayForParams.put("AppliBusinessSourceCode","");
	  queryPayForParams.put("AppliMobile","13652402418");
	  queryPayForParams.put("AppliReTimes","8");
	  queryPayForParams.put("AppliPhoneNumber","");
	  queryPayForParams.put("RelationDeal","0");
	  queryPayForParams.put("FocusName","InsuredCode");
	  queryPayForParams.put("AppliCode","100348297385");
	  queryPayForParams.put("CustomerType","1");
	  queryPayForParams.put("NationFlag","1");
	  queryPayForParams.put("AppliInsuredAccount","");
	  queryPayForParams.put("AccountCodeZize","");
	  queryPayForParams.put("AppliLinkerName","%D0%BB%C0%FB%D6%D0");
	  queryPayForParams.put("AppliEmail","");
	  queryPayForParams.put("Appli_Flag","");
	  queryPayForParams.put("AppliInsuredBank","");
	  queryPayForParams.put("AppliPostCode","");
	  queryPayForParams.put("SQDBUnitTaxRegisterNo","");
	  queryPayForParams.put("SameToApplicant","on");
	  queryPayForParams.put("SameToApplicantInput","%CD%AC%CD%B6%B1%A3%C8%CB");
	  queryPayForParams.put("UnuseField2","");
	  queryPayForParams.put("InsuredCountryCode","");
	  queryPayForParams.put("InsuredBirthDay","1973-12-28");
	  queryPayForParams.put("InsuredNationCode","");
	  queryPayForParams.put("InsuredRegistID","100171045261");
	  queryPayForParams.put("InsuredCUnitOratypeCode","");
	  queryPayForParams.put("InsuredCUnitOratypeCodeEnt","");
	  queryPayForParams.put("InsuredBusinessSourceCode","");
	  queryPayForParams.put("InsuredNature","3");
	  queryPayForParams.put("CustomerTypeInsure","1");
	  queryPayForParams.put("prpDcustomerIdvCustomerCode1","");
	  queryPayForParams.put("prpDcustomerIdvIdentifyType1","01");
	  queryPayForParams.put("CertificateName1","");
	  queryPayForParams.put("prpDcustomerUnitCustomerCode1","");
	  queryPayForParams.put("prpDcustomerUnitOrganizeCode1","");
	  queryPayForParams.put("InsuredName","%D0%BB%C0%FB%D6%D0");
	  queryPayForParams.put("prpDcustomerUnitCustomerCName1","");
	  queryPayForParams.put("BusinessSort","15");
	  queryPayForParams.put("prpDcustomerIdvIdentifyNumber1","441425197312281133");
	  queryPayForParams.put("InsuredAddress","");
	  queryPayForParams.put("InsuredMobile","13652402418");
	  queryPayForParams.put("InsuredReTimes","8");
	  queryPayForParams.put("InsuredPhoneNumber","");
	  queryPayForParams.put("SQDBUnitTaxRegisterNo1","");
	  queryPayForParams.put("InsuredLinkerName","%D0%BB%C0%FB%D6%D0");
	  queryPayForParams.put("InsuredCode","100348297385");
	  queryPayForParams.put("CustomerType1","1");
	  queryPayForParams.put("InsuredSex","1");
	  queryPayForParams.put("InsuredJob","");
	  queryPayForParams.put("InsuredJobCode","");
	  queryPayForParams.put("InsuredAge","43");
	  queryPayForParams.put("InsuredMarriage","1");
	  queryPayForParams.put("InsuredBank","");
	  queryPayForParams.put("InsuredEmail","");
	  queryPayForParams.put("Insured_Flag","");
	  queryPayForParams.put("InsuredIdentifyType","01");
	  queryPayForParams.put("InsuredCertificadeName","");
	  queryPayForParams.put("IdentifyNumber","441425197312281133");
	  queryPayForParams.put("InsuredAccount","");
	  queryPayForParams.put("InsuredPostCode","");
	  queryPayForParams.put("CarOwnerVehiclePriceQuery","");
	  queryPayForParams.put("SameToInsured","on");
	  queryPayForParams.put("SameToInsuredInput","%CD%AC%B1%BB%B1%A3%CF%D5%C8%CB");
	  queryPayForParams.put("CarInsuredRelation","1");
	  queryPayForParams.put("CarOwner","%D0%BB%C0%FB%D6%D0");
	  queryPayForParams.put("IsHisPolicyBJV295","");
	  queryPayForParams.put("IsHisPolicy","");
	  queryPayForParams.put("VehicleOwnerNature","7");
	  queryPayForParams.put("CarOwnerInfo_Flag","");
	  queryPayForParams.put("CredentialCode","01");
	  queryPayForParams.put("CredentialNo","441425197312281133");
	  queryPayForParams.put("CarOwnerPhoneNo","13652402418");
	  queryPayForParams.put("MailingAddress","");
	  queryPayForParams.put("CarOwnerCountryCode","");
	  queryPayForParams.put("VehicleOwnerNatureOld","");
	  queryPayForParams.put("BIInsureSZ104_value","true");
	  queryPayForParams.put("BIInsureSZ104_isHistory","");
	  queryPayForParams.put("EndorseItemCar","");
	  queryPayForParams.put("OtherNature7","1");
	  queryPayForParams.put("OtherNature8","0");
	  queryPayForParams.put("LicenseNo","%D4%C1SS6W79");
	  queryPayForParams.put("CountryNature","A");
	  queryPayForParams.put("LicenseColorCode","");
	  queryPayForParams.put("LicenseColorName","");
	  queryPayForParams.put("LicenseKindCode","02");
	  queryPayForParams.put("LicenseKindName","%D0%A1%D0%CD%C6%FB%B3%B5%BA%C5%C5%C6");
	  queryPayForParams.put("TonCount","");
	  queryPayForParams.put("CarKindCode","A0");
	  queryPayForParams.put("CarKindName","%BF%CD%B3%B5");
	  queryPayForParams.put("ExhaustScale","2.995");
	  queryPayForParams.put("UseNatureCode","8A");
	  queryPayForParams.put("UseNatureName","%BC%D2%CD%A5%D7%D4%D3%C3");
	  queryPayForParams.put("SeatCount","5");
	  queryPayForParams.put("VehicleStyle","K33");
	  queryPayForParams.put("VehicleStyleName","%BD%CE%B3%B5");
	  queryPayForParams.put("WholeWeight","");
	  queryPayForParams.put("BrandName","%B0%C2%B5%CFAUDI+Q7+35TFSI+QUATTRO%D4%BD%D2%B0%B3%B5");
	  queryPayForParams.put("Series_Id","ADA0AI");
	  queryPayForParams.put("ModelName","");
	  queryPayForParams.put("ModelCode","ADAAII0035");
	  queryPayForParams.put("RegistModelCode","");
	  queryPayForParams.put("carPriceType","0");
	  queryPayForParams.put("PurchasePrice1","741000");
	  queryPayForParams.put("PurchasePrice","741000");
	  queryPayForParams.put("CarActualValueTrue","741000.00");
	  queryPayForParams.put("ReferenceValue","741000.00");
	  queryPayForParams.put("CarActualValueNew","0.00");
	  queryPayForParams.put("PurchasePrice_BJ","");
	  queryPayForParams.put("Car_Flag","");
	  queryPayForParams.put("PurchasePriceMaxRate","0");
	  queryPayForParams.put("PurchasePriceMinRate","0");
	  queryPayForParams.put("FairMarketValueMaxRate","30");
	  queryPayForParams.put("FairMarketValueMinRate","40");
	  queryPayForParams.put("CarActualValue","741000.00");
	  queryPayForParams.put("FrameNo","WAUAGD4M3GD023194");
	  queryPayForParams.put("VINNo","WAUAGD4M3GD023194");
	  queryPayForParams.put("EngineNo","CRE061709");
	  queryPayForParams.put("VehicleBrand","%B0%C2%B5%CF");
	  queryPayForParams.put("EnrollDate","2017-01-01");
	  queryPayForParams.put("VehicleStyleDesc","");
	  queryPayForParams.put("RunMiles","");
	  queryPayForParams.put("VehicleCode","BADBQRUC0010");
	  queryPayForParams.put("CarModelID","%B0%C2%B5%CFAUDI+Q7+35TFSI+QUATTRO%D4%BD%D2%B0%B3%B5");
	  queryPayForParams.put("FCVEHICLE","AUDI+Q7+35TFSI+QUATTRO");
	  queryPayForParams.put("platModelCode","BADBQRUA0001");
	  queryPayForParams.put("platModelName","%B0%C2%B5%CFAUDI+Q7+35TFSI+QUATTRO+%BD%F8%C8%A1%D0%CD");
	  queryPayForParams.put("platStandardName","");
	  queryPayForParams.put("FUELCODE","");
	  queryPayForParams.put("isciInsureCarMarkFlag","");
	  queryPayForParams.put("VehicleCodeFlag","1");
	  queryPayForParams.put("newClassCode","DY04");
	  queryPayForParams.put("newClassName","%D6%D0%B4%F3%D0%CDSUV");
	  queryPayForParams.put("riskOtherFlag","");
	  queryPayForParams.put("riskOtherName","");
	  queryPayForParams.put("IsUpdatProfitFlags","");
	  queryPayForParams.put("CertifyDate","");
	  queryPayForParams.put("XmlContentCarModelQuery","");
	  queryPayForParams.put("VEHICLEQUERYNO","");
	  queryPayForParams.put("serialNo","");
	  queryPayForParams.put("FuelType","0");
	  queryPayForParams.put("FuelTypeName","%C8%BC%D3%CD");
	  queryPayForParams.put("PoliceFindDate","");
	  queryPayForParams.put("UseYears","0");
	  queryPayForParams.put("isUpdatProfitFlag","0");
	  queryPayForParams.put("IsFullEndor","0");
	  queryPayForParams.put("ColorCode","");
	  queryPayForParams.put("ColorName","");
	  queryPayForParams.put("AddonCount","");
	  queryPayForParams.put("AddonCountName","");
	  queryPayForParams.put("AddonCount_EBao","");
	  queryPayForParams.put("DamagedFactorGrade","31");
	  queryPayForParams.put("DamagedFactorGradeName","%D0%C2%B1%A3%BB%F2%C9%CF%C4%EA%C5%E2%BF%EE%B4%CE%CA%FD%D4%DA1%B4%CE%D2%D4%CF%C2");
	  queryPayForParams.put("DamagedFactorGradeOld","");
	  queryPayForParams.put("DamagedFactorGrade_EBao","31");
	  queryPayForParams.put("RunAreaCode","04");
	  queryPayForParams.put("RunAreaName","%D6%D0%BB%AA%C8%CB%C3%F1%B9%B2%BA%CD%B9%FA%BE%B3%C4%DA%28%B2%BB%BA%AC%B8%DB%A1%A2%B0%C4%A1%A2%CC%A8%B5%D8%C7%F8%29");
	  queryPayForParams.put("specialCarFlag","0");
	  queryPayForParams.put("QueryAreaCode","");
	  queryPayForParams.put("QueryAreaName","");
	  queryPayForParams.put("RestricFlag","0");
	  queryPayForParams.put("RestricType","");
	  queryPayForParams.put("OtherNature2","0");
	  queryPayForParams.put("OtherNature2_EBao","");
	  queryPayForParams.put("NewTypeLicenseFlag","0");
	  queryPayForParams.put("SecondHandCarFlag","1");
	  queryPayForParams.put("SecondHandCarPrice","");
	  queryPayForParams.put("ChgOwnerFlag","1");
	  queryPayForParams.put("LoanVehicleFlag","0");
	  queryPayForParams.put("PmQueryNo","");
	  queryPayForParams.put("VehicleCode_SZ","");
	  queryPayForParams.put("VehicleName_SZ","");
	  queryPayForParams.put("TransferDate","2017-01-01");
	  queryPayForParams.put("RunAreaDesc","");
	  queryPayForParams.put("FlType","FT1");
	  queryPayForParams.put("FloatingType","FT1");
	  queryPayForParams.put("NoDamageYears","0");
	  queryPayForParams.put("SafeDevice","");
	  queryPayForParams.put("SafeDeviceName","");
	  queryPayForParams.put("NoClaimFavorType","");
	  queryPayForParams.put("NoClaimFavorName","");
	  queryPayForParams.put("ParkingSite","");
	  queryPayForParams.put("ParkingSiteName","");
	  queryPayForParams.put("CarGoodsType","");
	  queryPayForParams.put("CarGoodsName","");
	  queryPayForParams.put("OtherNature5","");
	  queryPayForParams.put("FixFactoryName","");
	  queryPayForParams.put("LightViolated","");
	  queryPayForParams.put("SeriousViolated","");
	  queryPayForParams.put("CarUsage","");
	  queryPayForParams.put("CarUsageName","");
	  queryPayForParams.put("OtherNature3","0");
	  queryPayForParams.put("RateCode","20");
	  queryPayForParams.put("MJCaculateFlag","1");
	  queryPayForParams.put("SearchSequenceNo","");
	  queryPayForParams.put("VehicleSerialNo","0");
	  queryPayForParams.put("LocalPurchasePrice","741000.00");
	  queryPayForParams.put("GxTractorOnlineDate","2011-09-15%3E");
	  queryPayForParams.put("GxPolicyInputDate","");
	  queryPayForParams.put("OldOrNewCar_temp","1");
	  queryPayForParams.put("licenseno_temp","%D4%C1SS6W79");
	  queryPayForParams.put("licenseKindCode_temp","02");
	  queryPayForParams.put("LocalModelCode","ADAAII0035");
	  queryPayForParams.put("PlatSeatCount","");
	  queryPayForParams.put("RenewalLicenseNo","");
	  queryPayForParams.put("RenewalLicenseKindCode","");
	  queryPayForParams.put("RenewalFrameNo","");
	  queryPayForParams.put("RenewalEngineNo","");
	  queryPayForParams.put("InsLogoVisaCode","");
	  queryPayForParams.put("InsLogoVisaSerialNo","");
	  queryPayForParams.put("MotorTypeCode","");
	  queryPayForParams.put("pmMotorUsageTypeCode","");
	  queryPayForParams.put("feigaiFlag","");
	  queryPayForParams.put("checkComFlag","true");
	  queryPayForParams.put("checkValid","0");
	  queryPayForParams.put("LastModelCode","");
	  queryPayForParams.put("LastModel","");
	  queryPayForParams.put("LastReplacementValue","");
	  queryPayForParams.put("IsCheckCarInfo0507","false");
	  queryPayForParams.put("Beneficiary","");
	  queryPayForParams.put("CarDeviceDeviceName","");
	  queryPayForParams.put("CarDevice_Flag","");
	  queryPayForParams.put("CarDeviceSerialNo","");
	  queryPayForParams.put("CarDeviceQuantity","");
	  queryPayForParams.put("CarDevicePurchasePrice","");
	  queryPayForParams.put("CarDeviceBuyDate","");
	  queryPayForParams.put("CarDeviceActualValue","");
	  queryPayForParams.put("CarDeviceQuantityCount","");
	  queryPayForParams.put("CarDevicePurchasePriceCount","");
	  queryPayForParams.put("CarDeviceActualValueCount","");
	  queryPayForParams.put("isHisPolicyFlag","");
	  queryPayForParams.put("isBIInsured","true");
	  queryPayForParams.put("CarDriver_Flag","");
	  queryPayForParams.put("CarDriverDriverTypeName","");
	  queryPayForParams.put("CarDriverDriverName","");
	  queryPayForParams.put("CarDriverDrivingLicenseNo","");
	  queryPayForParams.put("CarDriverSex","");
	  queryPayForParams.put("CarDriverSexCname","");
	  queryPayForParams.put("CarDriverAge","");
	  queryPayForParams.put("CarDriverMarriage","1");
	  queryPayForParams.put("AppliYear","1");
	  queryPayForParams.put("DrivingLicenseType","A1");
	  queryPayForParams.put("DrivingYears","");
	  queryPayForParams.put("CarDriverAcceptLicenseDate","");
	  queryPayForParams.put("LicenseStatus","1");
	  queryPayForParams.put("CarDriver_Flag","");
	  queryPayForParams.put("CarDriverDriverTypeName","%D6%F7%BC%DD%CA%BB%D4%B1");
	  queryPayForParams.put("CarDriverDriverName","");
	  queryPayForParams.put("CarDriverDrivingLicenseNo","");
	  queryPayForParams.put("CarDriverSex","1");
	  queryPayForParams.put("CarDriverSexCname","%C4%D0");
	  queryPayForParams.put("CarDriverAge","");
	  queryPayForParams.put("CarDriverMarriage","1");
	  queryPayForParams.put("AppliYear","1");
	  queryPayForParams.put("DrivingLicenseType","A1");
	  queryPayForParams.put("DrivingYears","");
	  queryPayForParams.put("CarDriverAcceptLicenseDate","");
	  queryPayForParams.put("LicenseStatus","1");
	  queryPayForParams.put("CarDriver_Flag","");
	  queryPayForParams.put("CarDriverDriverTypeName","%B4%D3%BC%DD%CA%BB%D4%B11");
	  queryPayForParams.put("CarDriverDriverName","");
	  queryPayForParams.put("CarDriverDrivingLicenseNo","");
	  queryPayForParams.put("CarDriverSex","1");
	  queryPayForParams.put("CarDriverSexCname","%C4%D0");
	  queryPayForParams.put("CarDriverAge","");
	  queryPayForParams.put("CarDriverMarriage","1");
	  queryPayForParams.put("AppliYear","1");
	  queryPayForParams.put("DrivingLicenseType","A1");
	  queryPayForParams.put("DrivingYears","");
	  queryPayForParams.put("CarDriverAcceptLicenseDate","");
	  queryPayForParams.put("LicenseStatus","1");
	  queryPayForParams.put("CarDriver_Flag","");
	  queryPayForParams.put("CarDriverDriverTypeName","%B4%D3%BC%DD%CA%BB%D4%B12");
	  queryPayForParams.put("CarDriverDriverName","");
	  queryPayForParams.put("CarDriverDrivingLicenseNo","");
	  queryPayForParams.put("CarDriverSex","1");
	  queryPayForParams.put("CarDriverSexCname","%C4%D0");
	  queryPayForParams.put("CarDriverAge","");
	  queryPayForParams.put("CarDriverMarriage","1");
	  queryPayForParams.put("AppliYear","1");
	  queryPayForParams.put("DrivingLicenseType","A1");
	  queryPayForParams.put("DrivingYears","");
	  queryPayForParams.put("CarDriverAcceptLicenseDate","");
	  queryPayForParams.put("LicenseStatus","1");
	  queryPayForParams.put("tableOtherNature_Flag","");
	  queryPayForParams.put("OtherNature1","1");
	  queryPayForParams.put("OtherNature1","0");
	  queryPayForParams.put("OtherNature6","1");
	  queryPayForParams.put("OtherNature6","0");
	  queryPayForParams.put("UserComCode","44031573");
	  queryPayForParams.put("BooleanEffectiveImmediatelyFlag","true");
	  queryPayForParams.put("EffectiveImmediatelyFlag","N");
	  queryPayForParams.put("BIEffectiveImmediatelyFlag","N");
	  queryPayForParams.put("RENEWAL_CIFLag","");
	  queryPayForParams.put("CIStartDate","2017-01-11");
	  queryPayForParams.put("CIEndDate","2018-01-10");
	  queryPayForParams.put("NewStartDate","2017-01-10+14%3A00");
	  queryPayForParams.put("NewEndDate","2018-01-10+14%3A00");
	  queryPayForParams.put("StartDate","2017-01-11");
	  queryPayForParams.put("EndDate","2018-01-10");
	  queryPayForParams.put("Period_Flag","");
	  queryPayForParams.put("CBackFlag","36%2C52%2C45%2C");
	  queryPayForParams.put("CIDaoQianDanFlag","false");
	  queryPayForParams.put("BIDaoQianDanFlag","false");
	  queryPayForParams.put("BINewStartDate","2017-01-10+14%3A00");
	  queryPayForParams.put("BINewEndDate","2018-01-10");
	  queryPayForParams.put("XuBaoCIStartDate","");
	  queryPayForParams.put("XuBaoCIDate","");
	  queryPayForParams.put("XuBaoBIStartDate","");
	  queryPayForParams.put("XuBaoBIDate","");
	  queryPayForParams.put("tdXuBaoCIStartDate","");
	  queryPayForParams.put("tdXuBaoBIStartDate","");
	  queryPayForParams.put("tdXuBaoCIDate","");
	  queryPayForParams.put("tdXuBaoBIDate","");
	  queryPayForParams.put("tdNewXuBaoCIStartDate","");
	  queryPayForParams.put("tdNewXuBaoBIStartDate","");
	  queryPayForParams.put("tdNewXuBaoCIDate","");
	  queryPayForParams.put("tdNewXuBaoBIDate","");
	  queryPayForParams.put("OperateDate","2017-01-10");
	  queryPayForParams.put("intCount","3");
	  queryPayForParams.put("Today","2017-01-10");
	  queryPayForParams.put("DemendNoNew","");
	  queryPayForParams.put("M1ValueCheck","5");
	  queryPayForParams.put("DemendNoNewFlag","");
	  queryPayForParams.put("SumPremiumNew","");
	  queryPayForParams.put("SumPremiumNewFlag","");
	  queryPayForParams.put("WithdrawItemKindNo","");
	  queryPayForParams.put("GlassTypeModel","1_FIELD_SEPARATOR_%B9%FA%B2%FA%B2%A3%C1%A7_GROUP_SEPARATOR_2_FIELD_SEPARATOR_%BD%F8%BF%DA%B2%A3%C1%A7");
	  queryPayForParams.put("RadiusTypeModel","1_FIELD_SEPARATOR_%B0%EB%BE%B6%CE%AA200%B9%AB%C0%EF_GROUP_SEPARATOR_2_FIELD_SEPARATOR_%B0%EB%BE%B6%CE%AA500%B9%AB%C0%EF_GROUP_SEPARATOR_3_FIELD_SEPARATOR_%B0%EB%BE%B6%CE%AA1000%B9%AB%C0%EF");
	  queryPayForParams.put("DeductibleSWITCH","");
	  queryPayForParams.put("CarClauseChgDate","");
	  queryPayForParams.put("ComCodeForCal","44031573");
	  queryPayForParams.put("RenewalFlagJZ","");
	  queryPayForParams.put("KindMSelectFlag","true");
	  queryPayForParams.put("KindMSelectFlag0510","0");
	  queryPayForParams.put("KindMSelectOnLineDate","true");
	  queryPayForParams.put("BillDate","2017-01-10");
	  queryPayForParams.put("GTFlag","");
	  queryPayForParams.put("ShortRateFlag","2");
	  queryPayForParams.put("tableShortRate_Flag","");
	  queryPayForParams.put("Currency","CNY");
	  queryPayForParams.put("CurrencyName","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ShortRate","100.0000");
	  queryPayForParams.put("vehiclePriceType","1");
	  queryPayForParams.put("VehicleActualValue","741000.00");
	  queryPayForParams.put("FairMarketValue","");
	  queryPayForParams.put("SelectClauseType_Flag","");
	  queryPayForParams.put("OldClauseType","0511M0000001");
	  queryPayForParams.put("ClauseType","0511M0000001");
	  queryPayForParams.put("PurchasePriceScal","25");
	  queryPayForParams.put("LastDamagedA","");
	  queryPayForParams.put("LastDamagedB","");
	  queryPayForParams.put("ThisDamagedA","");
	  queryPayForParams.put("ThisDamagedB","");
	  queryPayForParams.put("tableDiscountSZ_Flag","");
	  queryPayForParams.put("VehicleModelAdjust","");
	  queryPayForParams.put("VehicleModelAdjustLower","");
	  queryPayForParams.put("VehicleModelAdjustUpper","");
	  queryPayForParams.put("ManagementAdjust","");
	  queryPayForParams.put("ManagementAdjustLower","");
	  queryPayForParams.put("ManagementAdjustUpper","");
	  queryPayForParams.put("ExperienceAdjust","");
	  queryPayForParams.put("ExperienceAdjustLower","");
	  queryPayForParams.put("ExperienceAdjustUpper","");
	  queryPayForParams.put("checkboxChooseFlag","7");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N20");
	  queryPayForParams.put("ProfitRate","0.8800");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","7");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E7%5E303%5E%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5-%BC%DD%CA%BB%C8%CB%A3%A9%5EN20%5E%C8%CB%B9%A4%C7%FE%B5%C0%CF%B5%CA%FD%5E1%5E%5E%5E0.8800%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","");
	  queryPayForParams.put("KindName","");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","0");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","1");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("KindCodeCheckBox","1");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","1");
	  queryPayForParams.put("MS_Flag","M");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","1");
	  queryPayForParams.put("ProfitDetailFlag","1");
	  queryPayForParams.put("KindCode","001");
	  queryPayForParams.put("KindName","%BB%FA%B6%AF%B3%B5%CB%F0%CA%A7%B1%A3%CF%D5");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","Y");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","");
	  queryPayForParams.put("ItemKindFlag5Flag","1");
	  queryPayForParams.put("KindPremiumM","0.00");
	  queryPayForParams.put("kindBenchmarkPremiumm","0.0");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","0.0");
	  queryPayForParams.put("PureRiskPremium1","4488.549412");
	  queryPayForParams.put("PureRiskBenchMarkPremium","4488.549412");
	  queryPayForParams.put("ItemKindFlag5","on");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","741000.00");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","0.00000");
	  queryPayForParams.put("BenchMarkPremium","11576.67");
	  queryPayForParams.put("BasePremium","7524.84");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","7524.838100");
	  queryPayForParams.put("Discount","0.9500");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("checkboxChooseFlag","1");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","C22");
	  queryPayForParams.put("ProfitRate","1");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","1");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E1%5E001%5E%BB%FA%B6%AF%B3%B5%CB%F0%CA%A7%B1%A3%CF%D5%5EC22%5E%CE%DE%C5%E2%BF%EE%D3%C5%B4%FD%5E1%5E%5E%5E1%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","1");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N21");
	  queryPayForParams.put("ProfitRate","1.0795");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","1");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E1%5E001%5E%BB%FA%B6%AF%B3%B5%CB%F0%CA%A7%B1%A3%CF%D5%5EN21%5E%C8%CB%B9%A4%D7%D4%BA%CB%CF%B5%CA%FD%5E1%5E%5E%5E1.0795%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","1");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N20");
	  queryPayForParams.put("ProfitRate","0.8800");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","1");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E1%5E001%5E%BB%FA%B6%AF%B3%B5%CB%F0%CA%A7%B1%A3%CF%D5%5EN20%5E%C8%CB%B9%A4%C7%FE%B5%C0%CF%B5%CA%FD%5E1%5E%5E%5E0.8800%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("AdjustRate","1");
	  queryPayForParams.put("Premium","10997.84");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("KindCodeCheckBox","1");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","2");
	  queryPayForParams.put("MS_Flag","M");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","1");
	  queryPayForParams.put("ProfitDetailFlag","1");
	  queryPayForParams.put("KindCode","002");
	  queryPayForParams.put("KindName","%B5%DA%C8%FD%D5%DF%D4%F0%C8%CE%B1%A3%CF%D5");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","Y");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","");
	  queryPayForParams.put("ItemKindFlag5Flag","1");
	  queryPayForParams.put("KindPremiumM","0.00");
	  queryPayForParams.put("kindBenchmarkPremiumm","0.0");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","356.406688");
	  queryPayForParams.put("PureRiskBenchMarkPremium","356.406688");
	  queryPayForParams.put("ItemKindFlag5","on");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","50000");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","0.00000");
	  queryPayForParams.put("BenchMarkPremium","765.00");
	  queryPayForParams.put("BasePremium","497.25");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","497.250000");
	  queryPayForParams.put("Discount","0.9500");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("checkboxChooseFlag","2");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","C22");
	  queryPayForParams.put("ProfitRate","1");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","2");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E2%5E002%5E%B5%DA%C8%FD%D5%DF%D4%F0%C8%CE%B1%A3%CF%D5%5EC22%5E%CE%DE%C5%E2%BF%EE%D3%C5%B4%FD%5E1%5E%5E%5E1%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","2");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N21");
	  queryPayForParams.put("ProfitRate","1.0795");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","2");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E2%5E002%5E%B5%DA%C8%FD%D5%DF%D4%F0%C8%CE%B1%A3%CF%D5%5EN21%5E%C8%CB%B9%A4%D7%D4%BA%CB%CF%B5%CA%FD%5E1%5E%5E%5E1.0795%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","2");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N20");
	  queryPayForParams.put("ProfitRate","0.8800");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","2");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E2%5E002%5E%B5%DA%C8%FD%D5%DF%D4%F0%C8%CE%B1%A3%CF%D5%5EN20%5E%C8%CB%B9%A4%C7%FE%B5%C0%CF%B5%CA%FD%5E1%5E%5E%5E0.8800%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("AdjustRate","1");
	  queryPayForParams.put("Premium","726.75");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("KindCodeCheckBox","1");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","3");
	  queryPayForParams.put("MS_Flag","M");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","1");
	  queryPayForParams.put("ProfitDetailFlag","1");
	  queryPayForParams.put("KindCode","003");
	  queryPayForParams.put("KindName","%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5%28%BC%DD%CA%BB%C8%CB%29");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","Y");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","");
	  queryPayForParams.put("ItemKindFlag5Flag","1");
	  queryPayForParams.put("KindPremiumM","0.00");
	  queryPayForParams.put("kindBenchmarkPremiumm","0.0");
	  queryPayForParams.put("Deductible","0");
	  queryPayForParams.put("DeductibleRate","0");
	  queryPayForParams.put("PureRiskPremium1","1.011671");
	  queryPayForParams.put("PureRiskBenchMarkPremium","1.011671");
	  queryPayForParams.put("ItemKindFlag5","on");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","10000");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","0.13650");
	  queryPayForParams.put("BenchMarkPremium","21.00");
	  queryPayForParams.put("BasePremium","0.00");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","13.650000");
	  queryPayForParams.put("Discount","0.9500");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("checkboxChooseFlag","3");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","C22");
	  queryPayForParams.put("ProfitRate","1");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","3");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E3%5E003%5E%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5%28%BC%DD%CA%BB%C8%CB%29%5EC22%5E%CE%DE%C5%E2%BF%EE%D3%C5%B4%FD%5E1%5E%5E%5E1%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","3");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N21");
	  queryPayForParams.put("ProfitRate","1.0795");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","3");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E3%5E003%5E%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5%28%BC%DD%CA%BB%C8%CB%29%5EN21%5E%C8%CB%B9%A4%D7%D4%BA%CB%CF%B5%CA%FD%5E1%5E%5E%5E1.0795%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","3");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N20");
	  queryPayForParams.put("ProfitRate","0.8800");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","3");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E3%5E003%5E%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5%28%BC%DD%CA%BB%C8%CB%29%5EN20%5E%C8%CB%B9%A4%C7%FE%B5%C0%CF%B5%CA%FD%5E1%5E%5E%5E0.8800%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("AdjustRate","1");
	  queryPayForParams.put("Premium","19.95");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","M");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","006");
	  queryPayForParams.put("KindName","%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5%28%B3%CB%BF%CD%29");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","10000");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","4");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","Y");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","");
	  queryPayForParams.put("ItemKindFlag5Flag","0");
	  queryPayForParams.put("KindPremiumM","0.00");
	  queryPayForParams.put("kindBenchmarkPremiumm","0.0");
	  queryPayForParams.put("Deductible","0");
	  queryPayForParams.put("DeductibleRate","0");
	  queryPayForParams.put("PureRiskPremium1","1.822671");
	  queryPayForParams.put("PureRiskBenchMarkPremium","1.822671");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","40000");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0.00");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","26.000000");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","1");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","M");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","1");
	  queryPayForParams.put("KindCode","007");
	  queryPayForParams.put("KindName","%C8%AB%B3%B5%B5%C1%C7%C0%B1%A3%CF%D5");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","Y");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("OpeanFlag","");
	  queryPayForParams.put("PSeqNum","3");
	  queryPayForParams.put("AdjustProfitCode_ProfitName","N20%2C%C8%CB%B9%A4%C7%FE%B5%C0%CF%B5%CA%FD");
	  queryPayForParams.put("UpperProfitRate","0.0088");
	  queryPayForParams.put("LowerProfitRate","0.0088");
	  queryPayForParams.put("AdjustProfitRate","0.0088");
	  queryPayForParams.put("PSeqNum","1");
	  queryPayForParams.put("AdjustProfitCode_ProfitName","C22%2C%CE%DE%C5%E2%BF%EE%D3%C5%B4%FD");
	  queryPayForParams.put("UpperProfitRate","0.01");
	  queryPayForParams.put("LowerProfitRate","0.01");
	  queryPayForParams.put("AdjustProfitRate","0.01");
	  queryPayForParams.put("PSeqNum","2");
	  queryPayForParams.put("AdjustProfitCode_ProfitName","N21%2C%C8%CB%B9%A4%D7%D4%BA%CB%CF%B5%CA%FD");
	  queryPayForParams.put("UpperProfitRate","0.0108");
	  queryPayForParams.put("LowerProfitRate","0.0108");
	  queryPayForParams.put("AdjustProfitRate","0.0108");
	  queryPayForParams.put("PSeqNum","3");
	  queryPayForParams.put("AdjustProfitCode_ProfitName","N20%2C%C8%CB%B9%A4%C7%FE%B5%C0%CF%B5%CA%FD");
	  queryPayForParams.put("UpperProfitRate","0.0088");
	  queryPayForParams.put("LowerProfitRate","0.0088");
	  queryPayForParams.put("AdjustProfitRate","0.0088");
	  queryPayForParams.put("artificialAdjustRatio","1.0000");
	  queryPayForParams.put("Fg_RatioId","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_DemandNo","V0101GPIC440317001484026746716");
	  queryPayForParams.put("Fg_CertiType","T");
	  queryPayForParams.put("Fg_CertiNo","");
	  queryPayForParams.put("Fg_CiCacheItemCarId","97e5a05b-5894-4e90-8030-176a992769ef");
	  queryPayForParams.put("Fg_ClauseType","0511M0000001");
	  queryPayForParams.put("Fg_CombosCode","GP00000000");
	  queryPayForParams.put("Fg_ClaimAdjustValue","1");
	  queryPayForParams.put("Fg_PeccancyAdjustValue","1");
	  queryPayForParams.put("Fg_ActuarialAutonomyRatio","0.9555");
	  queryPayForParams.put("Fg_Motorcaderatio","0.0000");
	  queryPayForParams.put("Fg_UseRatio","2");
	  queryPayForParams.put("Fg_SinglePlateRatio","0.95");
	  queryPayForParams.put("Fg_SingleBusinessNatureRatio","0.95");
	  queryPayForParams.put("Fg_ActuarialChannelRatio","0.8800");
	  queryPayForParams.put("Fg_ActuarialRatio","0.8408");
	  queryPayForParams.put("Fg_ActuarialPremium","11987.34");
	  queryPayForParams.put("Fg_UnderwriteAdjustRatio","1.1298");
	  queryPayForParams.put("Fg_UnderwriteAutonomyRatio","1.0795");
	  queryPayForParams.put("Fg_UnderwriteChannelRatio","0.8800");
	  queryPayForParams.put("Fg_FinalRatioU","1.5625");
	  queryPayForParams.put("Fg_DefaultTotalRatio","0.9500");
	  queryPayForParams.put("Fg_FinalRatioD","0.5625");
	  queryPayForParams.put("Fg_DefaultPremium","13544.22");
	  queryPayForParams.put("Fg_ArtificialAutonomyRatio","1.0795");
	  queryPayForParams.put("Fg_ArtificialChannelRatio","0.8800");
	  queryPayForParams.put("Fg_SumPremium","13544.22");
	  queryPayForParams.put("Fg_Flag","0");
	  queryPayForParams.put("Fg_InsertTime","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_ArtificialUnderwriteRatio","1");
	  queryPayForParams.put("Fg_SendMotifyRatio","1");
	  queryPayForParams.put("ActuarialRatio","0.8408");
	  queryPayForParams.put("PureRiskPremium","7524.838100");
	  queryPayForParams.put("PureRiskPremiumFlag","1-%B1%EA%D7%BC%B3%B5%D0%CD%B1%A3%B7%D1");
	  queryPayForParams.put("Fg_BenechmarkPremium","13096.276787");
	  queryPayForParams.put("Fg_ExpensePremium","0.000000");
	  queryPayForParams.put("Fg_ProfitRatePremiun","0.000000");
	  queryPayForParams.put("Fg_ActuarialPrice","13096.276787");
	  queryPayForParams.put("Fg_SumBenechmarkPremium","14257.070000");
	  queryPayForParams.put("Fg_OverProfitRatePremium","");
	  queryPayForParams.put("Fg_DocumentaryPremium","");
	  queryPayForParams.put("Fg_ExpectProfitRatePremium","");
	  queryPayForParams.put("Fg_ActuarialRatio2","0.8408");
	  queryPayForParams.put("finalRatio","0.9500");
	  queryPayForParams.put("Fg_RatioId1","");
	  queryPayForParams.put("Fg_SerialNo","");
	  queryPayForParams.put("Fg_RatioTypeCode","");
	  queryPayForParams.put("Fg_FactorTypeCode","");
	  queryPayForParams.put("Fg_FactorValue","");
	  queryPayForParams.put("Fg_FactorValueDesc","");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","");
	  queryPayForParams.put("Fg_LastUpdateTime1","");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("FI_ResultId","89979642595a7b7e015986e5d2f50f26");
	  queryPayForParams.put("FI_DemandNo","V0101GPIC440317001484026746716");
	  queryPayForParams.put("FI_ProposalNo","");
	  queryPayForParams.put("FI_PolicyNo","");
	  queryPayForParams.put("FI_CertiType","T");
	  queryPayForParams.put("FI_SalesPoundageRatio","29.680000");
	  queryPayForParams.put("FI_IndividualPerformance","0.000000");
	  queryPayForParams.put("FI_IntermediaryIndustry","0.000000");
	  queryPayForParams.put("FI_TeamManagement","0.000000");
	  queryPayForParams.put("FI_ManagementAllowance","0.000000");
	  queryPayForParams.put("FI_RewardCoefficient","0.000000");
	  queryPayForParams.put("FI_FeeType","1");
	  queryPayForParams.put("FI_InsertTime","2017-01-10");
	  queryPayForParams.put("FI_Flag","");
	  queryPayForParams.put("FI_SalesPoundageRatioMax","0.000000");
	  queryPayForParams.put("FI_Field1","");
	  queryPayForParams.put("FI_Field2","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","1");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%B7%D6%B9%AB%CB%BE%D5%FB%CC%E5%CF%B5%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","0.88");
	  queryPayForParams.put("Fg_FactorValueDesc","%BA%CB%B1%A3%B5%F7%D5%FB_%C9%EE%DB%DA_%D5%FB%CC%E5%CF%B5%CA%FD%A3%BA0.88");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","2");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%B3%B5%D6%D6%CF%B5%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","2.12");
	  queryPayForParams.put("Fg_FactorValueDesc","%BA%CB%B1%A3%B5%F7%D5%FB_%C9%EE%DB%DA_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%CF%B5%CA%FD%A3%BA2.12");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","3");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%C7%FE%B5%C0%CF%B5%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","0.55");
	  queryPayForParams.put("Fg_FactorValueDesc","%BA%CB%B1%A3%B5%F7%D5%FB_%C9%EE%DB%DA_%D7%A8%D2%B5%B4%FA%C0%ED_%CF%B5%CA%FD%A3%BA0.55");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","4");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%C8%FD%D5%DF%CF%D5%CF%DE%B6%EE");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5%CF%DE%B6%EE_%B4%F3%D3%DA0%D0%A1%D3%DA%B5%C8%D3%DA50000_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","5");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%B1%BB%B1%A3%CF%D5%C8%CB%D3%EB%B3%B5%C1%BE%B5%C4%B9%D8%CF%B5");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B1%BB%B1%A3%CF%D5%C8%CB%D3%EB%B3%B5%C1%BE%B5%C4%B9%D8%CF%B5_%CB%F9%D3%D0_%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","6");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%C9%CF%C4%EA%B3%F6%CF%D5%B4%CE%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C6%E4%CB%FB_%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","7");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%D0%C2%B3%B5%B9%BA%D6%C3%BC%DB");
	  queryPayForParams.put("Fg_FactorValue","0.78");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%D0%C2%B3%B5%B9%BA%D6%C3%BC%DB_%B4%F3%D3%DA500000%D0%A1%D3%DA%B5%C8%D3%DA800000_%CF%B5%CA%FD%3A0.78");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","8");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%C9%CF%C4%EA%C5%E2%BF%EE%BD%F0%B6%EE");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C9%CF%C4%EA%C5%E2%BF%EE%BD%F0%B6%EE_%B5%C8%D3%DA0_%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","9");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","AB%C0%E0");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%BA%CB%B1%A3%B5%F7%D5%FB_%C9%EE%DB%DA_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5%CF%B5%CA%FD_%BD%F8%BF%DA%B9%FA%B2%FA%C0%E0_%BD%F8%BF%DA_%CF%B5%CA%FD%A3%BA1.0");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","10");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%C5%C5%C6%F8%C1%BF");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C5%C5%C6%F8%C1%BF_%B4%F3%D3%DA2.6%D0%A1%D3%DA%B5%C8%D3%DA3_%D2%F2%D7%D3%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","11");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%D7%F9%CE%BB%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%D7%F9%CE%BB%CA%FD_%B4%F3%D3%DA%B5%C8%D3%DA0%D0%A1%D3%DA%B5%C8%D3%DA5_%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","12");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%D0%C2%D0%F8%B1%A3%B1%EA%D6%BE");
	  queryPayForParams.put("Fg_FactorValue","1.5");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%D0%C2%D0%F8%D7%AA%B1%EA%D6%BE_%D0%C2%B1%A3_%CF%B5%CA%FD%A3%BA1.5");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","13");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%B3%B5%CF%B5");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CF%B5_%B7%D6%D7%E914_%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","14");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%B3%B5%C1%E4");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C1%E4_%D0%A1%D3%DA1_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","15");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%D0%D4%B1%F0");
	  queryPayForParams.put("Fg_FactorValue","0.91");
	  queryPayForParams.put("Fg_FactorValueDesc","%D5%E3%BD%AD_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%D0%D4%B1%F0_%C4%D0%D0%D4_%CF%B5%CA%FD%A3%BA0.91");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","16");
	  queryPayForParams.put("Fg_RatioTypeCode","03");
	  queryPayForParams.put("Fg_FactorTypeCode","%C4%EA%C1%E4");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%C9%EE%DB%DA_%BA%CB%B1%A3%B5%F7%D5%FB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C4%EA%C1%E4_%B4%F3%D3%DA40%D0%A1%D3%DA%B5%C8%D3%DA45_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","17");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B1%BB%B1%A3%CF%D5%C8%CB%D3%EB%B3%B5%C1%BE%B5%C4%B9%D8%CF%B5");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%B1%BB%B1%A3%CF%D5%C8%CB%D3%EB%B3%B5%C1%BE%B5%C4%B9%D8%CF%B5_%CB%F9%D3%D0_%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","18");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C9%CF%C4%EA%B3%F6%CF%D5%B4%CE%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%C9%CF%C4%EA%B3%F6%CF%D5%B4%CE%CA%FD_%C6%E4%CB%FB_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","19");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%D0%C2%B3%B5%B9%BA%D6%C3%BC%DB");
	  queryPayForParams.put("Fg_FactorValue","2.611261");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%D0%C2%B3%B5%B9%BA%D6%C3%BC%DB_%B4%F3%D3%DA500000%D0%A1%D3%DA%B5%C8%D3%DA800000_%CF%B5%CA%FD%3A2.611261");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","20");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B9%AB%CB%BE%BD%BB%CD%A8%CE%A5%B7%A8%CF%B5%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%B9%AB%CB%BE%BD%BB%CD%A8%CE%A5%B7%A8%CF%B5%CA%FD%A3%BA1.0");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","21");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C9%CF%C4%EA%C5%E2%BF%EE%BD%F0%B6%EE");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%C9%CF%C4%EA%C5%E2%BF%EE%BD%F0%B6%EE_%B5%C8%D3%DA0_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","22");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%BD%F8%BF%DA%B9%FA%B2%FA%C0%E0");
	  queryPayForParams.put("Fg_FactorValue","1.173394");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%BD%F8%BF%DA%B9%FA%B2%FA%C0%E0_%BD%F8%BF%DA_%CF%B5%CA%FD%A3%BA1.173394");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","23");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C4%EA%C1%E4%D0%D4%B1%F0");
	  queryPayForParams.put("Fg_FactorValue","0.939042");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%C4%EA%C1%E4%D0%D4%B1%F0_40-45%CB%EA%C4%D0%D0%D4_%CF%B5%CA%FD%A3%BA0.939042");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","24");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%D7%F9%CE%BB%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%D7%F9%CE%BB%CA%FD_%B4%F3%D3%DA%B5%C8%D3%DA0%D0%A1%D3%DA%B5%C8%D3%DA5_%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","25");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%D0%C2%D0%F8%B1%A3%B1%EA%D6%BE");
	  queryPayForParams.put("Fg_FactorValue","1.075408");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%D0%C2%D0%F8%D7%AA%B1%EA%D6%BE_%D0%C2%B1%A3_%CF%B5%CA%FD%A3%BA1.075408");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","26");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B3%B5%CF%B5");
	  queryPayForParams.put("Fg_FactorValue","0.873716");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%B3%B5%CF%B5_%B7%D6%D7%E914_%CF%B5%CA%FD%3A0.873716");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","27");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C5%C5%C6%F8%C1%BF");
	  queryPayForParams.put("Fg_FactorValue","1.059398");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%C5%C5%C6%F8%C1%BF_%B4%F3%D3%DA2.6_%CF%B5%CA%FD%A3%BA1.059398");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","28");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B3%B5%C1%E4");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%CB%F0%CF%D5_%B3%B5%C1%E4_%D0%A1%D3%DA1_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","29");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B1%BB%B1%A3%CF%D5%C8%CB%D3%EB%B3%B5%C1%BE%B5%C4%B9%D8%CF%B5");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%B1%BB%B1%A3%CF%D5%C8%CB%D3%EB%B3%B5%C1%BE%B5%C4%B9%D8%CF%B5_%CB%F9%D3%D0_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","30");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C9%CF%C4%EA%B3%F6%CF%D5%B4%CE%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%C9%CF%C4%EA%B3%F6%CF%D5%B4%CE%CA%FD_%C6%E4%CB%FB_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","31");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B9%AB%CB%BE%BD%BB%CD%A8%CE%A5%B7%A8%CF%B5%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%B9%AB%CB%BE%BD%BB%CD%A8%CE%A5%B7%A8%CF%B5%CA%FD%A3%BA1.0");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","32");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%BD%F8%BF%DA%B9%FA%B2%FA%C0%E0");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%BD%F8%BF%DA%B9%FA%B2%FA%C0%E0_%BD%F8%BF%DA%A1%A2%BA%CF%D7%CA_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","33");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B1%BB%B1%A3%C8%CB%D0%D4%B1%F0");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%B1%BB%B1%A3%C8%CB%D0%D4%B1%F0_%C4%D0_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","34");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B1%BB%B1%A3%CF%D5%C8%CB%C4%EA%C1%E4");
	  queryPayForParams.put("Fg_FactorValue","0.883716");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%B1%BB%B1%A3%C8%CB%C4%EA%C1%E4_%B4%F3%D3%DA40%D0%A1%D3%DA%B5%C8%D3%DA45_%CF%B5%CA%FD%A3%BA0.883716");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","35");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C8%FD%D5%DF%CF%D5%CF%DE%B6%EE");
	  queryPayForParams.put("Fg_FactorValue","0.44749");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%C8%FD%D5%DF%CF%D5%CF%DE%B6%EE_%B4%F3%D3%DA0%D0%A1%D3%DA%B5%C8%D3%DA50000_%CF%B5%CA%FD%A3%BA0.44749");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","36");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%D7%F9%CE%BB%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%D7%F9%CE%BB%CA%FD_%D0%A1%D3%DA6_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","37");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B3%B5%CF%B5");
	  queryPayForParams.put("Fg_FactorValue","1.332025");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%B3%B5%CF%B511_%CF%B5%CA%FD%A3%BA1.332025");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","38");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C5%C5%C6%F8%C1%BF");
	  queryPayForParams.put("Fg_FactorValue","1.201414");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%C5%C5%C6%F8%C1%BF_%B4%F3%D3%DA2.6%D0%A1%D3%DA%B5%C8%D3%DA3_%CF%B5%CA%FD%A3%BA1.201414");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","39");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B3%B5%C1%E4");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%C8%FD%D5%DF%CF%D5_%B3%B5%C1%E4_%D0%A1%D3%DA1_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","40");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%D4%F0%C8%CE%CF%D5%CF%DE%B6%EE");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%D4%F0%C8%CE%CF%D5%CF%DE%B6%EE_%B4%F3%D3%DA0%D0%A1%D3%DA%B5%C8%D3%DA10000_%CF%B5%CA%FD%A3%BA");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","41");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B1%BB%B1%A3%CF%D5%C8%CB%D3%EB%B3%B5%C1%BE%B5%C4%B9%D8%CF%B5");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%B1%BB%B1%A3%C8%CB%D3%EB%B3%B5%C1%BE%B5%C4%B9%D8%CF%B5_%CB%F9%D3%D0_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","42");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B1%BB%B1%A3%CF%D5%C8%CB%D3%EB%B3%B5%C1%BE%B5%C4%B9%D8%CF%B5");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%B1%BB%B1%A3%C8%CB%D3%EB%B3%B5%C1%BE%B5%C4%B9%D8%CF%B5_%CB%F9%D3%D0_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","43");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%D4%F0%C8%CE%CF%D5%CF%DE%B6%EE");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%D4%F0%C8%CE%CF%D5%CF%DE%B6%EE_%B4%F3%D3%DA0%D0%A1%D3%DA%B5%C8%D3%DA10000_%CF%B5%CA%FD%A3%BA");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","44");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B9%AB%CB%BE%BD%BB%CD%A8%CE%A5%B7%A8%CF%B5%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%B9%AB%CB%BE%BD%BB%CD%A8%CE%A5%B7%A8%CF%B5%CA%FD%A3%BA1.0");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","45");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B9%AB%CB%BE%BD%BB%CD%A8%CE%A5%B7%A8%CF%B5%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%B9%AB%CB%BE%BD%BB%CD%A8%CE%A5%B7%A8%CF%B5%CA%FD%A3%BA1.0");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","46");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C9%CF%C4%EA%B3%F6%CF%D5%B4%CE%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%C9%CF%C4%EA%B3%F6%CF%D5%B4%CE%CA%FD_%C6%E4%CB%FB_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","47");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C9%CF%C4%EA%B3%F6%CF%D5%B4%CE%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%C9%CF%C4%EA%B3%F6%CF%D5%B4%CE%CA%FD_%C6%E4%CB%FB_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","48");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%BD%F8%BF%DA%B9%FA%B2%FA%C0%E0");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%BD%F8%BF%DA%B9%FA%B2%FA%C0%E0_%BD%F8%BF%DA%A1%A2%BA%CF%D7%CA_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","49");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%BD%F8%BF%DA%B9%FA%B2%FA%C0%E0");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%BD%F8%BF%DA%B9%FA%B2%FA%C0%E0_%BD%F8%BF%DA%A1%A2%BA%CF%D7%CA_%CF%B5%CA%FD%A3%BA1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","50");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B1%BB%B1%A3%C8%CB%D0%D4%B1%F0");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%B1%BB%B1%A3%C8%CB%D0%D4%B1%F0_%C4%D0_%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","51");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%B1%BB%B1%A3%C8%CB%D0%D4%B1%F0");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%B1%BB%B1%A3%C8%CB%D0%D4%B1%F0_%C4%D0_%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","52");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%D0%C2%B3%B5%B9%BA%D6%C3%BC%DB");
	  queryPayForParams.put("Fg_FactorValue","0.759858");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%D0%C2%B3%B5%B9%BA%D6%C3%BC%DB_%B4%F3%D3%DA500000%D0%A1%D3%DA%B5%C8%D3%DA800000_%CF%B5%CA%FD%3A0.759858");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","53");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%D0%C2%B3%B5%B9%BA%D6%C3%BC%DB");
	  queryPayForParams.put("Fg_FactorValue","0.759858");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%D0%C2%B3%B5%B9%BA%D6%C3%BC%DB_%B4%F3%D3%DA500000%D0%A1%D3%DA%B5%C8%D3%DA800000_%CF%B5%CA%FD%3A0.759858");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","54");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C6%F8%C4%D2%B8%F6%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","0.784272");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%C6%F8%C4%D2%B8%F6%CA%FD_%B4%F3%D3%DA5_%CF%B5%CA%FD%3A0.784272");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","55");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%C6%F8%C4%D2%B8%F6%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","0.784272");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%C6%F8%C4%D2%B8%F6%CA%FD_%B4%F3%D3%DA5_%CF%B5%CA%FD%3A0.784272");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","56");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%D7%F9%CE%BB%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.801645");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%D7%F9%CE%BB%CA%FD%D3%EB%CF%D5%B1%F0_6%D7%F9%D2%D4%CF%C2%A1%A2%B3%CB%BF%CD_%CF%B5%CA%FD%3A1.801645");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Fg_RatioId1","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Fg_SerialNo","57");
	  queryPayForParams.put("Fg_RatioTypeCode","01");
	  queryPayForParams.put("Fg_FactorTypeCode","%D7%F9%CE%BB%CA%FD");
	  queryPayForParams.put("Fg_FactorValue","1.0");
	  queryPayForParams.put("Fg_FactorValueDesc","%D7%D4%BA%CB_%BC%D2%CD%A5%D7%D4%D3%C3%B3%B5_%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%CF%D5_%D7%F9%CE%BB%CA%FD%D3%EB%CF%D5%B1%F0_6%D7%F9%D2%D4%CF%C2%A1%A2%BC%DD%CA%BB%C8%CB_%CF%B5%CA%FD%3A1");
	  queryPayForParams.put("Fg_Flag1","");
	  queryPayForParams.put("Fg_InsertTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_LastUpdateTime1","2017-01-10+13%3A44%3A52");
	  queryPayForParams.put("Fg_kindCode","");
	  queryPayForParams.put("Result_ResultId","0");
	  queryPayForParams.put("Result_clauseType","0");
	  queryPayForParams.put("Result_combosCode","0");
	  queryPayForParams.put("Result_kindcode","0");
	  queryPayForParams.put("Result_basicPremium","0");
	  queryPayForParams.put("Result_factorRatio","0");
	  queryPayForParams.put("Result_expenseRate","0");
	  queryPayForParams.put("Result_profitRate","0");
	  queryPayForParams.put("Result_benechmarkPremium","0");
	  queryPayForParams.put("Result_premium","0");
	  queryPayForParams.put("Result_finalPremium","0");
	  queryPayForParams.put("Result_underwriteRatio","0");
	  queryPayForParams.put("Result_benechmarkRatio","0");
	  queryPayForParams.put("Result_localRatio","0");
	  queryPayForParams.put("Result_trendRaito","0");
	  queryPayForParams.put("Result_expensePremium","0");
	  queryPayForParams.put("Result_profitRatePremiun","0");
	  queryPayForParams.put("Result_predictiveLossRate","0");
	  queryPayForParams.put("Result_predictiveCostRate","0");
	  queryPayForParams.put("Result_claimExpenseRate","0");
	  queryPayForParams.put("Result_Itemkindno","0");
	  queryPayForParams.put("Result_ResultId","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Result_clauseType","0511M0000001");
	  queryPayForParams.put("Result_combosCode","GP00000000");
	  queryPayForParams.put("Result_kindcode","001");
	  queryPayForParams.put("Result_basicPremium","1549.328523");
	  queryPayForParams.put("Result_factorRatio","2.864058");
	  queryPayForParams.put("Result_expenseRate","0.486");
	  queryPayForParams.put("Result_profitRate","0.008241");
	  queryPayForParams.put("Result_benechmarkPremium","1567.199202");
	  queryPayForParams.put("Result_premium","10420.784213");
	  queryPayForParams.put("Result_finalPremium","10420.784213");
	  queryPayForParams.put("Result_underwriteRatio","1.0");
	  queryPayForParams.put("Result_benechmarkRatio","4488.549412");
	  queryPayForParams.put("Result_localRatio","1.260377");
	  queryPayForParams.put("Result_trendRaito","0.802565");
	  queryPayForParams.put("Result_expensePremium","");
	  queryPayForParams.put("Result_profitRatePremiun","");
	  queryPayForParams.put("Result_predictiveLossRate","");
	  queryPayForParams.put("Result_predictiveCostRate","");
	  queryPayForParams.put("Result_claimExpenseRate","0.0352");
	  queryPayForParams.put("Result_Itemkindno","1");
	  queryPayForParams.put("Result_ResultId","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Result_clauseType","0511M0000001");
	  queryPayForParams.put("Result_combosCode","GP00000000");
	  queryPayForParams.put("Result_kindcode","002");
	  queryPayForParams.put("Result_basicPremium","359.707756");
	  queryPayForParams.put("Result_factorRatio","0.632851");
	  queryPayForParams.put("Result_expenseRate","0.486");
	  queryPayForParams.put("Result_profitRate","0.008241");
	  queryPayForParams.put("Result_benechmarkPremium","563.176306");
	  queryPayForParams.put("Result_premium","827.4471");
	  queryPayForParams.put("Result_finalPremium","827.4471");
	  queryPayForParams.put("Result_underwriteRatio","1.0");
	  queryPayForParams.put("Result_benechmarkRatio","356.406688");
	  queryPayForParams.put("Result_localRatio","1.716738");
	  queryPayForParams.put("Result_trendRaito","0.911991");
	  queryPayForParams.put("Result_expensePremium","");
	  queryPayForParams.put("Result_profitRatePremiun","");
	  queryPayForParams.put("Result_predictiveLossRate","");
	  queryPayForParams.put("Result_predictiveCostRate","");
	  queryPayForParams.put("Result_claimExpenseRate","0.0352");
	  queryPayForParams.put("Result_Itemkindno","2");
	  queryPayForParams.put("Result_ResultId","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Result_clauseType","0511M0000001");
	  queryPayForParams.put("Result_combosCode","GP00000000");
	  queryPayForParams.put("Result_kindcode","006");
	  queryPayForParams.put("Result_basicPremium","1.78198");
	  queryPayForParams.put("Result_factorRatio","1.073663");
	  queryPayForParams.put("Result_expenseRate","0.486");
	  queryPayForParams.put("Result_profitRate","0.008241");
	  queryPayForParams.put("Result_benechmarkPremium","1.697619");
	  queryPayForParams.put("Result_premium","4.23158");
	  queryPayForParams.put("Result_finalPremium","4.23158");
	  queryPayForParams.put("Result_underwriteRatio","1.0");
	  queryPayForParams.put("Result_benechmarkRatio","1.822671");
	  queryPayForParams.put("Result_localRatio","0.945323");
	  queryPayForParams.put("Result_trendRaito","1.00776");
	  queryPayForParams.put("Result_expensePremium","");
	  queryPayForParams.put("Result_profitRatePremiun","");
	  queryPayForParams.put("Result_predictiveLossRate","");
	  queryPayForParams.put("Result_predictiveCostRate","");
	  queryPayForParams.put("Result_claimExpenseRate","0.0352");
	  queryPayForParams.put("Result_Itemkindno","3");
	  queryPayForParams.put("Result_ResultId","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Result_clauseType","0511M0000001");
	  queryPayForParams.put("Result_combosCode","GP00000000");
	  queryPayForParams.put("Result_kindcode","003");
	  queryPayForParams.put("Result_basicPremium","1.78198");
	  queryPayForParams.put("Result_factorRatio","0.595935");
	  queryPayForParams.put("Result_expenseRate","0.486");
	  queryPayForParams.put("Result_profitRate","0.008241");
	  queryPayForParams.put("Result_benechmarkPremium","1.697619");
	  queryPayForParams.put("Result_premium","2.348732");
	  queryPayForParams.put("Result_finalPremium","2.348732");
	  queryPayForParams.put("Result_underwriteRatio","1.0");
	  queryPayForParams.put("Result_benechmarkRatio","1.011671");
	  queryPayForParams.put("Result_localRatio","0.945323");
	  queryPayForParams.put("Result_trendRaito","1.00776");
	  queryPayForParams.put("Result_expensePremium","");
	  queryPayForParams.put("Result_profitRatePremiun","");
	  queryPayForParams.put("Result_predictiveLossRate","");
	  queryPayForParams.put("Result_predictiveCostRate","");
	  queryPayForParams.put("Result_claimExpenseRate","0.0352");
	  queryPayForParams.put("Result_Itemkindno","4");
	  queryPayForParams.put("Result_ResultId","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Result_clauseType","0511M0000001");
	  queryPayForParams.put("Result_combosCode","GP00000000");
	  queryPayForParams.put("Result_kindcode","301");
	  queryPayForParams.put("Result_basicPremium","0.0");
	  queryPayForParams.put("Result_factorRatio","1.0");
	  queryPayForParams.put("Result_expenseRate","0.486");
	  queryPayForParams.put("Result_profitRate","0.008241");
	  queryPayForParams.put("Result_benechmarkPremium","0.0");
	  queryPayForParams.put("Result_premium","1667.325474");
	  queryPayForParams.put("Result_finalPremium","1667.325474");
	  queryPayForParams.put("Result_underwriteRatio","1.0");
	  queryPayForParams.put("Result_benechmarkRatio","718.167906");
	  queryPayForParams.put("Result_localRatio","1.0");
	  queryPayForParams.put("Result_trendRaito","1.0");
	  queryPayForParams.put("Result_expensePremium","");
	  queryPayForParams.put("Result_profitRatePremiun","");
	  queryPayForParams.put("Result_predictiveLossRate","");
	  queryPayForParams.put("Result_predictiveCostRate","");
	  queryPayForParams.put("Result_claimExpenseRate","0.0352");
	  queryPayForParams.put("Result_Itemkindno","5");
	  queryPayForParams.put("Result_ResultId","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Result_clauseType","0511M0000001");
	  queryPayForParams.put("Result_combosCode","GP00000000");
	  queryPayForParams.put("Result_kindcode","302");
	  queryPayForParams.put("Result_basicPremium","0.0");
	  queryPayForParams.put("Result_factorRatio","1.0");
	  queryPayForParams.put("Result_expenseRate","0.486");
	  queryPayForParams.put("Result_profitRate","0.008241");
	  queryPayForParams.put("Result_benechmarkPremium","0.0");
	  queryPayForParams.put("Result_premium","173.763891");
	  queryPayForParams.put("Result_finalPremium","173.763891");
	  queryPayForParams.put("Result_underwriteRatio","1.0");
	  queryPayForParams.put("Result_benechmarkRatio","74.845404");
	  queryPayForParams.put("Result_localRatio","1.0");
	  queryPayForParams.put("Result_trendRaito","1.0");
	  queryPayForParams.put("Result_expensePremium","");
	  queryPayForParams.put("Result_profitRatePremiun","");
	  queryPayForParams.put("Result_predictiveLossRate","");
	  queryPayForParams.put("Result_predictiveCostRate","");
	  queryPayForParams.put("Result_claimExpenseRate","0.0352");
	  queryPayForParams.put("Result_Itemkindno","6");
	  queryPayForParams.put("Result_ResultId","899796455945c933015986e85cbd6fab");
	  queryPayForParams.put("Result_clauseType","0511M0000001");
	  queryPayForParams.put("Result_combosCode","GP00000000");
	  queryPayForParams.put("Result_kindcode","303");
	  queryPayForParams.put("Result_basicPremium","0.0");
	  queryPayForParams.put("Result_factorRatio","1.0");
	  queryPayForParams.put("Result_expenseRate","0.486");
	  queryPayForParams.put("Result_profitRate","0.008241");
	  queryPayForParams.put("Result_benechmarkPremium","0.0");
	  queryPayForParams.put("Result_premium","0.375797");
	  queryPayForParams.put("Result_finalPremium","0.375797");
	  queryPayForParams.put("Result_underwriteRatio","1.0");
	  queryPayForParams.put("Result_benechmarkRatio","0.161867");
	  queryPayForParams.put("Result_localRatio","1.0");
	  queryPayForParams.put("Result_trendRaito","1.0");
	  queryPayForParams.put("Result_expensePremium","");
	  queryPayForParams.put("Result_profitRatePremiun","");
	  queryPayForParams.put("Result_predictiveLossRate","");
	  queryPayForParams.put("Result_predictiveCostRate","");
	  queryPayForParams.put("Result_claimExpenseRate","0.0352");
	  queryPayForParams.put("Result_Itemkindno","7");
	  queryPayForParams.put("poundage_ConstantExpenseRatio","0.005336");
	  queryPayForParams.put("poundage_ConstantExpense","72.302373");
	  queryPayForParams.put("poundage_BusinessTaxRatio","0.06");
	  queryPayForParams.put("poundage_BusinessTax","812.9952");
	  queryPayForParams.put("poundage_NonSalesLaborRatio","0.012144");
	  queryPayForParams.put("poundage_NonSalesLabor","164.550228");
	  queryPayForParams.put("poundage_SalesLaborRatio","0.041456");
	  queryPayForParams.put("poundage_SalesLabor","561.725484");
	  queryPayForParams.put("poundage_BranchReserveFeeRatio","0.0");
	  queryPayForParams.put("poundage_BranchReserveFee","0.0");
	  queryPayForParams.put("poundage_VariableExpenseRatio","0.0679");
	  queryPayForParams.put("poundage_VariableExpense","920.039568");
	  queryPayForParams.put("poundage_SalesExpenseHigh","4261.01074");
	  queryPayForParams.put("poundage_PoundageRatio","29.68");
	  queryPayForParams.put("poundage_PoundageFee","4021.616256");
	  queryPayForParams.put("poundage_PoundageType","0");
	  queryPayForParams.put("poundage_RunPoundageFee","4021.616256");
	  queryPayForParams.put("poundage_RunPoundageRatio","29.68");
	  queryPayForParams.put("poundage_PaymentRatio","1.0");
	  queryPayForParams.put("poundage_PoundagePool","239.394484");
	  queryPayForParams.put("poundage_TotalCostRatio","0.269201");
	  queryPayForParams.put("poundage_TotalCost","3647.652014");
	  queryPayForParams.put("poundage_ProfitPremium","");
	  queryPayForParams.put("poundage_ClaimExpensePremium","");
	  queryPayForParams.put("poundage_BusinessExpenseRate","0.05251");
	  queryPayForParams.put("poundage_BusinessExpenseRatePremium","711.506299");
	  queryPayForParams.put("poundage_BusinessClaimRate","0.029855");
	  queryPayForParams.put("poundage_BusinessClaimRatePremium","404.532862");
	  queryPayForParams.put("poundage_BusinessGuideRate","31.45");
	  queryPayForParams.put("poundage_ResultId","89979642595a7b7e015986e5d2f50f25");
	  queryPayForParams.put("AmountCount","841000.00");
	  queryPayForParams.put("BenchMarkPremiumCount","14257.07");
	  queryPayForParams.put("PremiumDisCount","0.9500");
	  queryPayForParams.put("PremiumCount","13544.22");
	  queryPayForParams.put("DiscountPremiumCount","712.85");
	  queryPayForParams.put("SumPremium","");
	  queryPayForParams.put("SumPremiumOld","13544.22");
	  queryPayForParams.put("totalPureRiskPremium","5640.965619");
	  queryPayForParams.put("ArtificialUnderwritePremium","14257.07");
	  queryPayForParams.put("SendMotifyPremium","14257.07");
	  queryPayForParams.put("SendMotifyPremiumOld","");
	  queryPayForParams.put("ArtificialUnderwriteRatio","1");
	  queryPayForParams.put("SendMotifyRatio","1");
	  queryPayForParams.put("AdjustRateOfMain","1");
	  queryPayForParams.put("AdjustOfMain","0.00");
	  queryPayForParams.put("ProfitScale","1");
	  queryPayForParams.put("AdjustPremiumCount","");
	  queryPayForParams.put("checkboxChooseFlagAll","");
	  queryPayForParams.put("AdjustRateAll","");
	  queryPayForParams.put("DemendNo","V0101GPIC440317001484026746716");
	  queryPayForParams.put("DemendNoOld","");
	  queryPayForParams.put("XmlContentBIQuery","%3C%21%5BCDATA%5B%B7%A2%CB%CD%B1%A8%CE%C4%A3%BA%3C%3Fxml+version%3D%221.0%22+encoding%3D%22GBK%22%3F%3E%3CPACKET+type%3D%22REQUEST%22+version%3D%221.0%22+%3E%3CHEAD%3E%3CRequestType%3EV0101%3C%2FRequestType%3E%3CUser%3E******%3C%2FUser%3E%3CPassword%3E******%3C%2FPassword%3E%3C%2FHEAD%3E%3CBody%3E%3CCommissionAgent%3E%3CCertificateNo%3E203131000000800%3C%2FCertificateNo%3E%3CIndividualProducerCode%3E75047232-2%3C%2FIndividualProducerCode%3E%3C%2FCommissionAgent%3E%3CVehicle%3E%3CLicensePlateNo%3E%D4%C1SS6W79%3C%2FLicensePlateNo%3E%3CLicensePlateColorCode%3E%3C%2FLicensePlateColorCode%3E%3CLicensePlateType%3E02%3C%2FLicensePlateType%3E%3CMotorTypeCode%3E11%3C%2FMotorTypeCode%3E%3CMotorUsageTypeCode%3E210%3C%2FMotorUsageTypeCode%3E%3CFirstRegisterDate%3E20170101%3C%2FFirstRegisterDate%3E%3CVIN%3EWAUAGD4M3GD023194%3C%2FVIN%3E%3CEngineNo%3ECRE061709%3C%2FEngineNo%3E%3CVehicleType%3EK33%3C%2FVehicleType%3E%3CIneffectualDate%3E%3C%2FIneffectualDate%3E%3CRejectDate%3E%3C%2FRejectDate%3E%3CLastCheckDate%3E%3C%2FLastCheckDate%3E%3CTransferDate%3E20170101%3C%2FTransferDate%3E%3CWholeWeight%3E%3C%2FWholeWeight%3E%3CRatedPassengerCapacity%3E5%3C%2FRatedPassengerCapacity%3E%3CTonnage%3E0%3C%2FTonnage%3E%3CModelCode%3EBADBQRUA0001%3C%2FModelCode%3E%3CBasicRateCode%3E%3C%2FBasicRateCode%3E%3CNoticeType%3EAUDI+Q7+35TFSI+QUATTRO%3C%2FNoticeType%3E%3CCarName%3E%B0%C2%B5%CFAUDI+Q7+35TFSI+QUATTRO+%BD%F8%C8%A1%D0%CD%3C%2FCarName%3E%3CHaulage%3E%3C%2FHaulage%3E%3CNoLicenseFlag%3E0%3C%2FNoLicenseFlag%3E%3CChgOwnerFlag%3E1%3C%2FChgOwnerFlag%3E%3CEcdemicVehicleFlag%3E0%3C%2FEcdemicVehicleFlag%3E%3CLoanVehicleFlag%3E0%3C%2FLoanVehicleFlag%3E%3CFleetFlag%3E0%3C%2FFleetFlag%3E%3CFleetNo%3E%3C%2FFleetNo%3E%3CPmQueryNo%3E%3C%2FPmQueryNo%3E%3CDisplacement%3E2995%3C%2FDisplacement%3E%3CLfDate%3E%3C%2FLfDate%3E%3CReplacementValue%3E741000%3C%2FReplacementValue%3E%3C%2FVehicle%3E%3CApplication%3E%3CByBusinessAgent%3E%3C%2FByBusinessAgent%3E%3CSubordinateCode%3E4403159003%3C%2FSubordinateCode%3E%3CBillDate%3E20170110%3C%2FBillDate%3E%3CEffectiveDate%3E201701110000%3C%2FEffectiveDate%3E%3CExpireDate%3E201801110000%3C%2FExpireDate%3E%3CPeriodDesc%3E%3C%2FPeriodDesc%3E%3CClauseType%3E01%3C%2FClauseType%3E%3CProductType%3E0101%3C%2FProductType%3E%3CAppointAreaCode%3E%3C%2FAppointAreaCode%3E%3CAreaFlag%3E440300%3C%2FAreaFlag%3E%3CProducerCode%3E53%3C%2FProducerCode%3E%3CCountyCode%3E440303%3C%2FCountyCode%3E%3C%2FApplication%3E%3CCoverageItem%3E%3CCoverageCode%3E0101200%3C%2FCoverageCode%3E%3CSumLimit%3E%3C%2FSumLimit%3E%3C%2FCoverageItem%3E%3CCoverageItem%3E%3CCoverageCode%3E0101600%3C%2FCoverageCode%3E%3CSumLimit%3E50000.00%3C%2FSumLimit%3E%3C%2FCoverageItem%3E%3CCoverageItem%3E%3CCoverageCode%3E0101701%3C%2FCoverageCode%3E%3CSumLimit%3E%3C%2FSumLimit%3E%3C%2FCoverageItem%3E%3CCoverageItem%3E%3CCoverageCode%3E0101702%3C%2FCoverageCode%3E%3CSumLimit%3E%3C%2FSumLimit%3E%3C%2FCoverageItem%3E%3CCoverageItem%3E%3CCoverageCode%3E0101911%3C%2FCoverageCode%3E%3CSumLimit%3E%3C%2FSumLimit%3E%3C%2FCoverageItem%3E%3CCoverageItem%3E%3CCoverageCode%3E0101912%3C%2FCoverageCode%3E%3CSumLimit%3E%3C%2FSumLimit%3E%3C%2FCoverageItem%3E%3CCoverageItem%3E%3CCoverageCode%3E0101928%3C%2FCoverageCode%3E%3CSumLimit%3E%3C%2FSumLimit%3E%3C%2FCoverageItem%3E%3CCoverageItem%3E%3CCoverageCode%3E0101929%3C%2FCoverageCode%3E%3CSumLimit%3E%3C%2FSumLimit%3E%3C%2FCoverageItem%3E%3CVehicleOwner%3E%3CVehicleOwnerNature%3E1%3C%2FVehicleOwnerNature%3E%3CVehicleOwnerName%3E%D0%BB%C0%FB%D6%D0%3C%2FVehicleOwnerName%3E%3C%2FVehicleOwner%3E%3CThirdPartInfo%3E%3CIsThirdBusiness%3E0%3C%2FIsThirdBusiness%3E%3CRecordCode%3E%3C%2FRecordCode%3E%3C%2FThirdPartInfo%3E%3C%2FBody%3E%3C%2FPACKET%3E%B7%B5%BB%D8%B1%A8%CE%C4%A3%BA%3C%3Fxml+version%3D%221.0%22+encoding%3D%22GBK%22%3F%3E%3CPacket+type%3D%22RESPONSE%22+version%3D%221.0%22%3E%3CHead%3E%3CRequestType%3EV0101%3C%2FRequestType%3E%3CResponseCode%3E1%3C%2FResponseCode%3E%3CErrorCode%3E0000%3C%2FErrorCode%3E%3CErrorMessage%3E%B3%C9%B9%A6%3C%2FErrorMessage%3E%3C%2FHead%3E%3CBody%3E%3CBasePart%3E%3CQuerySequenceNo%3EV0101GPIC440317001484026746716%3C%2FQuerySequenceNo%3E%3CQueryPastDate%3E201701301339%3C%2FQueryPastDate%3E%3CClaimRecordStartDate%3E%3C%2FClaimRecordStartDate%3E%3CClaimRecordEndDate%3E%3C%2FClaimRecordEndDate%3E%3CPeccancyRecordStartDate%3E201601111339%3C%2FPeccancyRecordStartDate%3E%3CPeccancyRecordEndDate%3E201701101339%3C%2FPeccancyRecordEndDate%3E%3C%2FBasePart%3E%3CCarModel%3E%3CModelCode%3EBADBQRUC0010%3C%2FModelCode%3E%3CModelIDCode%3EBADBQRUC001022A1%3C%2FModelIDCode%3E%3CTradeName%3E%B5%C2%B9%FA%B0%C2%B5%CF%C6%FB%B3%B5%B9%C9%B7%DD%D3%D0%CF%DE%B9%AB%CB%BE%3C%2FTradeName%3E%3CTradeCode%3EM0142%3C%2FTradeCode%3E%3CBrand%3E%B0%C2%B5%CF%3C%2FBrand%3E%3CBrandCode%3EADB%3C%2FBrandCode%3E%3CSeries%3E%B0%C2%B5%CFQ7%3C%2FSeries%3E%3CSeriesCode%3EADBQR%3C%2FSeriesCode%3E%3CCarName%3E%B0%C2%B5%CFAUDI+Q7+3.0+TFSI+QUATTRO+35TFSI%BC%BC%CA%F5%D0%CD%3C%2FCarName%3E%3CNoticeType%3E%3C%2FNoticeType%3E%3CConfigType%3EUC%3C%2FConfigType%3E%3CCategoryName%3E%D4%BD%D2%B0%C6%FB%B3%B5%3C%2FCategoryName%3E%3CCategoryCode%3E2%3C%2FCategoryCode%3E%3CDeptName%3E%BD%F8%BF%DA%3C%2FDeptName%3E%3CDeptCode%3E2%3C%2FDeptCode%3E%3C%2FCarModel%3E%3CRiskItem%3E%3CClaimAdjustValue%3E0.0%3C%2FClaimAdjustValue%3E%3CClaimAdjustReason%3E%3C%2FClaimAdjustReason%3E%3CNoClaimAdjustReason%3E05%3C%2FNoClaimAdjustReason%3E%3CPeccancyAdjustValue%3E0.0%3C%2FPeccancyAdjustValue%3E%3CPeccancyAdjustReason%3E%3C%2FPeccancyAdjustReason%3E%3CNoPeccancyAdjustReason%3E%3C%2FNoPeccancyAdjustReason%3E%3C%2FRiskItem%3E%3CReInsureItem%3E%3CLicensePlateNo%3E%3C%2FLicensePlateNo%3E%3CLicensePlateType%3E%3C%2FLicensePlateType%3E%3CLicensePlateColorCode%3E%3C%2FLicensePlateColorCode%3E%3CVIN%3EWAUAGD4M3GD023194%3C%2FVIN%3E%3CEngineNo%3ECRE061709%3C%2FEngineNo%3E%3CInsurerArea%3E%3C%2FInsurerArea%3E%3CInsurerCompanyType%3E2%3C%2FInsurerCompanyType%3E%3C%2FReInsureItem%3E%3CCommission%3E%3CCommissionRateUpper%3E1.0%3C%2FCommissionRateUpper%3E%3CCompanyCommissionRateUpper%3E1.0%3C%2FCompanyCommissionRateUpper%3E%3C%2FCommission%3E%3CCommissionAgent%3E%3CAgentTypeCode%3E3%3C%2FAgentTypeCode%3E%3CCertificateNo%3E203131000000800%3C%2FCertificateNo%3E%3CIndividualProducerCode%3E75047232-2%3C%2FIndividualProducerCode%3E%3CIndividualProducerName%3E%C9%EE%DB%DA%CA%D0%D2%CB%B1%A3%CD%A8%B1%A3%CF%D5%CF%FA%CA%DB%D3%D0%CF%DE%B9%AB%CB%BE%3C%2FIndividualProducerName%3E%3CGroupCompany%3E%3C%2FGroupCompany%3E%3CPracticeCertificateCode%3E%3C%2FPracticeCertificateCode%3E%3CBankCode%3E0000%3C%2FBankCode%3E%3CBankName%3E%B9%A4%C9%CC%D2%F8%D0%D0%C9%EE%DB%DA%BA%EC%CE%A7%D6%A7%D0%D0%3C%2FBankName%3E%3CAccountNumber%3E4000021219200320544%3C%2FAccountNumber%3E%3CAccountName%3E%C9%EE%DB%DA%CA%D0%D2%CB%B1%A3%CD%A8%B1%A3%CF%D5%CF%FA%CA%DB%D3%D0%CF%DE%B9%AB%CB%BE%3C%2FAccountName%3E%3CCertificate%3E%3CCertificateValidDate%3E20030519%3C%2FCertificateValidDate%3E%3CCertificateExpireDate%3E20160518%3C%2FCertificateExpireDate%3E%3C%2FCertificate%3E%3CCertificate%3E%3CCertificateValidDate%3E20160428%3C%2FCertificateValidDate%3E%3CCertificateExpireDate%3E20190517%3C%2FCertificateExpireDate%3E%3C%2FCertificate%3E%3CContract%3E%3CContractNo%3E75047232-2-01%3C%2FContractNo%3E%3CContractValidDate%3E20121106%3C%2FContractValidDate%3E%3CContractExpireDate%3E20181105%3C%2FContractExpireDate%3E%3C%2FContract%3E%3C%2FCommissionAgent%3E%3CCoveragePremiumItem%3E%3CCoverageCode%3E0101200%3C%2FCoverageCode%3E%3CPureRiskPremiumItem%3E%3CModelCode%3EBADBQRUC0010%3C%2FModelCode%3E%3CPureRiskPremium%3E7524.838100%3C%2FPureRiskPremium%3E%3CPureRiskPremiumFlag%3E1%3C%2FPureRiskPremiumFlag%3E%3C%2FPureRiskPremiumItem%3E%3C%2FCoveragePremiumItem%3E%3C%2FBody%3E%3C%2FPacket%3E%5D%5D%3E");
	  queryPayForParams.put("XmlContentBICheck","");
	  queryPayForParams.put("CheckCode","A");
	  queryPayForParams.put("buttonCheckFlag","0");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","1");
	  queryPayForParams.put("KindCode","205");
	  queryPayForParams.put("KindName","%B3%B5%C9%ED%BB%AE%BA%DB%CB%F0%CA%A7%CF%D5");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","001");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","2000");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","1");
	  queryPayForParams.put("KindCode","201");
	  queryPayForParams.put("KindName","%B2%A3%C1%A7%B5%A5%B6%C0%C6%C6%CB%E9%CF%D5");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","2");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","001");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","1");
	  queryPayForParams.put("KindCode","202");
	  queryPayForParams.put("KindName","%D7%D4%C8%BC%CB%F0%CA%A7%CF%D5");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","001");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","206");
	  queryPayForParams.put("KindName","%B7%A2%B6%AF%BB%FA%C9%E6%CB%AE%CB%F0%CA%A7%CF%D5");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","001");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("KindCodeCheckBox","1");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","4");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","1");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","301");
	  queryPayForParams.put("KindName","%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%BB%FA%B6%AF%B3%B5%CB%F0%CA%A7%B1%A3%CF%D5%A3%A9");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","001");
	  queryPayForParams.put("ItemKindFlag5Flag","0");
	  queryPayForParams.put("KindPremiumM","0.00");
	  queryPayForParams.put("kindBenchmarkPremiumm","0.0");
	  queryPayForParams.put("Deductible","0");
	  queryPayForParams.put("DeductibleRate","0");
	  queryPayForParams.put("PureRiskPremium1","718.167906");
	  queryPayForParams.put("PureRiskBenchMarkPremium","718.167906");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","15.00000");
	  queryPayForParams.put("BenchMarkPremium","1736.50");
	  queryPayForParams.put("BasePremium","0.00");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","1128.725000");
	  queryPayForParams.put("Discount","0.9500");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("checkboxChooseFlag","4");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","C22");
	  queryPayForParams.put("ProfitRate","1");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","4");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E4%5E301%5E%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%BB%FA%B6%AF%B3%B5%CB%F0%CA%A7%B1%A3%CF%D5%A3%A9%5EC22%5E%CE%DE%C5%E2%BF%EE%D3%C5%B4%FD%5E1%5E%5E%5E1%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","4");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N21");
	  queryPayForParams.put("ProfitRate","1.0795");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","4");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E4%5E301%5E%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%BB%FA%B6%AF%B3%B5%CB%F0%CA%A7%B1%A3%CF%D5%A3%A9%5EN21%5E%C8%CB%B9%A4%D7%D4%BA%CB%CF%B5%CA%FD%5E1%5E%5E%5E1.0795%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","4");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N20");
	  queryPayForParams.put("ProfitRate","0.8800");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","4");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E4%5E301%5E%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%BB%FA%B6%AF%B3%B5%CB%F0%CA%A7%B1%A3%CF%D5%A3%A9%5EN20%5E%C8%CB%B9%A4%C7%FE%B5%C0%CF%B5%CA%FD%5E1%5E%5E%5E0.8800%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("AdjustRate","1");
	  queryPayForParams.put("Premium","1649.68");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("KindCodeCheckBox","1");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","5");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","1");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","302");
	  queryPayForParams.put("KindName","%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B5%DA%C8%FD%D5%DF%D4%F0%C8%CE%B1%A3%CF%D5%A3%A9");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","002");
	  queryPayForParams.put("ItemKindFlag5Flag","0");
	  queryPayForParams.put("KindPremiumM","0.00");
	  queryPayForParams.put("kindBenchmarkPremiumm","0.0");
	  queryPayForParams.put("Deductible","0");
	  queryPayForParams.put("DeductibleRate","0");
	  queryPayForParams.put("PureRiskPremium1","74.845404");
	  queryPayForParams.put("PureRiskBenchMarkPremium","74.845404");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","15.00000");
	  queryPayForParams.put("BenchMarkPremium","114.75");
	  queryPayForParams.put("BasePremium","0.00");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","74.587500");
	  queryPayForParams.put("Discount","0.9500");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("checkboxChooseFlag","5");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","C22");
	  queryPayForParams.put("ProfitRate","1");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","5");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E5%5E302%5E%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B5%DA%C8%FD%D5%DF%D4%F0%C8%CE%B1%A3%CF%D5%A3%A9%5EC22%5E%CE%DE%C5%E2%BF%EE%D3%C5%B4%FD%5E1%5E%5E%5E1%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","5");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N21");
	  queryPayForParams.put("ProfitRate","1.0795");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","5");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E5%5E302%5E%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B5%DA%C8%FD%D5%DF%D4%F0%C8%CE%B1%A3%CF%D5%A3%A9%5EN21%5E%C8%CB%B9%A4%D7%D4%BA%CB%CF%B5%CA%FD%5E1%5E%5E%5E1.0795%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","5");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N20");
	  queryPayForParams.put("ProfitRate","0.8800");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","5");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E5%5E302%5E%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B5%DA%C8%FD%D5%DF%D4%F0%C8%CE%B1%A3%CF%D5%A3%A9%5EN20%5E%C8%CB%B9%A4%C7%FE%B5%C0%CF%B5%CA%FD%5E1%5E%5E%5E0.8800%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("AdjustRate","1");
	  queryPayForParams.put("Premium","109.01");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("KindCodeCheckBox","1");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","6");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","1");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","303");
	  queryPayForParams.put("KindName","%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5-%BC%DD%CA%BB%C8%CB%A3%A9");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","003");
	  queryPayForParams.put("ItemKindFlag5Flag","0");
	  queryPayForParams.put("KindPremiumM","0.00");
	  queryPayForParams.put("kindBenchmarkPremiumm","0.0");
	  queryPayForParams.put("Deductible","0");
	  queryPayForParams.put("DeductibleRate","0");
	  queryPayForParams.put("PureRiskPremium1","0.161867");
	  queryPayForParams.put("PureRiskBenchMarkPremium","0.161867");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","15.00000");
	  queryPayForParams.put("BenchMarkPremium","3.15");
	  queryPayForParams.put("BasePremium","0.00");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","2.047500");
	  queryPayForParams.put("Discount","0.9500");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("checkboxChooseFlag","6");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","C22");
	  queryPayForParams.put("ProfitRate","1");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","6");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E6%5E303%5E%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5-%BC%DD%CA%BB%C8%CB%A3%A9%5EC22%5E%CE%DE%C5%E2%BF%EE%D3%C5%B4%FD%5E1%5E%5E%5E1%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","6");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N21");
	  queryPayForParams.put("ProfitRate","1.0795");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","6");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E6%5E303%5E%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5-%BC%DD%CA%BB%C8%CB%A3%A9%5EN21%5E%C8%CB%B9%A4%D7%D4%BA%CB%CF%B5%CA%FD%5E1%5E%5E%5E1.0795%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("checkboxChooseFlag","6");
	  queryPayForParams.put("ChooseFlag","1");
	  queryPayForParams.put("ProfitCode","N20");
	  queryPayForParams.put("ProfitRate","0.8800");
	  queryPayForParams.put("ProfitDetail_ItemKindNo","6");
	  queryPayForParams.put("ProfitDetail_FieldValue","");
	  queryPayForParams.put("ProfitDetailEncode","%5E0511%5E1%5E%5E6%5E303%5E%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5-%BC%DD%CA%BB%C8%CB%A3%A9%5EN20%5E%C8%CB%B9%A4%C7%FE%B5%C0%CF%B5%CA%FD%5E1%5E%5E%5E0.8800%5E%5E%5E%5E");
	  queryPayForParams.put("ProfitDetail_Flag","");
	  queryPayForParams.put("ProfitDetail_ConditionCode","");
	  queryPayForParams.put("AdjustRate","1");
	  queryPayForParams.put("Premium","2.99");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","305");
	  queryPayForParams.put("KindName","%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B3%B5%C9%CF%C8%CB%D4%B1%D4%F0%C8%CE%B1%A3%CF%D5-%B3%CB%BF%CD%A3%A9");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","006");
	  queryPayForParams.put("ItemKindFlag5Flag","0");
	  queryPayForParams.put("KindPremiumM","0.00");
	  queryPayForParams.put("kindBenchmarkPremiumm","0.0");
	  queryPayForParams.put("Deductible","0");
	  queryPayForParams.put("DeductibleRate","0");
	  queryPayForParams.put("PureRiskPremium1","0.291627");
	  queryPayForParams.put("PureRiskBenchMarkPremium","0.291627");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0.00");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","3.900000");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","1");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","306");
	  queryPayForParams.put("KindName","%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%C8%AB%B3%B5%B5%C1%C7%C0%B1%A3%CF%D5%A3%A9");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","007");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","309");
	  queryPayForParams.put("KindName","%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B3%B5%C9%ED%BB%AE%BA%DB%CB%F0%CA%A7%CF%D5%A3%A9");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","205");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","307");
	  queryPayForParams.put("KindName","%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%D7%D4%C8%BC%CB%F0%CA%A7%CF%D5%A3%A9");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","202");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","310");
	  queryPayForParams.put("KindName","%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%B7%A2%B6%AF%BB%FA%C9%E6%CB%AE%CB%F0%CA%A7%CF%D5%A3%A9");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","206");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","203");
	  queryPayForParams.put("KindName","%D0%C2%D4%F6%C9%E8%B1%B8%CB%F0%CA%A7%B1%A3%CF%D5");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","001");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","210");
	  queryPayForParams.put("KindName","%BB%FA%B6%AF%B3%B5%CB%F0%CA%A7%B1%A3%CF%D5%CE%DE%B7%A8%D5%D2%B5%BD%B5%DA%C8%FD%B7%BD%CC%D8%D4%BC%CF%D5");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","001");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("ItemKind_Flag","");
	  queryPayForParams.put("Withdraw_Flag","");
	  queryPayForParams.put("ItemKindNo","");
	  queryPayForParams.put("MS_Flag","S");
	  queryPayForParams.put("ItemKindFlag6Flag","");
	  queryPayForParams.put("KindCodeCheckFlag","0");
	  queryPayForParams.put("ProfitDetailFlag","");
	  queryPayForParams.put("KindCode","308");
	  queryPayForParams.put("KindName","%B2%BB%BC%C6%C3%E2%C5%E2%C2%CA%CF%D5%A3%A8%D0%C2%D4%F6%C9%E8%B1%B8%CB%F0%CA%A7%B1%A3%CF%D5%A3%A9");
	  queryPayForParams.put("PreUnitAmountName","");
	  queryPayForParams.put("UnitAmount","");
	  queryPayForParams.put("UnitAmountName","%D4%AA%2F%D7%F9");
	  queryPayForParams.put("Quantity","");
	  queryPayForParams.put("QuantityName","%D7%F9");
	  queryPayForParams.put("AdjustRate1","");
	  queryPayForParams.put("Model","");
	  queryPayForParams.put("ValueTitle","%BF%C9%D1%A1%C3%E2%C5%E2%BD%F0%B6%EE");
	  queryPayForParams.put("Value","300");
	  queryPayForParams.put("DeductibleRate1Title","%BE%F8%B6%D4%C3%E2%C5%E2%CF%B5%CA%FD");
	  queryPayForParams.put("DeductibleRate1","1");
	  queryPayForParams.put("thirdPeopleAmountName","%B5%DA%C8%FD%D5%DF");
	  queryPayForParams.put("thirdPeopleAmount","");
	  queryPayForParams.put("GuestamountName","%B3%CB%BF%CD");
	  queryPayForParams.put("GuestAmount","");
	  queryPayForParams.put("DriveramountName","%BC%DD%CA%BB%C8%CB");
	  queryPayForParams.put("DriverAmount","");
	  queryPayForParams.put("RUnitAmountName","%C3%BF%B4%CE%CA%C2%B9%CA%C3%BF%C8%CB%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("RUnitAmount","");
	  queryPayForParams.put("XDTitle","%D0%AD%B6%A8%B1%C8%C0%FD");
	  queryPayForParams.put("Value1","50");
	  queryPayForParams.put("riskLevelTitle","%B6%E0%B4%CE%CA%C2%B9%CA%C3%E2%C5%E2%C2%CA%CC%D8%D4%BC");
	  queryPayForParams.put("riskLevel","0");
	  queryPayForParams.put("M1ValueTitle","%BF%C9%D1%A1%BE%F8%B6%D4%C3%E2%C5%E2%B6%EE");
	  queryPayForParams.put("M1Value","0");
	  queryPayForParams.put("M1Premium","");
	  queryPayForParams.put("M1ValueRate","");
	  queryPayForParams.put("lastCompanyTitle","%D4%AD%D4%F0%C8%CE%B9%AB%CB%BE");
	  queryPayForParams.put("lastCompany","1");
	  queryPayForParams.put("lastAmountTitle","%D4%AD%D4%F0%C8%CE%CF%DE%B6%EE");
	  queryPayForParams.put("lastAmount","");
	  queryPayForParams.put("TotalProfit1","0");
	  queryPayForParams.put("TotalProfit2","0");
	  queryPayForParams.put("ItemKind_StartDate","");
	  queryPayForParams.put("ItemKind_EndDate","");
	  queryPayForParams.put("ItemKindCalculateFlag","N");
	  queryPayForParams.put("ItemKindFlag3To4","");
	  queryPayForParams.put("AttachFlag","203");
	  queryPayForParams.put("ItemKindFlag5Flag","");
	  queryPayForParams.put("KindPremiumM","");
	  queryPayForParams.put("kindBenchmarkPremiumm","");
	  queryPayForParams.put("Deductible","");
	  queryPayForParams.put("DeductibleRate","");
	  queryPayForParams.put("PureRiskPremium1","");
	  queryPayForParams.put("PureRiskBenchMarkPremium","");
	  queryPayForParams.put("Currency1","CNY");
	  queryPayForParams.put("CurrencyNameMain","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMain","");
	  queryPayForParams.put("Amount","");
	  queryPayForParams.put("ItemKind_ActualValue","");
	  queryPayForParams.put("ItemKind_ActualValue_Orign","");
	  queryPayForParams.put("Rate","");
	  queryPayForParams.put("BenchMarkPremium","");
	  queryPayForParams.put("BasePremium","0");
	  queryPayForParams.put("KindShortRate","");
	  queryPayForParams.put("KindShortRateFlag","");
	  queryPayForParams.put("platBenchMarkPremium","");
	  queryPayForParams.put("Discount","");
	  queryPayForParams.put("selectDiscount","%C8%AB+%D1%A1");
	  queryPayForParams.put("unSelectDiscount","%C8%A1%CF%FB%C8%AB%D1%A1");
	  queryPayForParams.put("AdjustRate","");
	  queryPayForParams.put("Premium","");
	  queryPayForParams.put("ItemKind_NewStartDate","");
	  queryPayForParams.put("ItemKind_NewEndDate","");
	  queryPayForParams.put("isT0060Flag","false");
	  queryPayForParams.put("ClauseName","");
	  queryPayForParams.put("ChangeEngageFlag","0");
	  queryPayForParams.put("defaultClausesContext","");
	  queryPayForParams.put("Engage_Flag","");
	  queryPayForParams.put("AutoClauseFlag","0");
	  queryPayForParams.put("EngageSerialNo","");
	  queryPayForParams.put("ClauseCode","");
	  queryPayForParams.put("Clauses","");
	  queryPayForParams.put("ClausesContext","");
	  queryPayForParams.put("clauseTemplate","");
	  queryPayForParams.put("clauseActiveContent","");
	  queryPayForParams.put("PlanOneTimes","1");
	  queryPayForParams.put("PayTimes","1");
	  queryPayForParams.put("Plan_Flag","");
	  queryPayForParams.put("PayReason","");
	  queryPayForParams.put("PayNo","");
	  queryPayForParams.put("PlanStartDate","");
	  queryPayForParams.put("PlanDate","");
	  queryPayForParams.put("PrpPlanCurrency","");
	  queryPayForParams.put("PrpPlanCurrencyName","");
	  queryPayForParams.put("PlanFee","");
	  queryPayForParams.put("DelinquentFee","");
	  queryPayForParams.put("RealPayFee","");
	  queryPayForParams.put("AccountCode","");
	  queryPayForParams.put("CustomBankName","");
	  queryPayForParams.put("CertificateCode","");
	  queryPayForParams.put("OwnerName","");
	  queryPayForParams.put("AccountType","");
	  queryPayForParams.put("CustomBankCode","");
	  queryPayForParams.put("OwnerPhoneNo","");
	  queryPayForParams.put("AccountCurrency","");
	  queryPayForParams.put("OwnerShip","");
	  queryPayForParams.put("PrpapaymentAccountOwnerType","");
	  queryPayForParams.put("PrpapaymentAccountAppliName","");
	  queryPayForParams.put("PrpapaymentAccountCustomerCode","");
	  queryPayForParams.put("PrpapaymentAccountUserCode","");
	  queryPayForParams.put("PrpapaymentAccountVehicleComCode","");
	  queryPayForParams.put("Plan_Flag","");
	  queryPayForParams.put("PayReason","R10");
	  queryPayForParams.put("PayNo","1");
	  queryPayForParams.put("PlanStartDate","");
	  queryPayForParams.put("PlanDate","2017-01-11");
	  queryPayForParams.put("PrpPlanCurrency","CNY");
	  queryPayForParams.put("PrpPlanCurrencyName","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("PlanFee","13544.22");
	  queryPayForParams.put("DelinquentFee","13544.22");
	  queryPayForParams.put("RealPayFee","0");
	  queryPayForParams.put("AccountCode","");
	  queryPayForParams.put("CustomBankName","");
	  queryPayForParams.put("CertificateCode","");
	  queryPayForParams.put("OwnerName","");
	  queryPayForParams.put("AccountType","");
	  queryPayForParams.put("CustomBankCode","");
	  queryPayForParams.put("OwnerPhoneNo","");
	  queryPayForParams.put("AccountCurrency","");
	  queryPayForParams.put("OwnerShip","");
	  queryPayForParams.put("PrpapaymentAccountOwnerType","");
	  queryPayForParams.put("PrpapaymentAccountAppliName","");
	  queryPayForParams.put("PrpapaymentAccountCustomerCode","");
	  queryPayForParams.put("PrpapaymentAccountUserCode","");
	  queryPayForParams.put("PrpapaymentAccountVehicleComCode","");
	  queryPayForParams.put("isPoundageFlag","0");
	  queryPayForParams.put("DisRate","29.68");
	  queryPayForParams.put("PremiumDisRate","");
	  queryPayForParams.put("Expenses_Flag","");
	  queryPayForParams.put("PreDisRate","");
	  queryPayForParams.put("MaxDisRate","29.68");
	  queryPayForParams.put("FinalDisRate","29.68");
	  queryPayForParams.put("IsPoundageType","%B7%F1");
	  queryPayForParams.put("PoundageRatio","29.68");
	  queryPayForParams.put("PoundageFee","4021.616256");
	  queryPayForParams.put("businessGuideRate","31.45");
	  queryPayForParams.put("salesExpenseHigh","4261.01074");
	  queryPayForParams.put("AssignnoCheckedNew","");
	  queryPayForParams.put("Agent_Id_Flag","");
	  queryPayForParams.put("isSplitFeeFlag","");
	  queryPayForParams.put("isSpecialFlag","0");
	  queryPayForParams.put("Agent_Id_IsSplit_Flag","");
	  queryPayForParams.put("Agent_IdSerialNo","");
	  queryPayForParams.put("SplitFeeAgentCode","");
	  queryPayForParams.put("SplitFeeAgentName","");
	  queryPayForParams.put("SplitFeeRatePayRefReason","");
	  queryPayForParams.put("SplitFeeRatePayRefReasonCode","");
	  queryPayForParams.put("SplitFeeCommissionRate","");
	  queryPayForParams.put("SplitFeeCommissionRateSale","");
	  queryPayForParams.put("SplitFeeCommissionScale","");
	  queryPayForParams.put("CompanyRateUpper","1.0");
	  queryPayForParams.put("ClaimEffectReason","");
	  queryPayForParams.put("NewVehicleEffecReason","");
	  queryPayForParams.put("ProducerEffecReason","");
	  queryPayForParams.put("IsAgentCodeFlag","0");
	  queryPayForParams.put("IsAgentTypeNoFlag","0");
	  queryPayForParams.put("IsAgentMaxCommissionFlag","0");
	  queryPayForParams.put("IsDisRateFlag","0");
	  queryPayForParams.put("OriginalDisRate","");
	  queryPayForParams.put("OriginalAgentTypeNo","");
	  queryPayForParams.put("AgentTypeNo_Expen","");
	  queryPayForParams.put("AgentTypeNoName_Expen","");
	  queryPayForParams.put("MaxDisRate_Expen","");
	  queryPayForParams.put("ChangePremiumDisRate","");
	  queryPayForParams.put("PureRate","");
	  queryPayForParams.put("ExpensesFlag2","1");
	  queryPayForParams.put("MaxManageFeeRate","");
	  queryPayForParams.put("ManageFeeRate","");
	  queryPayForParams.put("DisRate1","");
	  queryPayForParams.put("PremiumDisRate1","0.00");
	  queryPayForParams.put("ChangePremiumDisRate1","");
	  queryPayForParams.put("TopCommission","");
	  queryPayForParams.put("ChargeSerialNo","");
	  queryPayForParams.put("ChargeRiskCode","0511");
	  queryPayForParams.put("Charge_Flag","");
	  queryPayForParams.put("RefreshFlagCharge","");
	  queryPayForParams.put("ChargeCode","");
	  queryPayForParams.put("ChargeName","");
	  queryPayForParams.put("Currency2Charge","CNY");
	  queryPayForParams.put("CurrencyNameCharge","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateCharge","");
	  queryPayForParams.put("BaseAmountCharge","10000");
	  queryPayForParams.put("ChargeRate","0.0000");
	  queryPayForParams.put("PlanFee2Charge","");
	  queryPayForParams.put("SchemeProtocolCode","");
	  queryPayForParams.put("SchemeCoinsSchemeId","");
	  queryPayForParams.put("SchemeCoinsSchemeName","");
	  queryPayForParams.put("SchemeValidStatus","");
	  queryPayForParams.put("SchemeCoinsgFlag","");
	  queryPayForParams.put("SchemeCoinsLFlag","");
	  queryPayForParams.put("SchemeProportionFlag","");
	  queryPayForParams.put("SchemeStartDate","");
	  queryPayForParams.put("SchemeEndDate","");
	  queryPayForParams.put("SchemeOperatorCode","");
	  queryPayForParams.put("SchemeChargeType","");
	  queryPayForParams.put("SchemeChargeValue","");
	  queryPayForParams.put("SchemeIsClaimRateSame","");
	  queryPayForParams.put("SchemeUseFlag","");
	  queryPayForParams.put("TocCoinsSchemeID","");
	  queryPayForParams.put("TocOrderID","");
	  queryPayForParams.put("TocCoinsType","");
	  queryPayForParams.put("TocSignIdentity","");
	  queryPayForParams.put("TocCoinsIdentify","");
	  queryPayForParams.put("TocChiefFlag","");
	  queryPayForParams.put("TocCoinsCode","");
	  queryPayForParams.put("TocChannelType","");
	  queryPayForParams.put("TocComCode","");
	  queryPayForParams.put("TocHandler1code","");
	  queryPayForParams.put("TocCoinsCodeName","");
	  queryPayForParams.put("TocChannelTypeName","");
	  queryPayForParams.put("TocComCodeName","");
	  queryPayForParams.put("TocHandler1codeName","");
	  queryPayForParams.put("TocInputDate","");
	  queryPayForParams.put("TocCoinsRate","");
	  queryPayForParams.put("TocAgentFee","");
	  queryPayForParams.put("TocOperateRate","");
	  queryPayForParams.put("SingleIdentity","%B3%F6%B5%A5%C9%ED%B7%DD");
	  queryPayForParams.put("CoinsTypeG","%B9%B2%B1%A3%C8%CB%C9%ED%B7%DD");
	  queryPayForParams.put("CoinsNameL","%B9%B2%B1%A3%C8%CB%C3%FB%B3%C6");
	  queryPayForParams.put("ChannelTypeL","");
	  queryPayForParams.put("ComCodeL","");
	  queryPayForParams.put("Handler1codeL","");
	  queryPayForParams.put("CoinsRateG","%B9%B2%B1%A3%B7%DD%B6%EE");
	  queryPayForParams.put("CoinsAmount","%B7%DD%B6%EE%B1%A3%B6%EE");
	  queryPayForParams.put("CoinsPremium","%B7%DD%B6%EE%B1%A3%B7%D1");
	  queryPayForParams.put("AgentFee","%CA%D6%D0%F8%B7%D1");
	  queryPayForParams.put("ProportionFee","%B3%F6%B5%A5%B7%D1");
	  queryPayForParams.put("prppcoinsdetailflag","");
	  queryPayForParams.put("CarShipFlagNew","0");
	  queryPayForParams.put("shenzhenM7ComCode","44031573");
	  queryPayForParams.put("TaxRelifFlag","1N");
	  queryPayForParams.put("TaxRegistryNumber","");
	  queryPayForParams.put("ProvinceCode","");
	  queryPayForParams.put("ProvinceName","");
	  queryPayForParams.put("TaxComCode","");
	  queryPayForParams.put("TaxComName","");
	  queryPayForParams.put("CityCode","");
	  queryPayForParams.put("CityName","");
	  queryPayForParams.put("RegisterArea","");
	  queryPayForParams.put("CodeDistrict","");
	  queryPayForParams.put("DistrictName","");
	  queryPayForParams.put("TaxpayerNameType","1");
	  queryPayForParams.put("TaxpayerName","%D0%BB%C0%FB%D6%D0");
	  queryPayForParams.put("CarShipTax_Flag","");
	  queryPayForParams.put("TaxpayerCode","441425197312281133");
	  queryPayForParams.put("TaxpayerIdentifier","441425197312281133");
	  queryPayForParams.put("TaxPayerAddress","");
	  queryPayForParams.put("BaseTaxation","");
	  queryPayForParams.put("RelifReason","");
	  queryPayForParams.put("TaxRelief","");
	  queryPayForParams.put("FreeRate","");
	  queryPayForParams.put("FreeRateText","");
	  queryPayForParams.put("PaidFreeCertificate","");
	  queryPayForParams.put("PayStartDate","");
	  queryPayForParams.put("PayEndDate","");
	  queryPayForParams.put("KTaxComCode","");
	  queryPayForParams.put("KTaxComName","");
	  queryPayForParams.put("TaxUnit","");
	  queryPayForParams.put("TaxUnitText","1");
	  queryPayForParams.put("TaxDue","");
	  queryPayForParams.put("TaxItemCode","");
	  queryPayForParams.put("TaxItemName","");
	  queryPayForParams.put("TaxItemDetailCode","");
	  queryPayForParams.put("TaxItemDetailName","");
	  queryPayForParams.put("PayLastYear","");
	  queryPayForParams.put("HisPolicyEndDate","");
	  queryPayForParams.put("TaxActual","");
	  queryPayForParams.put("PreviousPay","");
	  queryPayForParams.put("LateFee","");
	  queryPayForParams.put("SumPayTax","");
	  queryPayForParams.put("count","0");
	  queryPayForParams.put("CommissionRate","2");
	  queryPayForParams.put("CommissionTax","");
	  queryPayForParams.put("SinoSoftPlatCarShipTaxFlag","true");
	  queryPayForParams.put("FinalFlag","N");
	  queryPayForParams.put("ClosingDate","");
	  queryPayForParams.put("ExtendChar1","");
	  queryPayForParams.put("ExtendChar2","");
	  queryPayForParams.put("ExtendDate1","");
	  queryPayForParams.put("ExtendDate2","");
	  queryPayForParams.put("AccountNo","");
	  queryPayForParams.put("DistrictCode","");
	  queryPayForParams.put("TaxUseNature","");
	  queryPayForParams.put("TaxUseStatus","");
	  queryPayForParams.put("SpecialCarKind","");
	  queryPayForParams.put("RenewalEndDate","");
	  queryPayForParams.put("FeeRateOrgin","");
	  queryPayForParams.put("TaxReliefOrgin","");
	  queryPayForParams.put("WithdrawItemKindNoCI","");
	  queryPayForParams.put("GlassTypeModelCI","");
	  queryPayForParams.put("RadiusTypeModelCI","");
	  queryPayForParams.put("DeductibleSWITCHCI","");
	  queryPayForParams.put("CarClauseChgDateCI","");
	  queryPayForParams.put("ComCodeForCalCI","");
	  queryPayForParams.put("CIBillDate","");
	  queryPayForParams.put("RenewalFlagCIJZ","");
	  queryPayForParams.put("UnionEndorseCIRenewalFlag","");
	  queryPayForParams.put("UnionEndorseCIPolicyNoRenewal","");
	  queryPayForParams.put("SumPremiumCIPRO","");
	  queryPayForParams.put("ItemKind_FlagCI","");
	  queryPayForParams.put("Withdraw_FlagCI","");
	  queryPayForParams.put("ItemKindNoCI","");
	  queryPayForParams.put("MS_FlagCI","");
	  queryPayForParams.put("ItemKindFlag6FlagCI","");
	  queryPayForParams.put("KindCodeCI","BZ");
	  queryPayForParams.put("KindNameCI","%BB%FA%B6%AF%B3%B5%BD%BB%CD%A8%CA%C2%B9%CA%D4%F0%C8%CE%C7%BF%D6%C6%CF%D5");
	  queryPayForParams.put("TotalProfit1CI","0");
	  queryPayForParams.put("TotalProfit2CI","0");
	  queryPayForParams.put("ItemKind_StartDateCI","");
	  queryPayForParams.put("ItemKind_EndDateCI","");
	  queryPayForParams.put("ItemKind_NewStartDateCI","");
	  queryPayForParams.put("ItemKind_NewEndDateCI","");
	  queryPayForParams.put("ItemKindFlag5CI","");
	  queryPayForParams.put("ItemKindCalculateFlagCI","");
	  queryPayForParams.put("ItemKindFlag3To4CI","");
	  queryPayForParams.put("AttachFlagCI","");
	  queryPayForParams.put("ItemKindFlag5FlagCI","");
	  queryPayForParams.put("DeductibleCI","");
	  queryPayForParams.put("DeductibleRateCI","");
	  queryPayForParams.put("CurrencyCI","CNY");
	  queryPayForParams.put("CurrencyNameCI","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("RateCI","");
	  queryPayForParams.put("AmountCI","122000");
	  queryPayForParams.put("BenchMarkPremiumCI","");
	  queryPayForParams.put("BasePremiumCI","0");
	  queryPayForParams.put("DiscountCI","1.0");
	  queryPayForParams.put("AdjustRateCI","1");
	  queryPayForParams.put("PremiumCI","");
	  queryPayForParams.put("DiedAmountLimitCI","110000");
	  queryPayForParams.put("CureChargeAmountLimitCI","10000");
	  queryPayForParams.put("PropertyLossAmountLimitCI","2000");
	  queryPayForParams.put("NoDutyDiedAmountLimitCI","11000");
	  queryPayForParams.put("NoDutyCureChargeAmountLimitCI","1000");
	  queryPayForParams.put("NoDutyPropertyLossAmountLimitCI","100");
	  queryPayForParams.put("AmountCountCI","");
	  queryPayForParams.put("BenchMarkPremiumCountCI","");
	  queryPayForParams.put("PremiumDisCountCI","");
	  queryPayForParams.put("PremiumCountCI","");
	  queryPayForParams.put("DiscountPremiumCountCI","");
	  queryPayForParams.put("SumPremiumCI","");
	  queryPayForParams.put("AdjustRateOfMainCI","1");
	  queryPayForParams.put("SumRealPremium","");
	  queryPayForParams.put("ZJtimes","0");
	  queryPayForParams.put("JHZJAdjustValue","");
	  queryPayForParams.put("ZJtimesMax","");
	  queryPayForParams.put("JHtimes","0");
	  queryPayForParams.put("JHtimesMax","");
	  queryPayForParams.put("ShortRate_CI","100.0000");
	  queryPayForParams.put("LastBillDate","");
	  queryPayForParams.put("tableShortRate_CI_Flag","");
	  queryPayForParams.put("Currency_CI","CNY");
	  queryPayForParams.put("CurrencyName_CI","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("FloatReason","");
	  queryPayForParams.put("ClaimReason","");
	  queryPayForParams.put("ShortRateFlag_CI","2");
	  queryPayForParams.put("PeccReason","");
	  queryPayForParams.put("LastDamagedACI","");
	  queryPayForParams.put("LastDamagedBCI","");
	  queryPayForParams.put("ThisDamagedACI","");
	  queryPayForParams.put("ThisDamagedBCI","");
	  queryPayForParams.put("ChooseFlagCI","");
	  queryPayForParams.put("ProfitCodeCI","");
	  queryPayForParams.put("ProfitRateCI","");
	  queryPayForParams.put("ProfitDetail_ItemKindNoCI","");
	  queryPayForParams.put("ProfitDetail_FieldValueCI","");
	  queryPayForParams.put("ProfitDetailEncodeCI","");
	  queryPayForParams.put("ProfitDetail_FlagCI","");
	  queryPayForParams.put("ClauseNameCI","");
	  queryPayForParams.put("defaultClausesContextCI","");
	  queryPayForParams.put("EngageCI_Flag","");
	  queryPayForParams.put("AutoClauseCIFlag","0");
	  queryPayForParams.put("EngageSerialNoCI","");
	  queryPayForParams.put("ClauseCodeCI","");
	  queryPayForParams.put("ClausesCI","");
	  queryPayForParams.put("ClausesContextCI","");
	  queryPayForParams.put("clauseTemplateCI","");
	  queryPayForParams.put("clauseActiveContentCI","");
	  queryPayForParams.put("Query_sequence_no","");
	  queryPayForParams.put("XmlContentCIQuery","");
	  queryPayForParams.put("Query_sequence_noPRO","");
	  queryPayForParams.put("Vehicle_type","");
	  queryPayForParams.put("XmlContentCICheck","");
	  queryPayForParams.put("CheckCodeCI","A");
	  queryPayForParams.put("CIbuttonCheckFlag","0");
	  queryPayForParams.put("Car_mark","");
	  queryPayForParams.put("Rack_no","");
	  queryPayForParams.put("Use_type","");
	  queryPayForParams.put("Color","");
	  queryPayForParams.put("Engine_no","");
	  queryPayForParams.put("Vehicle_register_date","");
	  queryPayForParams.put("Owner","");
	  queryPayForParams.put("Limit_load_person","");
	  queryPayForParams.put("Made_date","");
	  queryPayForParams.put("Ineffectual_date","");
	  queryPayForParams.put("Limit_load","");
	  queryPayForParams.put("Vehicle_model","");
	  queryPayForParams.put("Made_factory","");
	  queryPayForParams.put("Vehicle_brand_2","");
	  queryPayForParams.put("Vehicle_brand_1","");
	  queryPayForParams.put("Last_check_date","");
	  queryPayForParams.put("Vehicle_style","");
	  queryPayForParams.put("Status","");
	  queryPayForParams.put("Reject_date","");
	  queryPayForParams.put("Haulage","");
	  queryPayForParams.put("PreferentialFormula","");
	  queryPayForParams.put("AdjustStart","");
	  queryPayForParams.put("AdjustEnd","");
	  queryPayForParams.put("PeccancyCoeff","");
	  queryPayForParams.put("ClaimCoeff","");
	  queryPayForParams.put("DemandCarKindCode","");
	  queryPayForParams.put("DemandUseNatureCode","");
	  queryPayForParams.put("CIDemandFecc_Flag","");
	  queryPayForParams.put("CIDemandFeccTypeName","");
	  queryPayForParams.put("CIDemandPeccancy_time","");
	  queryPayForParams.put("CIDemandPeccancy_place","");
	  queryPayForParams.put("CIDemandPeccancy_code","");
	  queryPayForParams.put("CIDemandAdjust_rate","");
	  queryPayForParams.put("CIDemandPeccancy_type","");
	  queryPayForParams.put("CIDemandCerti_type","");
	  queryPayForParams.put("CIDemandCerti_code","");
	  queryPayForParams.put("CIDemandLossAccept_date","");
	  queryPayForParams.put("CIDemandLossAction_desc","");
	  queryPayForParams.put("CIDemandLossAction_desc","");
	  queryPayForParams.put("Driver_Name","");
	  queryPayForParams.put("Peccancy_Detail","");
	  queryPayForParams.put("lossCount","0");
	  queryPayForParams.put("CIDemandClaim_Flag","");
	  queryPayForParams.put("CIDemandClaimTypeName","");
	  queryPayForParams.put("CIDemandCompany_no","");
	  queryPayForParams.put("CIDemandClaim_no","");
	  queryPayForParams.put("CIDemandAccident_time","");
	  queryPayForParams.put("CIDemandEndCase_time","");
	  queryPayForParams.put("CIDemandClaim_amount","");
	  queryPayForParams.put("CIDemandClaim_type","");
	  queryPayForParams.put("CIDemandDeath_Flag","");
	  queryPayForParams.put("payCount","0");
	  queryPayForParams.put("FloatTypeShow","");
	  queryPayForParams.put("PreOpeDate","");
	  queryPayForParams.put("PreInsuredComCode","");
	  queryPayForParams.put("PreInsuredComName","");
	  queryPayForParams.put("PrePolicyNo","");
	  queryPayForParams.put("PreYestOpeDate","");
	  queryPayForParams.put("PreYestInsuredComCode","");
	  queryPayForParams.put("PreYestInsuredComName","");
	  queryPayForParams.put("PreYestPolicyNo","");
	  queryPayForParams.put("PrePreYestOpeDate","");
	  queryPayForParams.put("PrePreYestInsuredComCode","");
	  queryPayForParams.put("PrePreYestInsuredComName","");
	  queryPayForParams.put("PrePreYestPolicyNo","");
	  queryPayForParams.put("GetDataFlag","");
	  queryPayForParams.put("NoAccident","ND1");
	  queryPayForParams.put("AccidentFloat","");
	  queryPayForParams.put("AcciSerialNo","");
	  queryPayForParams.put("AccidentDate","");
	  queryPayForParams.put("ClaimDate","");
	  queryPayForParams.put("DeathFlagFlag","");
	  queryPayForParams.put("AccidentFloatFlagFlag","");
	  queryPayForParams.put("disableCIClaimFlag","2");
	  queryPayForParams.put("ModifyJQDataFlag","");
	  queryPayForParams.put("NoOffens","OD1");
	  queryPayForParams.put("OffensFloat","");
	  queryPayForParams.put("OffensSerialNo","");
	  queryPayForParams.put("OffensDate","");
	  queryPayForParams.put("OffensFactor","F1");
	  queryPayForParams.put("OffensFloatFlagFlag","");
	  queryPayForParams.put("PlanOneTimesCI","1");
	  queryPayForParams.put("PayTimesCI","1");
	  queryPayForParams.put("EndorseNoCI","");
	  queryPayForParams.put("PlanCI_Flag","");
	  queryPayForParams.put("PayReasonCI","");
	  queryPayForParams.put("PayNoCI","");
	  queryPayForParams.put("PlanStartDateCI","");
	  queryPayForParams.put("PlanDateCI","");
	  queryPayForParams.put("PrpPlanCurrencyCI","");
	  queryPayForParams.put("PrpPlanCurrencyNameCI","");
	  queryPayForParams.put("PlanFeeCI","");
	  queryPayForParams.put("DelinquentFeeCI","");
	  queryPayForParams.put("RealPayFeeCI","");
	  queryPayForParams.put("AccountCodeCI","");
	  queryPayForParams.put("CustomBankNameCI","");
	  queryPayForParams.put("CertificateCodeCI","");
	  queryPayForParams.put("OwnerNameCI","");
	  queryPayForParams.put("AccountTypeCI","");
	  queryPayForParams.put("CustomBankCodeCI","");
	  queryPayForParams.put("OwnerPhoneNoCI","");
	  queryPayForParams.put("AccountCurrencyCI","");
	  queryPayForParams.put("OwnerShipCI","");
	  queryPayForParams.put("PrpapaymentAccountOwnerTypeCI","");
	  queryPayForParams.put("PrpapaymentAccountAppliNameCI","");
	  queryPayForParams.put("PrpapaymentAccountCustomerCodeCI","");
	  queryPayForParams.put("PrpapaymentAccountUserCodeCI","");
	  queryPayForParams.put("PrpapaymentAccountVehicleComCodeCI","");
	  queryPayForParams.put("Expenses_FlagCI","");
	  queryPayForParams.put("MaxDisRateCI","4.0");
	  queryPayForParams.put("DisRateCI","4.0");
	  queryPayForParams.put("PremiumDisRateCI","");
	  queryPayForParams.put("AssignnoNewCI","");
	  queryPayForParams.put("Agent_Id_CI_Flag","");
	  queryPayForParams.put("isSplitFeeFlagCI","");
	  queryPayForParams.put("isSpecialFlagCI","0");
	  queryPayForParams.put("Agent_Id_CI_IsSplit_Flag","");
	  queryPayForParams.put("CISplitFeeAgentCode","");
	  queryPayForParams.put("CISplitFeeAgentName","");
	  queryPayForParams.put("CISplitFeeRatePayRefReason","");
	  queryPayForParams.put("CISplitFeeRatePayRefReasonCode","");
	  queryPayForParams.put("CISplitFeeCommissionRate","");
	  queryPayForParams.put("CISplitFeeCommissionRateSale","");
	  queryPayForParams.put("CISplitFeeCommissionScale","");
	  queryPayForParams.put("ChangePremiumDisRateCI","");
	  queryPayForParams.put("PureRateCI","");
	  queryPayForParams.put("ExpensesFlag2CI","1");
	  queryPayForParams.put("MaxManageFeeRateCI","");
	  queryPayForParams.put("ManageFeeRateCI","");
	  queryPayForParams.put("DisRate1CI","");
	  queryPayForParams.put("PremiumDisRate1CI","");
	  queryPayForParams.put("ChangePremiumDisRate1CI","");
	  queryPayForParams.put("TopCommissionCI","");
	  queryPayForParams.put("ChargeSerialNoCI","");
	  queryPayForParams.put("ChargeRiskCodeCI","0511");
	  queryPayForParams.put("ChargeCI_Flag","");
	  queryPayForParams.put("RefreshFlagChargeCI","");
	  queryPayForParams.put("ChargeCodeCI","");
	  queryPayForParams.put("ChargeNameCI","");
	  queryPayForParams.put("Currency2ChargeCI","CNY");
	  queryPayForParams.put("CurrencyNameChargeCI","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateChargeCI","");
	  queryPayForParams.put("BaseAmountChargeCI","10000");
	  queryPayForParams.put("ChargeRateCI","0.0000");
	  queryPayForParams.put("PlanFee2ChargeCI","");
	  queryPayForParams.put("SingleIdentityCI","");
	  queryPayForParams.put("CoinsTypeGCI","");
	  queryPayForParams.put("CoinsNameLCI","");
	  queryPayForParams.put("ChannelTypeLCI","");
	  queryPayForParams.put("ComCodeLCI","");
	  queryPayForParams.put("Handler1codeLCI","");
	  queryPayForParams.put("CoinsRateGCI","");
	  queryPayForParams.put("CoinsAmountCI","");
	  queryPayForParams.put("CoinsPremiumCI","");
	  queryPayForParams.put("AgentFeeCI","");
	  queryPayForParams.put("ProportionFeeCI","");
	  queryPayForParams.put("riskFlagCarRelation","JYX");
	  queryPayForParams.put("riskFlagCarRelationList","JYX%2CJCX%2CGYX%2C");
	  queryPayForParams.put("riskCNameCarRelationList","%BB%FA%B6%AF%B3%B5%BC%DD%CA%BB%C8%CB%D4%B1%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%2C%BB%FA%B6%AF%B3%B5%BC%DD%B3%CB%C8%CB%D4%B1%CD%C5%CC%E5%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%2C%BD%BB%CD%A8%B9%A4%BE%DF%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%2C");
	  queryPayForParams.put("isProposalCarRelationJYX","0");
	  queryPayForParams.put("RiskCNameCarRelationJYX","%BB%FA%B6%AF%B3%B5%BC%DD%CA%BB%C8%CB%D4%B1%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5");
	  queryPayForParams.put("RiskCodeCarRelationJYX","2703");
	  queryPayForParams.put("CoinsuranceFlagCarRelationJYX","0");
	  queryPayForParams.put("CoinsFlagCarRelationJYX","0");
	  queryPayForParams.put("RefreshFlagCoinsCarRelationJYX","0");
	  queryPayForParams.put("ProportionFlag1CarRelationJYX","");
	  queryPayForParams.put("ProportionFlag2CarRelationJYX","");
	  queryPayForParams.put("ProposalNoCarRelationJYX","");
	  queryPayForParams.put("dlfalgCarRelationJYX","");
	  queryPayForParams.put("CoinslinkFlagCarRelationJYX","0");
	  queryPayForParams.put("BusinessNature_FlagCarRelationJYX","");
	  queryPayForParams.put("UserTypeDomainCarRelationJYX","");
	  queryPayForParams.put("ChannelTypeCarRelationJYX","03");
	  queryPayForParams.put("RelateComCode_FlagCarRelationJYX","false");
	  queryPayForParams.put("HandlerCodeCarRelationJYX","null");
	  queryPayForParams.put("HandlerNameCarRelationJYX","null");
	  queryPayForParams.put("Handler1CodeCarRelationJYX","");
	  queryPayForParams.put("Handler1NameCarRelationJYX","");
	  queryPayForParams.put("testCarRelationJYX","");
	  queryPayForParams.put("MakeComCarRelationJYX","");
	  queryPayForParams.put("ComCodeCarRelationJYX","");
	  queryPayForParams.put("ComNameCarRelationJYX","");
	  queryPayForParams.put("GroupTypeCarRelationJYX","");
	  queryPayForParams.put("BusinessNatureCarRelationJYX","");
	  queryPayForParams.put("BusinessNatureNameCarRelationJYX","");
	  queryPayForParams.put("AgentCodeCarRelationJYX","");
	  queryPayForParams.put("AgentNameCarRelationJYX","");
	  queryPayForParams.put("AgentDaysCarRelationJYX","");
	  queryPayForParams.put("PerendDateCarRelationJYX","");
	  queryPayForParams.put("AgentStartSysDaysCarRelationJYX","");
	  queryPayForParams.put("AgreementCarRelationJYX","%B4%FA%C0%ED%D0%AD%D2%E9%BA%C5%A3%BA");
	  queryPayForParams.put("AgreementNoCarRelationJYX","");
	  queryPayForParams.put("AgreeDaysCarRelationJYX","");
	  queryPayForParams.put("AgreementEndDateCarRelationJYX","");
	  queryPayForParams.put("AgreeStartSysDaysCarRelationJYX","");
	  queryPayForParams.put("AgreementFlagCarRelationJYX","");
	  queryPayForParams.put("button_SelectAgreement_Insert1CarRelationJYX","%D1%A1%D4%F1%D0%AD%D2%E9");
	  queryPayForParams.put("button_SelectAgreement_InsertCarRelationJYX","");
	  queryPayForParams.put("FactorPlaceCodeCarRelationJYX","");
	  queryPayForParams.put("FactorPlaceNameCarRelationJYX","");
	  queryPayForParams.put("FactoryCodeCarRelationJYX","");
	  queryPayForParams.put("FactoryNameCarRelationJYX","");
	  queryPayForParams.put("psnlevel1CarRelationJYX","");
	  queryPayForParams.put("psnlevel2CarRelationJYX","");
	  queryPayForParams.put("LifeInsuranceFlagCarRelationJYX","false");
	  queryPayForParams.put("AgentprofenoCarRelationJYX","");
	  queryPayForParams.put("AgentprofenameCarRelationJYX","");
	  queryPayForParams.put("handler2PhoneNumberCarRelationJYX","");
	  queryPayForParams.put("productCodeCarRelationJYX","27030042");
	  queryPayForParams.put("DrivingLicenseTypeCarRelationJYX","");
	  queryPayForParams.put("ProposalNumberCarRelationJYX","1");
	  queryPayForParams.put("ItemKindMain_FlagCarRelationJYX","");
	  queryPayForParams.put("KindCodeMainCarRelationJYX","");
	  queryPayForParams.put("KindNameMainCarRelationJYX","");
	  queryPayForParams.put("ItemKindNoMainCarRelationJYX","");
	  queryPayForParams.put("StartDateMainCarRelationJYX","");
	  queryPayForParams.put("EndDateMainCarRelationJYX","");
	  queryPayForParams.put("CalculateFlagMainCarRelationJYX","Y");
	  queryPayForParams.put("CalculatorMainCarRelationJYX","1000");
	  queryPayForParams.put("ItemCodeMainCarRelationJYX","");
	  queryPayForParams.put("ItemDetailNameMainCarRelationJYX","");
	  queryPayForParams.put("ItemNameMainCarRelationJYX","");
	  queryPayForParams.put("ItemNoMainCarRelationJYX","");
	  queryPayForParams.put("CurrencyMainCarRelationJYX","CNY");
	  queryPayForParams.put("CurrencyNameMainCarRelationJYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMainCarRelationJYX","");
	  queryPayForParams.put("AmountMainShowCarRelationJYX","0.00");
	  queryPayForParams.put("PremiumMainCarRelationJYX","0.00");
	  queryPayForParams.put("RateMainCarRelationJYX","0.00000");
	  queryPayForParams.put("AmountMainCarRelationJYX","0.00");
	  queryPayForParams.put("UnitAmountMainCarRelationJYX","0.00");
	  queryPayForParams.put("QuantityMainCarRelationJYX","0");
	  queryPayForParams.put("ItemKindSub_FlagCarRelationJYX","");
	  queryPayForParams.put("KindNameSubCarRelationJYX","");
	  queryPayForParams.put("KindCodeSubCarRelationJYX","");
	  queryPayForParams.put("ItemKindNoSubCarRelationJYX","");
	  queryPayForParams.put("CalculateFlagSubCarRelationJYX","N");
	  queryPayForParams.put("ItemCodeSubCarRelationJYX","9999");
	  queryPayForParams.put("ItemDetailNameSubCarRelationJYX","");
	  queryPayForParams.put("ItemCodeSubCarRelationJYX","0019");
	  queryPayForParams.put("ItemNameSubCarRelationJYX","");
	  queryPayForParams.put("CurrencySubCarRelationJYX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationJYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationJYX","");
	  queryPayForParams.put("DeductibleSubCarRelationJYX","");
	  queryPayForParams.put("BenefitRateSubCarRelationJYX","");
	  queryPayForParams.put("AmountSubShowCarRelationJYX","0.00");
	  queryPayForParams.put("PremiumSubCarRelationJYX","0.00");
	  queryPayForParams.put("CurrencySubCarRelationJYX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationJYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationJYX","");
	  queryPayForParams.put("AmountSubCarRelationJYX","0.00");
	  queryPayForParams.put("RateSubCarRelationJYX","0.00000");
	  queryPayForParams.put("UnitAmountSubCarRelationJYX","0.00");
	  queryPayForParams.put("QuantitySubCarRelationJYX","0");
	  queryPayForParams.put("ClauseCodeCarRelationJYX","T2703100");
	  queryPayForParams.put("ClauseHeadCarRelationJYX","%BB%FA%B6%AF%B3%B5%BC%DD%CA%BB%C8%CB%D4%B1%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%CC%D8%D4%BC");
	  queryPayForParams.put("ClauseContextCarRelationJYX","++++%B1%BB%B1%A3%CF%D5%C8%CB%CB%F9%D6%A7%B3%F6%B5%C4%B1%D8%D2%AA%BA%CF%C0%ED%B5%C4%A1%A2%B7%FB%BA%CF%B5%B1%B5%D8%C9%E7%BB%E1%D2%BD%C1%C6%B1%A3%CF%D5%D6%F7%B9%DC%B2%BF%C3%C5%B9%E6%B6%A8%BF%C9%B1%A8%CF%FA%B5%C4%D2%BD%C1%C6%B7%D1%D3%C3%A3%AC%B1%A3%CF%D5%C8%CB%BF%DB%B3%FD%C8%CB%C3%F1%B1%D2100%D4%AA%C3%E2%C5%E2%B6%EE%BA%F3%A3%AC%D4%DA%B1%A3%CF%D5%BD%F0%B6%EE%B7%B6%CE%A7%C4%DA%A3%AC%B0%B480%25%B1%C8%C0%FD%B8%F8%B8%B6%D2%BD%C1%C6%B1%A3%CF%D5%BD%F0");
	  queryPayForParams.put("ItemKindMain_FlagCarRelationJYX","");
	  queryPayForParams.put("KindCodeMainCarRelationJYX","9901669");
	  queryPayForParams.put("KindNameMainCarRelationJYX","%BB%FA%B6%AF%B3%B5%BC%DD%CA%BB%C8%CB%D4%B1%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%A3%A8C%A3%A9%CC%F5%BF%EE");
	  queryPayForParams.put("ItemKindNoMainCarRelationJYX","1");
	  queryPayForParams.put("StartDateMainCarRelationJYX","");
	  queryPayForParams.put("EndDateMainCarRelationJYX","");
	  queryPayForParams.put("CalculateFlagMainCarRelationJYX","Y");
	  queryPayForParams.put("CalculatorMainCarRelationJYX","1000");
	  queryPayForParams.put("ItemCodeMainCarRelationJYX","0019");
	  queryPayForParams.put("ItemDetailNameMainCarRelationJYX","%CB%C0%CD%F6%C9%CB%B2%D0");
	  queryPayForParams.put("ItemNameMainCarRelationJYX","%CB%C0%CD%F6%C9%CB%B2%D0");
	  queryPayForParams.put("ItemNoMainCarRelationJYX","1");
	  queryPayForParams.put("CurrencyMainCarRelationJYX","CNY");
	  queryPayForParams.put("CurrencyNameMainCarRelationJYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMainCarRelationJYX","");
	  queryPayForParams.put("AmountMainShowCarRelationJYX","300%2C000.00");
	  queryPayForParams.put("PremiumMainCarRelationJYX","180.00");
	  queryPayForParams.put("RateMainCarRelationJYX","0.6");
	  queryPayForParams.put("AmountMainCarRelationJYX","300000.00");
	  queryPayForParams.put("UnitAmountMainCarRelationJYX","300000.0");
	  queryPayForParams.put("QuantityMainCarRelationJYX","1.0");
	  queryPayForParams.put("ItemKindSub_FlagCarRelationJYX","");
	  queryPayForParams.put("KindNameSubCarRelationJYX","%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%B8%BD%BC%D3%D2%E2%CD%E2%C9%CB%BA%A6%D2%BD%C1%C6%B7%D1%D3%C3%B1%A3%CF%D5%A3%A8B%A3%A9%CC%F5%BF%EE");
	  queryPayForParams.put("KindCodeSubCarRelationJYX","9001562");
	  queryPayForParams.put("ItemKindNoSubCarRelationJYX","2");
	  queryPayForParams.put("CalculateFlagSubCarRelationJYX","N");
	  queryPayForParams.put("ItemCodeSubCarRelationJYX","9999");
	  queryPayForParams.put("ItemDetailNameSubCarRelationJYX","%CB%C0%CD%F6%C9%CB%B2%D0");
	  queryPayForParams.put("ItemCodeSubCarRelationJYX","");
	  queryPayForParams.put("ItemNameSubCarRelationJYX","%CB%C0%CD%F6%C9%CB%B2%D0");
	  queryPayForParams.put("CurrencySubCarRelationJYX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationJYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationJYX","");
	  queryPayForParams.put("DeductibleSubCarRelationJYX","+100");
	  queryPayForParams.put("BenefitRateSubCarRelationJYX","80");
	  queryPayForParams.put("AmountSubShowCarRelationJYX","0.00");
	  queryPayForParams.put("PremiumSubCarRelationJYX","0.00");
	  queryPayForParams.put("CurrencySubCarRelationJYX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationJYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationJYX","");
	  queryPayForParams.put("AmountSubCarRelationJYX","0.00");
	  queryPayForParams.put("RateSubCarRelationJYX","0");
	  queryPayForParams.put("UnitAmountSubCarRelationJYX","0.0");
	  queryPayForParams.put("QuantitySubCarRelationJYX","1.0");
	  queryPayForParams.put("SumPremiumCarRelationJYX","180.00");
	  queryPayForParams.put("SumPremiumShowCarRelationJYX","180.00+%D4%AA+%2C%C8%CB%C3%F1%B1%D2%B4%F3%D0%B4%D2%BC%B0%DB%B0%C6%CA%B0%D4%AA%D5%FB");
	  queryPayForParams.put("SumAmountCarRelationJYX","300000.00");
	  queryPayForParams.put("StartDateCarRelationJYX","2017-01-11");
	  queryPayForParams.put("StartHourCarRelationJYX","00");
	  queryPayForParams.put("StartMinutesCarRelationJYX","00");
	  queryPayForParams.put("EndDateCarRelationJYX","2018-01-10");
	  queryPayForParams.put("EndHourCarRelationJYX","24");
	  queryPayForParams.put("EndMinutesCarRelationJYX","00");
	  queryPayForParams.put("riskFlagCarRelationJYX","JYX");
	  queryPayForParams.put("riskCNameCarRelationJYX","%BB%FA%B6%AF%B3%B5%BC%DD%CA%BB%C8%CB%D4%B1%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5");
	  queryPayForParams.put("BenefRelateSerialNoCarRelationJYX","1");
	  queryPayForParams.put("BenefSerialNoCarRelationJYX","");
	  queryPayForParams.put("BenefInsured_FlagCarRelationJYX","");
	  queryPayForParams.put("BenefInsuredTypeCarRelationJYX","1");
	  queryPayForParams.put("BenefOccupationCodeCarRelationJYX","");
	  queryPayForParams.put("BenefOccupationNameCarRelationJYX","");
	  queryPayForParams.put("BenefOccupationFlagCarRelationJYX","");
	  queryPayForParams.put("BenefInsuredNatureCarRelationJYX","3");
	  queryPayForParams.put("BenefBusinessSourceCarRelationJYX","");
	  queryPayForParams.put("BenefBusinessSourceNameCarRelationJYX","");
	  queryPayForParams.put("BenefBusinessSortCarRelationJYX","");
	  queryPayForParams.put("BenefBusinessSortNameCarRelationJYX","");
	  queryPayForParams.put("BenefInsuredAddressCarRelationJYX","");
	  queryPayForParams.put("BenefBankCarRelationJYX","");
	  queryPayForParams.put("BenefAccountCarRelationJYX","");
	  queryPayForParams.put("BenefLinkerNameCarRelationJYX","");
	  queryPayForParams.put("BenefPostAddressCarRelationJYX","");
	  queryPayForParams.put("BenefPostCodeCarRelationJYX","");
	  queryPayForParams.put("BenefPhoneNumberCarRelationJYX","");
	  queryPayForParams.put("BenefNAgeCarRelationJYX","");
	  queryPayForParams.put("BenefNBirthdayCarRelationJYX","");
	  queryPayForParams.put("BenefNHealthCarRelationJYX","");
	  queryPayForParams.put("BenefNMarriageCarRelationJYX","1");
	  queryPayForParams.put("BenefNUnitCarRelationJYX","");
	  queryPayForParams.put("BenefNUnitPostCodeCarRelationJYX","");
	  queryPayForParams.put("BenefNUnitTypeCarRelationJYX","00");
	  queryPayForParams.put("BenefNOccupationCodeCarRelationJYX","");
	  queryPayForParams.put("BenefNOccupationNameCarRelationJYX","");
	  queryPayForParams.put("BenefNLocalPoliceStationCarRelationJYX","");
	  queryPayForParams.put("BenefNUnitCarRelationJYX","");
	  queryPayForParams.put("BenefNRoomAddressCarRelationJYX","");
	  queryPayForParams.put("BenefNRoomPostCodeCarRelationJYX","");
	  queryPayForParams.put("BenefNRoomPhoneCarRelationJYX","");
	  queryPayForParams.put("BenefALeaderNameCarRelationJYX","");
	  queryPayForParams.put("BenefALeaderIDCarRelationJYX","");
	  queryPayForParams.put("BenefAPhoneNumberCarRelationJYX","");
	  queryPayForParams.put("BenefAPostCodeCarRelationJYX","");
	  queryPayForParams.put("BenefABusinessCodeCarRelationJYX","");
	  queryPayForParams.put("BenefARevenueRegistNoCarRelationJYX","");
	  queryPayForParams.put("BenefPrpInsuredInsuredCodeCarRelationJYX","");
	  queryPayForParams.put("BenefBenefitFlagCarRelationJYX","");
	  queryPayForParams.put("BenefPrpInsuredInsuredNameCarRelationJYX","");
	  queryPayForParams.put("BenefInsuredIdentityCarRelationJYX","01");
	  queryPayForParams.put("BenefNSexCarRelationJYX","1");
	  queryPayForParams.put("BenefIdentifyTypeCarRelationJYX","01");
	  queryPayForParams.put("BenefIdentifyNumberCarRelationJYX","");
	  queryPayForParams.put("BenefNBrithdayCarRelationJYX","");
	  queryPayForParams.put("BenefBenefitRateCarRelationJYX","");
	  queryPayForParams.put("button_BenefInsured_Insert2CarRelationJYX","%D1%A1+%D4%F1");
	  queryPayForParams.put("Expenses_FlagCarRelationJYX","");
	  queryPayForParams.put("RefreshFlagExpensesCarRelationJYX","");
	  queryPayForParams.put("DisProportionFlagCarRelationJYX","");
	  queryPayForParams.put("SelfRateCarRelationJYX","");
	  queryPayForParams.put("MaxDisRateCarRelationJYX","");
	  queryPayForParams.put("DisRateCarRelationJYX","");
	  queryPayForParams.put("PremiumDisRateCarRelationJYX","0.00");
	  queryPayForParams.put("ChangePremiumDisRateCarRelationJYX","");
	  queryPayForParams.put("ExpensesFlag2CarRelationJYX","");
	  queryPayForParams.put("MaxManageFeeRateCarRelationJYX","");
	  queryPayForParams.put("ManageFeeRateCarRelationJYX","");
	  queryPayForParams.put("DisProportionFlag1CarRelationJYX","");
	  queryPayForParams.put("SelfRate1CarRelationJYX","");
	  queryPayForParams.put("DisRate1CarRelationJYX","");
	  queryPayForParams.put("PremiumDisRate1CarRelationJYX","");
	  queryPayForParams.put("ChangePremiumDisRate1CarRelationJYX","");
	  queryPayForParams.put("ChargeSerialNoCarRelationJYX","");
	  queryPayForParams.put("ChargeRiskCodeCarRelationJYX","");
	  queryPayForParams.put("ChargeFlagCarRelationJYX","");
	  queryPayForParams.put("RefreshFlagChargeCarRelationJYX","");
	  queryPayForParams.put("Currency2FeeJYX","CNY");
	  queryPayForParams.put("ChargeCodeCarRelationJYX","");
	  queryPayForParams.put("ChargeNameCarRelationJYX","");
	  queryPayForParams.put("Currency2ChargeCarRelationJYX","CNY");
	  queryPayForParams.put("CurrencyNameChargeCarRelationJYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateChargeCarRelationJYX","");
	  queryPayForParams.put("BaseAmountCarRelationJYX","10000");
	  queryPayForParams.put("ChargeRateCarRelationJYX","0.0000");
	  queryPayForParams.put("PlanFee2ChargeCarRelationJYX","");
	  queryPayForParams.put("isProposalCarRelationJCX","0");
	  queryPayForParams.put("RiskCNameCarRelationJCX","%BB%FA%B6%AF%B3%B5%BC%DD%B3%CB%C8%CB%D4%B1%CD%C5%CC%E5%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5");
	  queryPayForParams.put("RiskCodeCarRelationJCX","2703");
	  queryPayForParams.put("CoinsuranceFlagCarRelationJCX","0");
	  queryPayForParams.put("CoinsFlagCarRelationJCX","0");
	  queryPayForParams.put("RefreshFlagCoinsCarRelationJCX","0");
	  queryPayForParams.put("ProportionFlag1CarRelationJCX","");
	  queryPayForParams.put("ProportionFlag2CarRelationJCX","");
	  queryPayForParams.put("ProposalNoCarRelationJCX","");
	  queryPayForParams.put("dlfalgCarRelationJCX","");
	  queryPayForParams.put("CoinslinkFlagCarRelationJCX","0");
	  queryPayForParams.put("BusinessNature_FlagCarRelationJCX","");
	  queryPayForParams.put("UserTypeDomainCarRelationJCX","");
	  queryPayForParams.put("ChannelTypeCarRelationJCX","03");
	  queryPayForParams.put("RelateComCode_FlagCarRelationJCX","false");
	  queryPayForParams.put("HandlerCodeCarRelationJCX","null");
	  queryPayForParams.put("HandlerNameCarRelationJCX","null");
	  queryPayForParams.put("Handler1CodeCarRelationJCX","");
	  queryPayForParams.put("Handler1NameCarRelationJCX","");
	  queryPayForParams.put("testCarRelationJCX","");
	  queryPayForParams.put("MakeComCarRelationJCX","");
	  queryPayForParams.put("ComCodeCarRelationJCX","");
	  queryPayForParams.put("ComNameCarRelationJCX","");
	  queryPayForParams.put("GroupTypeCarRelationJCX","");
	  queryPayForParams.put("BusinessNatureCarRelationJCX","");
	  queryPayForParams.put("BusinessNatureNameCarRelationJCX","");
	  queryPayForParams.put("AgentCodeCarRelationJCX","");
	  queryPayForParams.put("AgentNameCarRelationJCX","");
	  queryPayForParams.put("AgentDaysCarRelationJCX","");
	  queryPayForParams.put("PerendDateCarRelationJCX","");
	  queryPayForParams.put("AgentStartSysDaysCarRelationJCX","");
	  queryPayForParams.put("AgreementCarRelationJCX","%B4%FA%C0%ED%D0%AD%D2%E9%BA%C5%A3%BA");
	  queryPayForParams.put("AgreementNoCarRelationJCX","");
	  queryPayForParams.put("AgreeDaysCarRelationJCX","");
	  queryPayForParams.put("AgreementEndDateCarRelationJCX","");
	  queryPayForParams.put("AgreeStartSysDaysCarRelationJCX","");
	  queryPayForParams.put("AgreementFlagCarRelationJCX","");
	  queryPayForParams.put("button_SelectAgreement_Insert1CarRelationJCX","%D1%A1%D4%F1%D0%AD%D2%E9");
	  queryPayForParams.put("button_SelectAgreement_InsertCarRelationJCX","");
	  queryPayForParams.put("FactorPlaceCodeCarRelationJCX","");
	  queryPayForParams.put("FactorPlaceNameCarRelationJCX","");
	  queryPayForParams.put("FactoryCodeCarRelationJCX","");
	  queryPayForParams.put("FactoryNameCarRelationJCX","");
	  queryPayForParams.put("psnlevel1CarRelationJCX","");
	  queryPayForParams.put("psnlevel2CarRelationJCX","");
	  queryPayForParams.put("LifeInsuranceFlagCarRelationJCX","false");
	  queryPayForParams.put("AgentprofenoCarRelationJCX","");
	  queryPayForParams.put("AgentprofenameCarRelationJCX","");
	  queryPayForParams.put("handler2PhoneNumberCarRelationJCX","");
	  queryPayForParams.put("productCodeCarRelationJCX","27030119");
	  queryPayForParams.put("DrivingLicenseTypeCarRelationJCX","");
	  queryPayForParams.put("ProposalNumberCarRelationJCX","1");
	  queryPayForParams.put("ItemKindMain_FlagCarRelationJCX","");
	  queryPayForParams.put("KindCodeMainCarRelationJCX","");
	  queryPayForParams.put("KindNameMainCarRelationJCX","");
	  queryPayForParams.put("ItemKindNoMainCarRelationJCX","");
	  queryPayForParams.put("StartDateMainCarRelationJCX","");
	  queryPayForParams.put("EndDateMainCarRelationJCX","");
	  queryPayForParams.put("CalculateFlagMainCarRelationJCX","Y");
	  queryPayForParams.put("CalculatorMainCarRelationJCX","1000");
	  queryPayForParams.put("ItemCodeMainCarRelationJCX","");
	  queryPayForParams.put("ItemDetailNameMainCarRelationJCX","");
	  queryPayForParams.put("ItemNameMainCarRelationJCX","");
	  queryPayForParams.put("ItemNoMainCarRelationJCX","");
	  queryPayForParams.put("CurrencyMainCarRelationJCX","CNY");
	  queryPayForParams.put("CurrencyNameMainCarRelationJCX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMainCarRelationJCX","");
	  queryPayForParams.put("AmountMainShowCarRelationJCX","0.00");
	  queryPayForParams.put("PremiumMainCarRelationJCX","0.00");
	  queryPayForParams.put("RateMainCarRelationJCX","0.00000");
	  queryPayForParams.put("AmountMainCarRelationJCX","0.00");
	  queryPayForParams.put("UnitAmountMainCarRelationJCX","0.00");
	  queryPayForParams.put("QuantityMainCarRelationJCX","0");
	  queryPayForParams.put("ItemKindSub_FlagCarRelationJCX","");
	  queryPayForParams.put("KindNameSubCarRelationJCX","");
	  queryPayForParams.put("KindCodeSubCarRelationJCX","");
	  queryPayForParams.put("ItemKindNoSubCarRelationJCX","");
	  queryPayForParams.put("CalculateFlagSubCarRelationJCX","N");
	  queryPayForParams.put("ItemCodeSubCarRelationJCX","9999");
	  queryPayForParams.put("ItemDetailNameSubCarRelationJCX","");
	  queryPayForParams.put("ItemCodeSubCarRelationJCX","");
	  queryPayForParams.put("ItemNameSubCarRelationJCX","");
	  queryPayForParams.put("CurrencySubCarRelationJCX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationJCX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationJCX","");
	  queryPayForParams.put("DeductibleSubCarRelationJCX","");
	  queryPayForParams.put("BenefitRateSubCarRelationJCX","");
	  queryPayForParams.put("AmountSubShowCarRelationJCX","0.00");
	  queryPayForParams.put("PremiumSubCarRelationJCX","0.00");
	  queryPayForParams.put("CurrencySubCarRelationJCX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationJCX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationJCX","");
	  queryPayForParams.put("AmountSubCarRelationJCX","0.00");
	  queryPayForParams.put("RateSubCarRelationJCX","0.00000");
	  queryPayForParams.put("UnitAmountSubCarRelationJCX","0.00");
	  queryPayForParams.put("QuantitySubCarRelationJCX","0");
	  queryPayForParams.put("ClauseCodeCarRelationJCX","T2703JCX");
	  queryPayForParams.put("ClauseHeadCarRelationJCX","%BB%FA%B6%AF%B3%B5%BC%DD%B3%CB%C8%CB%D4%B1%CD%C5%CC%E5%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%CC%D8%D4%BC");
	  queryPayForParams.put("ClauseContextCarRelationJCX","++++%B1%BB%B1%A3%CF%D5%C8%CB%CB%F9%D6%A7%B3%F6%B5%C4%B1%D8%D2%AA%BA%CF%C0%ED%B5%C4%A1%A2%B7%FB%BA%CF%B5%B1%B5%D8%C9%E7%BB%E1%D2%BD%C1%C6%B1%A3%CF%D5%D6%F7%B9%DC%B2%BF%C3%C5%B9%E6%B6%A8%BF%C9%B1%A8%CF%FA%B5%C4%D2%BD%C1%C6%B7%D1%D3%C3%A3%AC%B1%A3%CF%D5%C8%CB%BF%DB%B3%FD%C8%CB%C3%F1%B1%D2100%D4%AA%C3%E2%C5%E2%B6%EE%BA%F3%A3%AC%D4%DA%B1%A3%CF%D5%BD%F0%B6%EE%B7%B6%CE%A7%C4%DA%A3%AC%B0%B480%25%B1%C8%C0%FD%B8%F8%B8%B6%D2%BD%C1%C6%B1%A3%CF%D5%BD%F0");
	  queryPayForParams.put("ItemKindMain_FlagCarRelationJCX","");
	  queryPayForParams.put("KindCodeMainCarRelationJCX","9901704");
	  queryPayForParams.put("KindNameMainCarRelationJCX","%BB%FA%B6%AF%B3%B5%BC%DD%B3%CB%C8%CB%D4%B1%CD%C5%CC%E5%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%CC%F5%BF%EE");
	  queryPayForParams.put("ItemKindNoMainCarRelationJCX","1");
	  queryPayForParams.put("StartDateMainCarRelationJCX","");
	  queryPayForParams.put("EndDateMainCarRelationJCX","");
	  queryPayForParams.put("CalculateFlagMainCarRelationJCX","Y");
	  queryPayForParams.put("CalculatorMainCarRelationJCX","1000");
	  queryPayForParams.put("ItemCodeMainCarRelationJCX","0019");
	  queryPayForParams.put("ItemDetailNameMainCarRelationJCX","%CB%C0%CD%F6%C9%CB%B2%D0");
	  queryPayForParams.put("ItemNameMainCarRelationJCX","%CB%C0%CD%F6%C9%CB%B2%D0");
	  queryPayForParams.put("ItemNoMainCarRelationJCX","1");
	  queryPayForParams.put("CurrencyMainCarRelationJCX","CNY");
	  queryPayForParams.put("CurrencyNameMainCarRelationJCX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMainCarRelationJCX","");
	  queryPayForParams.put("AmountMainShowCarRelationJCX","100%2C000.00");
	  queryPayForParams.put("PremiumMainCarRelationJCX","40.00");
	  queryPayForParams.put("RateMainCarRelationJCX","0.4");
	  queryPayForParams.put("AmountMainCarRelationJCX","100000.00");
	  queryPayForParams.put("UnitAmountMainCarRelationJCX","100000.0");
	  queryPayForParams.put("QuantityMainCarRelationJCX","1.0");
	  queryPayForParams.put("ItemKindSub_FlagCarRelationJCX","");
	  queryPayForParams.put("KindNameSubCarRelationJCX","%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%B8%BD%BC%D3%D2%E2%CD%E2%C9%CB%BA%A6%D2%BD%C1%C6%B7%D1%D3%C3%B1%A3%CF%D5%A3%A8B%A3%A9%CC%F5%BF%EE");
	  queryPayForParams.put("KindCodeSubCarRelationJCX","9001562");
	  queryPayForParams.put("ItemKindNoSubCarRelationJCX","2");
	  queryPayForParams.put("CalculateFlagSubCarRelationJCX","N");
	  queryPayForParams.put("ItemCodeSubCarRelationJCX","9999");
	  queryPayForParams.put("ItemDetailNameSubCarRelationJCX","");
	  queryPayForParams.put("ItemCodeSubCarRelationJCX","");
	  queryPayForParams.put("ItemNameSubCarRelationJCX","");
	  queryPayForParams.put("CurrencySubCarRelationJCX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationJCX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationJCX","");
	  queryPayForParams.put("DeductibleSubCarRelationJCX","+100");
	  queryPayForParams.put("BenefitRateSubCarRelationJCX","80");
	  queryPayForParams.put("AmountSubShowCarRelationJCX","0.00");
	  queryPayForParams.put("PremiumSubCarRelationJCX","0.00");
	  queryPayForParams.put("CurrencySubCarRelationJCX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationJCX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationJCX","");
	  queryPayForParams.put("AmountSubCarRelationJCX","0.00");
	  queryPayForParams.put("RateSubCarRelationJCX","0");
	  queryPayForParams.put("UnitAmountSubCarRelationJCX","0.0");
	  queryPayForParams.put("QuantitySubCarRelationJCX","1.0");
	  queryPayForParams.put("SumPremiumCarRelationJCX","40.00");
	  queryPayForParams.put("SumPremiumShowCarRelationJCX","40.00+%D4%AA+%2C%C8%CB%C3%F1%B1%D2%B4%F3%D0%B4%CB%C1%CA%B0%D4%AA%D5%FB");
	  queryPayForParams.put("SumAmountCarRelationJCX","100000.00");
	  queryPayForParams.put("StartDateCarRelationJCX","2017-01-11");
	  queryPayForParams.put("StartHourCarRelationJCX","0");
	  queryPayForParams.put("StartMinutesCarRelationJCX","0");
	  queryPayForParams.put("EndDateCarRelationJCX","2018-01-10");
	  queryPayForParams.put("EndHourCarRelationJCX","24");
	  queryPayForParams.put("EndMinutesCarRelationJCX","00");
	  queryPayForParams.put("riskFlagCarRelationJCX","JCX");
	  queryPayForParams.put("riskCNameCarRelationJCX","%BB%FA%B6%AF%B3%B5%BC%DD%B3%CB%C8%CB%D4%B1%CD%C5%CC%E5%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5");
	  queryPayForParams.put("BenefRelateSerialNoCarRelationJCX","1");
	  queryPayForParams.put("BenefSerialNoCarRelationJCX","");
	  queryPayForParams.put("BenefInsured_FlagCarRelationJCX","");
	  queryPayForParams.put("BenefInsuredTypeCarRelationJCX","1");
	  queryPayForParams.put("BenefOccupationCodeCarRelationJCX","");
	  queryPayForParams.put("BenefOccupationNameCarRelationJCX","");
	  queryPayForParams.put("BenefOccupationFlagCarRelationJCX","");
	  queryPayForParams.put("BenefInsuredNatureCarRelationJCX","3");
	  queryPayForParams.put("BenefBusinessSourceCarRelationJCX","");
	  queryPayForParams.put("BenefBusinessSourceNameCarRelationJCX","");
	  queryPayForParams.put("BenefBusinessSortCarRelationJCX","");
	  queryPayForParams.put("BenefBusinessSortNameCarRelationJCX","");
	  queryPayForParams.put("BenefInsuredAddressCarRelationJCX","");
	  queryPayForParams.put("BenefBankCarRelationJCX","");
	  queryPayForParams.put("BenefAccountCarRelationJCX","");
	  queryPayForParams.put("BenefLinkerNameCarRelationJCX","");
	  queryPayForParams.put("BenefPostAddressCarRelationJCX","");
	  queryPayForParams.put("BenefPostCodeCarRelationJCX","");
	  queryPayForParams.put("BenefPhoneNumberCarRelationJCX","");
	  queryPayForParams.put("BenefNAgeCarRelationJCX","");
	  queryPayForParams.put("BenefNBirthdayCarRelationJCX","");
	  queryPayForParams.put("BenefNHealthCarRelationJCX","");
	  queryPayForParams.put("BenefNMarriageCarRelationJCX","1");
	  queryPayForParams.put("BenefNUnitCarRelationJCX","");
	  queryPayForParams.put("BenefNUnitPostCodeCarRelationJCX","");
	  queryPayForParams.put("BenefNUnitTypeCarRelationJCX","00");
	  queryPayForParams.put("BenefNOccupationCodeCarRelationJCX","");
	  queryPayForParams.put("BenefNOccupationNameCarRelationJCX","");
	  queryPayForParams.put("BenefNLocalPoliceStationCarRelationJCX","");
	  queryPayForParams.put("BenefNUnitCarRelationJCX","");
	  queryPayForParams.put("BenefNRoomAddressCarRelationJCX","");
	  queryPayForParams.put("BenefNRoomPostCodeCarRelationJCX","");
	  queryPayForParams.put("BenefNRoomPhoneCarRelationJCX","");
	  queryPayForParams.put("BenefALeaderNameCarRelationJCX","");
	  queryPayForParams.put("BenefALeaderIDCarRelationJCX","");
	  queryPayForParams.put("BenefAPhoneNumberCarRelationJCX","");
	  queryPayForParams.put("BenefAPostCodeCarRelationJCX","");
	  queryPayForParams.put("BenefABusinessCodeCarRelationJCX","");
	  queryPayForParams.put("BenefARevenueRegistNoCarRelationJCX","");
	  queryPayForParams.put("BenefPrpInsuredInsuredCodeCarRelationJCX","");
	  queryPayForParams.put("BenefBenefitFlagCarRelationJCX","");
	  queryPayForParams.put("BenefPrpInsuredInsuredNameCarRelationJCX","");
	  queryPayForParams.put("BenefInsuredIdentityCarRelationJCX","01");
	  queryPayForParams.put("BenefNSexCarRelationJCX","1");
	  queryPayForParams.put("BenefIdentifyTypeCarRelationJCX","01");
	  queryPayForParams.put("BenefIdentifyNumberCarRelationJCX","");
	  queryPayForParams.put("BenefNBrithdayCarRelationJCX","");
	  queryPayForParams.put("BenefBenefitRateCarRelationJCX","");
	  queryPayForParams.put("button_BenefInsured_Insert2CarRelationJCX","%D1%A1+%D4%F1");
	  queryPayForParams.put("Expenses_FlagCarRelationJCX","");
	  queryPayForParams.put("RefreshFlagExpensesCarRelationJCX","");
	  queryPayForParams.put("DisProportionFlagCarRelationJCX","");
	  queryPayForParams.put("SelfRateCarRelationJCX","");
	  queryPayForParams.put("MaxDisRateCarRelationJCX","");
	  queryPayForParams.put("DisRateCarRelationJCX","");
	  queryPayForParams.put("PremiumDisRateCarRelationJCX","0.00");
	  queryPayForParams.put("ChangePremiumDisRateCarRelationJCX","");
	  queryPayForParams.put("ExpensesFlag2CarRelationJCX","");
	  queryPayForParams.put("MaxManageFeeRateCarRelationJCX","");
	  queryPayForParams.put("ManageFeeRateCarRelationJCX","");
	  queryPayForParams.put("DisProportionFlag1CarRelationJCX","");
	  queryPayForParams.put("SelfRate1CarRelationJCX","");
	  queryPayForParams.put("DisRate1CarRelationJCX","");
	  queryPayForParams.put("PremiumDisRate1CarRelationJCX","");
	  queryPayForParams.put("ChangePremiumDisRate1CarRelationJCX","");
	  queryPayForParams.put("ChargeSerialNoCarRelationJCX","");
	  queryPayForParams.put("ChargeRiskCodeCarRelationJCX","");
	  queryPayForParams.put("ChargeFlagCarRelationJCX","");
	  queryPayForParams.put("RefreshFlagChargeCarRelationJCX","");
	  queryPayForParams.put("Currency2FeeJCX","CNY");
	  queryPayForParams.put("ChargeCodeCarRelationJCX","");
	  queryPayForParams.put("ChargeNameCarRelationJCX","");
	  queryPayForParams.put("Currency2ChargeCarRelationJCX","CNY");
	  queryPayForParams.put("CurrencyNameChargeCarRelationJCX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateChargeCarRelationJCX","");
	  queryPayForParams.put("BaseAmountCarRelationJCX","10000");
	  queryPayForParams.put("ChargeRateCarRelationJCX","0.0000");
	  queryPayForParams.put("PlanFee2ChargeCarRelationJCX","");
	  queryPayForParams.put("isProposalCarRelationGYX","0");
	  queryPayForParams.put("RiskCNameCarRelationGYX","%BD%BB%CD%A8%B9%A4%BE%DF%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5");
	  queryPayForParams.put("RiskCodeCarRelationGYX","2727");
	  queryPayForParams.put("CoinsuranceFlagCarRelationGYX","0");
	  queryPayForParams.put("CoinsFlagCarRelationGYX","0");
	  queryPayForParams.put("RefreshFlagCoinsCarRelationGYX","0");
	  queryPayForParams.put("ProportionFlag1CarRelationGYX","");
	  queryPayForParams.put("ProportionFlag2CarRelationGYX","");
	  queryPayForParams.put("ProposalNoCarRelationGYX","");
	  queryPayForParams.put("dlfalgCarRelationGYX","");
	  queryPayForParams.put("CoinslinkFlagCarRelationGYX","0");
	  queryPayForParams.put("BusinessNature_FlagCarRelationGYX","");
	  queryPayForParams.put("UserTypeDomainCarRelationGYX","");
	  queryPayForParams.put("ChannelTypeCarRelationGYX","03");
	  queryPayForParams.put("RelateComCode_FlagCarRelationGYX","false");
	  queryPayForParams.put("HandlerCodeCarRelationGYX","null");
	  queryPayForParams.put("HandlerNameCarRelationGYX","null");
	  queryPayForParams.put("Handler1CodeCarRelationGYX","");
	  queryPayForParams.put("Handler1NameCarRelationGYX","");
	  queryPayForParams.put("testCarRelationGYX","");
	  queryPayForParams.put("MakeComCarRelationGYX","");
	  queryPayForParams.put("ComCodeCarRelationGYX","");
	  queryPayForParams.put("ComNameCarRelationGYX","");
	  queryPayForParams.put("GroupTypeCarRelationGYX","");
	  queryPayForParams.put("BusinessNatureCarRelationGYX","");
	  queryPayForParams.put("BusinessNatureNameCarRelationGYX","");
	  queryPayForParams.put("AgentCodeCarRelationGYX","");
	  queryPayForParams.put("AgentNameCarRelationGYX","");
	  queryPayForParams.put("AgentDaysCarRelationGYX","");
	  queryPayForParams.put("PerendDateCarRelationGYX","");
	  queryPayForParams.put("AgentStartSysDaysCarRelationGYX","");
	  queryPayForParams.put("AgreementCarRelationGYX","%B4%FA%C0%ED%D0%AD%D2%E9%BA%C5%A3%BA");
	  queryPayForParams.put("AgreementNoCarRelationGYX","");
	  queryPayForParams.put("AgreeDaysCarRelationGYX","");
	  queryPayForParams.put("AgreementEndDateCarRelationGYX","");
	  queryPayForParams.put("AgreeStartSysDaysCarRelationGYX","");
	  queryPayForParams.put("AgreementFlagCarRelationGYX","");
	  queryPayForParams.put("button_SelectAgreement_Insert1CarRelationGYX","%D1%A1%D4%F1%D0%AD%D2%E9");
	  queryPayForParams.put("button_SelectAgreement_InsertCarRelationGYX","");
	  queryPayForParams.put("FactorPlaceCodeCarRelationGYX","");
	  queryPayForParams.put("FactorPlaceNameCarRelationGYX","");
	  queryPayForParams.put("FactoryCodeCarRelationGYX","");
	  queryPayForParams.put("FactoryNameCarRelationGYX","");
	  queryPayForParams.put("psnlevel1CarRelationGYX","");
	  queryPayForParams.put("psnlevel2CarRelationGYX","");
	  queryPayForParams.put("LifeInsuranceFlagCarRelationGYX","false");
	  queryPayForParams.put("AgentprofenoCarRelationGYX","");
	  queryPayForParams.put("AgentprofenameCarRelationGYX","");
	  queryPayForParams.put("handler2PhoneNumberCarRelationGYX","");
	  queryPayForParams.put("productCodeCarRelationGYX","27270007");
	  queryPayForParams.put("DrivingLicenseTypeCarRelationGYX","");
	  queryPayForParams.put("ProposalNumberCarRelationGYX","1");
	  queryPayForParams.put("ItemKindMain_FlagCarRelationGYX","");
	  queryPayForParams.put("KindCodeMainCarRelationGYX","");
	  queryPayForParams.put("KindNameMainCarRelationGYX","");
	  queryPayForParams.put("ItemKindNoMainCarRelationGYX","");
	  queryPayForParams.put("StartDateMainCarRelationGYX","");
	  queryPayForParams.put("EndDateMainCarRelationGYX","");
	  queryPayForParams.put("CalculateFlagMainCarRelationGYX","Y");
	  queryPayForParams.put("CalculatorMainCarRelationGYX","1000");
	  queryPayForParams.put("ItemCodeMainCarRelationGYX","");
	  queryPayForParams.put("ItemDetailNameMainCarRelationGYX","");
	  queryPayForParams.put("ItemNameMainCarRelationGYX","");
	  queryPayForParams.put("ItemNoMainCarRelationGYX","");
	  queryPayForParams.put("CurrencyMainCarRelationGYX","CNY");
	  queryPayForParams.put("CurrencyNameMainCarRelationGYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMainCarRelationGYX","");
	  queryPayForParams.put("AmountMainShowCarRelationGYX","0.00");
	  queryPayForParams.put("PremiumMainCarRelationGYX","0.00");
	  queryPayForParams.put("RateMainCarRelationGYX","0.00000");
	  queryPayForParams.put("AmountMainCarRelationGYX","0.00");
	  queryPayForParams.put("UnitAmountMainCarRelationGYX","0.00");
	  queryPayForParams.put("QuantityMainCarRelationGYX","0");
	  queryPayForParams.put("ItemKindSub_FlagCarRelationGYX","");
	  queryPayForParams.put("KindNameSubCarRelationGYX","");
	  queryPayForParams.put("KindCodeSubCarRelationGYX","");
	  queryPayForParams.put("ItemKindNoSubCarRelationGYX","");
	  queryPayForParams.put("CalculateFlagSubCarRelationGYX","N");
	  queryPayForParams.put("ItemCodeSubCarRelationGYX","9999");
	  queryPayForParams.put("ItemDetailNameSubCarRelationGYX","");
	  queryPayForParams.put("ItemCodeSubCarRelationGYX","");
	  queryPayForParams.put("ItemNameSubCarRelationGYX","");
	  queryPayForParams.put("CurrencySubCarRelationGYX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationGYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationGYX","");
	  queryPayForParams.put("DeductibleSubCarRelationGYX","");
	  queryPayForParams.put("BenefitRateSubCarRelationGYX","");
	  queryPayForParams.put("AmountSubShowCarRelationGYX","0.00");
	  queryPayForParams.put("PremiumSubCarRelationGYX","0.00");
	  queryPayForParams.put("CurrencySubCarRelationGYX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationGYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationGYX","");
	  queryPayForParams.put("AmountSubCarRelationGYX","0.00");
	  queryPayForParams.put("RateSubCarRelationGYX","0.00000");
	  queryPayForParams.put("UnitAmountSubCarRelationGYX","0.00");
	  queryPayForParams.put("QuantitySubCarRelationGYX","0");
	  queryPayForParams.put("ClauseCodeCarRelationGYX","T2727GYX");
	  queryPayForParams.put("ClauseHeadCarRelationGYX","%BD%BB%CD%A8%B9%A4%BE%DF%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%CC%D8%D4%BC");
	  queryPayForParams.put("ClauseContextCarRelationGYX","++++%B1%BB%B1%A3%CF%D5%C8%CB%CB%F9%D6%A7%B3%F6%B5%C4%B1%D8%D2%AA%BA%CF%C0%ED%B5%C4%A1%A2%B7%FB%BA%CF%B5%B1%B5%D8%C9%E7%BB%E1%D2%BD%C1%C6%B1%A3%CF%D5%D6%F7%B9%DC%B2%BF%C3%C5%B9%E6%B6%A8%BF%C9%B1%A8%CF%FA%B5%C4%D2%BD%C1%C6%B7%D1%D3%C3%A3%AC%B1%A3%CF%D5%C8%CB%BF%DB%B3%FD%C8%CB%C3%F1%B1%D2100%D4%AA%C3%E2%C5%E2%B6%EE%BA%F3%A3%AC%D4%DA%B1%A3%CF%D5%BD%F0%B6%EE%B7%B6%CE%A7%C4%DA%A3%AC%B0%B480%25%B1%C8%C0%FD%B8%F8%B8%B6%D2%BD%C1%C6%B1%A3%CF%D5%BD%F0");
	  queryPayForParams.put("ItemKindMain_FlagCarRelationGYX","");
	  queryPayForParams.put("KindCodeMainCarRelationGYX","9001880");
	  queryPayForParams.put("KindNameMainCarRelationGYX","%BD%BB%CD%A8%B9%A4%BE%DF%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%CC%F5%BF%EE");
	  queryPayForParams.put("ItemKindNoMainCarRelationGYX","1");
	  queryPayForParams.put("StartDateMainCarRelationGYX","");
	  queryPayForParams.put("EndDateMainCarRelationGYX","");
	  queryPayForParams.put("CalculateFlagMainCarRelationGYX","Y");
	  queryPayForParams.put("CalculatorMainCarRelationGYX","1000");
	  queryPayForParams.put("ItemCodeMainCarRelationGYX","0001");
	  queryPayForParams.put("ItemDetailNameMainCarRelationGYX","%C3%F1%BA%BD%B7%C9%BB%FA");
	  queryPayForParams.put("ItemNameMainCarRelationGYX","%C3%F1%BA%BD%B7%C9%BB%FA");
	  queryPayForParams.put("ItemNoMainCarRelationGYX","1");
	  queryPayForParams.put("CurrencyMainCarRelationGYX","CNY");
	  queryPayForParams.put("CurrencyNameMainCarRelationGYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMainCarRelationGYX","");
	  queryPayForParams.put("AmountMainShowCarRelationGYX","1%2C000%2C000.00");
	  queryPayForParams.put("PremiumMainCarRelationGYX","24.00");
	  queryPayForParams.put("RateMainCarRelationGYX","0.024");
	  queryPayForParams.put("AmountMainCarRelationGYX","1000000.00");
	  queryPayForParams.put("UnitAmountMainCarRelationGYX","1000000.0");
	  queryPayForParams.put("QuantityMainCarRelationGYX","1.0");
	  queryPayForParams.put("ItemKindMain_FlagCarRelationGYX","");
	  queryPayForParams.put("KindCodeMainCarRelationGYX","9001880");
	  queryPayForParams.put("KindNameMainCarRelationGYX","%BD%BB%CD%A8%B9%A4%BE%DF%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%CC%F5%BF%EE");
	  queryPayForParams.put("ItemKindNoMainCarRelationGYX","2");
	  queryPayForParams.put("StartDateMainCarRelationGYX","");
	  queryPayForParams.put("EndDateMainCarRelationGYX","");
	  queryPayForParams.put("CalculateFlagMainCarRelationGYX","Y");
	  queryPayForParams.put("CalculatorMainCarRelationGYX","1000");
	  queryPayForParams.put("ItemCodeMainCarRelationGYX","0002");
	  queryPayForParams.put("ItemDetailNameMainCarRelationGYX","%BB%F0%B3%B5%A3%A8%B5%D8%CC%FA%A1%A2%C7%E1%B9%EC%A3%A9");
	  queryPayForParams.put("ItemNameMainCarRelationGYX","%BB%F0%B3%B5%A3%A8%B5%D8%CC%FA%A1%A2%C7%E1%B9%EC%A3%A9");
	  queryPayForParams.put("ItemNoMainCarRelationGYX","2");
	  queryPayForParams.put("CurrencyMainCarRelationGYX","CNY");
	  queryPayForParams.put("CurrencyNameMainCarRelationGYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMainCarRelationGYX","");
	  queryPayForParams.put("AmountMainShowCarRelationGYX","1%2C000%2C000.00");
	  queryPayForParams.put("PremiumMainCarRelationGYX","16.00");
	  queryPayForParams.put("RateMainCarRelationGYX","0.016");
	  queryPayForParams.put("AmountMainCarRelationGYX","1000000.00");
	  queryPayForParams.put("UnitAmountMainCarRelationGYX","1000000.0");
	  queryPayForParams.put("QuantityMainCarRelationGYX","1.0");
	  queryPayForParams.put("ItemKindMain_FlagCarRelationGYX","");
	  queryPayForParams.put("KindCodeMainCarRelationGYX","9001880");
	  queryPayForParams.put("KindNameMainCarRelationGYX","%BD%BB%CD%A8%B9%A4%BE%DF%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%CC%F5%BF%EE");
	  queryPayForParams.put("ItemKindNoMainCarRelationGYX","3");
	  queryPayForParams.put("StartDateMainCarRelationGYX","");
	  queryPayForParams.put("EndDateMainCarRelationGYX","");
	  queryPayForParams.put("CalculateFlagMainCarRelationGYX","Y");
	  queryPayForParams.put("CalculatorMainCarRelationGYX","1000");
	  queryPayForParams.put("ItemCodeMainCarRelationGYX","0003");
	  queryPayForParams.put("ItemDetailNameMainCarRelationGYX","%C6%FB%B3%B5%A3%A8%B5%E7%B3%B5%A1%A2%D3%D0%B9%EC%B5%E7%B3%B5%A3%A9");
	  queryPayForParams.put("ItemNameMainCarRelationGYX","%C6%FB%B3%B5%A3%A8%B5%E7%B3%B5%A1%A2%D3%D0%B9%EC%B5%E7%B3%B5%A3%A9");
	  queryPayForParams.put("ItemNoMainCarRelationGYX","3");
	  queryPayForParams.put("CurrencyMainCarRelationGYX","CNY");
	  queryPayForParams.put("CurrencyNameMainCarRelationGYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMainCarRelationGYX","");
	  queryPayForParams.put("AmountMainShowCarRelationGYX","0.00");
	  queryPayForParams.put("PremiumMainCarRelationGYX","0.00");
	  queryPayForParams.put("RateMainCarRelationGYX","0");
	  queryPayForParams.put("AmountMainCarRelationGYX","0.00");
	  queryPayForParams.put("UnitAmountMainCarRelationGYX","0.0");
	  queryPayForParams.put("QuantityMainCarRelationGYX","1.0");
	  queryPayForParams.put("ItemKindMain_FlagCarRelationGYX","");
	  queryPayForParams.put("KindCodeMainCarRelationGYX","9001880");
	  queryPayForParams.put("KindNameMainCarRelationGYX","%BD%BB%CD%A8%B9%A4%BE%DF%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%CC%F5%BF%EE");
	  queryPayForParams.put("ItemKindNoMainCarRelationGYX","4");
	  queryPayForParams.put("StartDateMainCarRelationGYX","");
	  queryPayForParams.put("EndDateMainCarRelationGYX","");
	  queryPayForParams.put("CalculateFlagMainCarRelationGYX","Y");
	  queryPayForParams.put("CalculatorMainCarRelationGYX","1000");
	  queryPayForParams.put("ItemCodeMainCarRelationGYX","0004");
	  queryPayForParams.put("ItemDetailNameMainCarRelationGYX","%BF%CD%B4%AC%A1%A2%B6%C9%B4%AC%A1%A2%D3%CE%B4%AC");
	  queryPayForParams.put("ItemNameMainCarRelationGYX","%BF%CD%B4%AC%A1%A2%B6%C9%B4%AC%A1%A2%D3%CE%B4%AC");
	  queryPayForParams.put("ItemNoMainCarRelationGYX","4");
	  queryPayForParams.put("CurrencyMainCarRelationGYX","CNY");
	  queryPayForParams.put("CurrencyNameMainCarRelationGYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateMainCarRelationGYX","");
	  queryPayForParams.put("AmountMainShowCarRelationGYX","0.00");
	  queryPayForParams.put("PremiumMainCarRelationGYX","0.00");
	  queryPayForParams.put("RateMainCarRelationGYX","0");
	  queryPayForParams.put("AmountMainCarRelationGYX","0.00");
	  queryPayForParams.put("UnitAmountMainCarRelationGYX","0.0");
	  queryPayForParams.put("QuantityMainCarRelationGYX","1.0");
	  queryPayForParams.put("ItemKindSub_FlagCarRelationGYX","");
	  queryPayForParams.put("KindNameSubCarRelationGYX","%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5%B8%BD%BC%D3%D2%E2%CD%E2%C9%CB%BA%A6%D2%BD%C1%C6%B7%D1%D3%C3%B1%A3%CF%D5%A3%A8B%A3%A9%CC%F5%BF%EE");
	  queryPayForParams.put("KindCodeSubCarRelationGYX","9001562");
	  queryPayForParams.put("ItemKindNoSubCarRelationGYX","5");
	  queryPayForParams.put("CalculateFlagSubCarRelationGYX","N");
	  queryPayForParams.put("ItemCodeSubCarRelationGYX","9999");
	  queryPayForParams.put("ItemDetailNameSubCarRelationGYX","");
	  queryPayForParams.put("ItemCodeSubCarRelationGYX","");
	  queryPayForParams.put("ItemNameSubCarRelationGYX","");
	  queryPayForParams.put("CurrencySubCarRelationGYX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationGYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationGYX","");
	  queryPayForParams.put("DeductibleSubCarRelationGYX","+100");
	  queryPayForParams.put("BenefitRateSubCarRelationGYX","80");
	  queryPayForParams.put("AmountSubShowCarRelationGYX","0.00");
	  queryPayForParams.put("PremiumSubCarRelationGYX","0.00");
	  queryPayForParams.put("CurrencySubCarRelationGYX","CNY");
	  queryPayForParams.put("CurrencyNameSubCarRelationGYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateSubCarRelationGYX","");
	  queryPayForParams.put("AmountSubCarRelationGYX","0.00");
	  queryPayForParams.put("RateSubCarRelationGYX","0");
	  queryPayForParams.put("UnitAmountSubCarRelationGYX","0.0");
	  queryPayForParams.put("QuantitySubCarRelationGYX","1.0");
	  queryPayForParams.put("SumPremiumCarRelationGYX","40.00");
	  queryPayForParams.put("SumPremiumShowCarRelationGYX","40.00+%D4%AA+%2C%C8%CB%C3%F1%B1%D2%B4%F3%D0%B4%CB%C1%CA%B0%D4%AA%D5%FB");
	  queryPayForParams.put("SumAmountCarRelationGYX","2000000.00");
	  queryPayForParams.put("StartDateCarRelationGYX","2017-01-11");
	  queryPayForParams.put("StartHourCarRelationGYX","0");
	  queryPayForParams.put("StartMinutesCarRelationGYX","0");
	  queryPayForParams.put("EndDateCarRelationGYX","2018-01-10");
	  queryPayForParams.put("EndHourCarRelationGYX","24");
	  queryPayForParams.put("EndMinutesCarRelationGYX","00");
	  queryPayForParams.put("riskFlagCarRelationGYX","GYX");
	  queryPayForParams.put("riskCNameCarRelationGYX","%BD%BB%CD%A8%B9%A4%BE%DF%D2%E2%CD%E2%C9%CB%BA%A6%B1%A3%CF%D5");
	  queryPayForParams.put("BenefRelateSerialNoCarRelationGYX","1");
	  queryPayForParams.put("BenefSerialNoCarRelationGYX","");
	  queryPayForParams.put("BenefInsured_FlagCarRelationGYX","");
	  queryPayForParams.put("BenefInsuredTypeCarRelationGYX","1");
	  queryPayForParams.put("BenefOccupationCodeCarRelationGYX","");
	  queryPayForParams.put("BenefOccupationNameCarRelationGYX","");
	  queryPayForParams.put("BenefOccupationFlagCarRelationGYX","");
	  queryPayForParams.put("BenefInsuredNatureCarRelationGYX","3");
	  queryPayForParams.put("BenefBusinessSourceCarRelationGYX","");
	  queryPayForParams.put("BenefBusinessSourceNameCarRelationGYX","");
	  queryPayForParams.put("BenefBusinessSortCarRelationGYX","");
	  queryPayForParams.put("BenefBusinessSortNameCarRelationGYX","");
	  queryPayForParams.put("BenefInsuredAddressCarRelationGYX","");
	  queryPayForParams.put("BenefBankCarRelationGYX","");
	  queryPayForParams.put("BenefAccountCarRelationGYX","");
	  queryPayForParams.put("BenefLinkerNameCarRelationGYX","");
	  queryPayForParams.put("BenefPostAddressCarRelationGYX","");
	  queryPayForParams.put("BenefPostCodeCarRelationGYX","");
	  queryPayForParams.put("BenefPhoneNumberCarRelationGYX","");
	  queryPayForParams.put("BenefNAgeCarRelationGYX","");
	  queryPayForParams.put("BenefNBirthdayCarRelationGYX","");
	  queryPayForParams.put("BenefNHealthCarRelationGYX","");
	  queryPayForParams.put("BenefNMarriageCarRelationGYX","1");
	  queryPayForParams.put("BenefNUnitCarRelationGYX","");
	  queryPayForParams.put("BenefNUnitPostCodeCarRelationGYX","");
	  queryPayForParams.put("BenefNOccupationCodeCarRelationGYX","");
	  queryPayForParams.put("BenefNOccupationNameCarRelationGYX","");
	  queryPayForParams.put("BenefNLocalPoliceStationCarRelationGYX","");
	  queryPayForParams.put("BenefNUnitCarRelationGYX","");
	  queryPayForParams.put("BenefNRoomAddressCarRelationGYX","");
	  queryPayForParams.put("BenefNRoomPostCodeCarRelationGYX","");
	  queryPayForParams.put("BenefNRoomPhoneCarRelationGYX","");
	  queryPayForParams.put("BenefALeaderNameCarRelationGYX","");
	  queryPayForParams.put("BenefALeaderIDCarRelationGYX","");
	  queryPayForParams.put("BenefAPhoneNumberCarRelationGYX","");
	  queryPayForParams.put("BenefAPostCodeCarRelationGYX","");
	  queryPayForParams.put("BenefABusinessCodeCarRelationGYX","");
	  queryPayForParams.put("BenefARevenueRegistNoCarRelationGYX","");
	  queryPayForParams.put("BenefPrpInsuredInsuredCodeCarRelationGYX","");
	  queryPayForParams.put("BenefBenefitFlagCarRelationGYX","");
	  queryPayForParams.put("BenefPrpInsuredInsuredNameCarRelationGYX","");
	  queryPayForParams.put("BenefInsuredIdentityCarRelationGYX","01");
	  queryPayForParams.put("BenefNSexCarRelationGYX","1");
	  queryPayForParams.put("BenefIdentifyTypeCarRelationGYX","01");
	  queryPayForParams.put("BenefIdentifyNumberCarRelationGYX","");
	  queryPayForParams.put("BenefNBrithdayCarRelationGYX","");
	  queryPayForParams.put("BenefBenefitRateCarRelationGYX","");
	  queryPayForParams.put("button_BenefInsured_Insert2CarRelationGYX","%D1%A1+%D4%F1");
	  queryPayForParams.put("Expenses_FlagCarRelationGYX","");
	  queryPayForParams.put("RefreshFlagExpensesCarRelationGYX","");
	  queryPayForParams.put("DisProportionFlagCarRelationGYX","");
	  queryPayForParams.put("SelfRateCarRelationGYX","");
	  queryPayForParams.put("MaxDisRateCarRelationGYX","");
	  queryPayForParams.put("DisRateCarRelationGYX","");
	  queryPayForParams.put("PremiumDisRateCarRelationGYX","0.00");
	  queryPayForParams.put("ChangePremiumDisRateCarRelationGYX","");
	  queryPayForParams.put("ExpensesFlag2CarRelationGYX","");
	  queryPayForParams.put("MaxManageFeeRateCarRelationGYX","");
	  queryPayForParams.put("ManageFeeRateCarRelationGYX","");
	  queryPayForParams.put("DisProportionFlag1CarRelationGYX","");
	  queryPayForParams.put("SelfRate1CarRelationGYX","");
	  queryPayForParams.put("DisRate1CarRelationGYX","");
	  queryPayForParams.put("PremiumDisRate1CarRelationGYX","");
	  queryPayForParams.put("ChangePremiumDisRate1CarRelationGYX","");
	  queryPayForParams.put("ChargeSerialNoCarRelationGYX","");
	  queryPayForParams.put("ChargeRiskCodeCarRelationGYX","");
	  queryPayForParams.put("ChargeFlagCarRelationGYX","");
	  queryPayForParams.put("RefreshFlagChargeCarRelationGYX","");
	  queryPayForParams.put("Currency2FeeGYX","CNY");
	  queryPayForParams.put("ChargeCodeCarRelationGYX","");
	  queryPayForParams.put("ChargeNameCarRelationGYX","");
	  queryPayForParams.put("Currency2ChargeCarRelationGYX","CNY");
	  queryPayForParams.put("CurrencyNameChargeCarRelationGYX","%C8%CB%C3%F1%B1%D2");
	  queryPayForParams.put("ExchangeRateChargeCarRelationGYX","");
	  queryPayForParams.put("BaseAmountCarRelationGYX","10000");
	  queryPayForParams.put("ChargeRateCarRelationGYX","0.0000");
	  queryPayForParams.put("PlanFee2ChargeCarRelationGYX","");
	  queryPayForParams.put("BuzContractFirstClick","1");
	  queryPayForParams.put("isFirst","0");

  }
 

}
